<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Exe\ic.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Exe\ic.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6130100: Last Updated: Sun Jan  3 19:39:15 2021
<BR><P>
<H3>Maximum Stack Usage =       3256 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; DISPService &rArr; GUI_PNG_Draw &rArr; png_handle_iCCP &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2c]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">SVC_Handler</a><BR>
 <LI><a href="#[2e]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">PendSV_Handler</a><BR>
 <LI><a href="#[42]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">ADC_IRQHandler</a><BR>
 <LI><a href="#[1c8]">LOGGER_Write</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c7]">ErrorHandler</a><BR>
 <LI><a href="#[4a7]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a7]">_Findy1</a><BR>
 <LI><a href="#[4a9]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a9]">_Findx1</a><BR>
 <LI><a href="#[4a8]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a8]">_Findx0</a><BR>
 <LI><a href="#[45d]">_PopFreeBlock</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a2]">_EnlargeBlocks</a><BR>
 <LI><a href="#[328]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32c]">_InitOnce</a><BR>
 <LI><a href="#[44a]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44a]">WM__InvalidateRect</a><BR>
 <LI><a href="#[431]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[431]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[42b]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42b]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[412]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[437]">WM__SendMessage</a><BR>
 <LI><a href="#[4ce]">_QR_INPUT_EncodeBitStream</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4ce]">_QR_INPUT_EncodeBitStream</a><BR>
 <LI><a href="#[4a3]">_FRAME_FILLER_Next</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a3]">_FRAME_FILLER_Next</a><BR>
 <LI><a href="#[416]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9e]">WM_DeleteWindow</a><BR>
 <LI><a href="#[450]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[450]">_PaintTransChildren</a><BR>
 <LI><a href="#[c7]">mem_cpy</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c7]">mem_cpy</a><BR>
 <LI><a href="#[2a4]">mem_copy</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a4]">mem_copy</a><BR>
 <LI><a href="#[439]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ff]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[44c]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44c]">_MoveDescendents</a><BR>
 <LI><a href="#[41b]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41b]">WM__ForEachDesc</a><BR>
 <LI><a href="#[430]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[430]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[4e0]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e0]">_Screen2hWin</a><BR>
 <LI><a href="#[c8]">_InvertAlpha</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c8]">_InvertAlpha</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[42]">ADC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[d9]">BUTTON_Callback</a> from button.o(i.BUTTON_Callback) referenced from button.o(i.BUTTON_CreateUser)
 <LI><a href="#[94]">BUTTON_Create</a> from button.o(i.BUTTON_Create) referenced from lto-llvm-dbe362.o(.text.DISPCreateKeypad)
 <LI><a href="#[14]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced 2 times from button.o(.data)
 <LI><a href="#[95]">BUTTON_SetFont</a> from button.o(i.BUTTON_SetFont) referenced from lto-llvm-dbe362.o(.text.DISPCreateKeypad)
 <LI><a href="#[95]">BUTTON_SetFont</a> from button.o(i.BUTTON_SetFont) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[96]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from lto-llvm-dbe362.o(.text.DISPCreateKeypad)
 <LI><a href="#[96]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[2a]">BusFault_Handler</a> from lto-llvm-dbe362.o(.text.BusFault_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[44]">CAN1_RX0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[45]">CAN1_RX1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[46]">CAN1_SCE_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[43]">CAN1_TX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[70]">CAN2_RX0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[71]">CAN2_RX1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[72]">CAN2_SCE_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6f]">CAN2_TX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[8d]">CEC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[da]">CHECKBOX_Callback</a> from checkbox.o(i.CHECKBOX_Callback) referenced from checkbox.o(i.CHECKBOX_CreateUser)
 <LI><a href="#[16]">CHECKBOX_DrawSkinFlex</a> from checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[15]">CHECKBOX__GetButtonSize</a> from checkbox.o(i.CHECKBOX__GetButtonSize) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[7e]">DCMI_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3b]">DMA1_Stream0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3c]">DMA1_Stream1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3d]">DMA1_Stream2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3e]">DMA1_Stream3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3f]">DMA1_Stream4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[40]">DMA1_Stream5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[41]">DMA1_Stream6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5f]">DMA1_Stream7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[89]">DMA2D_IRQHandler</a> from lto-llvm-dbe362.o(.text.DMA2D_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[68]">DMA2_Stream0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[69]">DMA2_Stream1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6a]">DMA2_Stream2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6b]">DMA2_Stream3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6c]">DMA2_Stream4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[74]">DMA2_Stream5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[75]">DMA2_Stream6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[76]">DMA2_Stream7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2d]">DebugMon_Handler</a> from lto-llvm-dbe362.o(.text.DebugMon_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[db]">EDIT_Callback</a> from edit.o(i.EDIT_Callback) referenced from edit.o(i.EDIT_CreateUser)
 <LI><a href="#[a2]">EE_ReadBuffer</a> from lto-llvm-dbe362.o(.text.EE_ReadBuffer) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[cc]">EE_WriteBuffer</a> from lto-llvm-dbe362.o(.text.EE_WriteBuffer) referenced from lto-llvm-dbe362.o(.text.main)
 <LI><a href="#[6d]">ETH_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6e]">ETH_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[36]">EXTI0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[58]">EXTI15_10_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[37]">EXTI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[38]">EXTI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[39]">EXTI3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3a]">EXTI4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[47]">EXTI9_5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[34]">FLASH_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[60]">FMC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[80]">FPU_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[155]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[156]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[157]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[158]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[144]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 14 times from f08_1.o(.constdata)
 <LI><a href="#[145]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 14 times from f08_1.o(.constdata)
 <LI><a href="#[146]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 14 times from f08_1.o(.constdata)
 <LI><a href="#[147]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 14 times from f08_1.o(.constdata)
 <LI><a href="#[de]">GUI_BMP__GetData</a> from gui_bmp.o(i.GUI_BMP__GetData) referenced from gui_bmp.o(i.GUI_BMP_Draw)
 <LI><a href="#[9d]">GUI_DispDecMin</a> from gui_val.o(i.GUI_DispDecMin) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[98]">GUI_DispString</a> from gui_dispstring.o(i.GUI_DispString) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[98]">GUI_DispString</a> from gui_dispstring.o(i.GUI_DispString) referenced 2 times from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[99]">GUI_DrawHLine</a> from gui_drawlib.o(i.GUI_DrawHLine) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[99]">GUI_DrawHLine</a> from gui_drawlib.o(i.GUI_DrawHLine) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[97]">GUI_GotoXY</a> from gui_common.o(i.GUI_GotoXY) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[97]">GUI_GotoXY</a> from gui_common.o(i.GUI_GotoXY) referenced 2 times from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[116]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._Paint1)
 <LI><a href="#[115]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[114]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[a3]">GUI_PNG__GetData</a> from lto-llvm-dbe362.o(.text.GUI_PNG__GetData) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[a1]">GUI_SetColor</a> from gui_common.o(i.GUI_SetColor) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[9f]">GUI_SetFont</a> from gui_common.o(i.GUI_SetFont) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[e3]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[177]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[176]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[178]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[17a]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1b]">GUI_X_ExecIdle</a> from lto-llvm-dbe362.o(.text.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[0]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[1]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[ab]">HAL_GPIO_DeInit</a> from lto-llvm-dbe362.o(.text.HAL_GPIO_DeInit) referenced from lto-llvm-dbe362.o(.text.HAL_QSPI_DeInit)
 <LI><a href="#[ab]">HAL_GPIO_DeInit</a> from lto-llvm-dbe362.o(.text.HAL_GPIO_DeInit) referenced from lto-llvm-dbe362.o(.text.Restart)
 <LI><a href="#[ad]">HAL_GPIO_Init</a> from lto-llvm-dbe362.o(.text.HAL_GPIO_Init) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[ad]">HAL_GPIO_Init</a> from lto-llvm-dbe362.o(.text.HAL_GPIO_Init) referenced from lto-llvm-dbe362.o(.text.MX_QSPI_Init)
 <LI><a href="#[ad]">HAL_GPIO_Init</a> from lto-llvm-dbe362.o(.text.HAL_GPIO_Init) referenced from lto-llvm-dbe362.o(.text.main)
 <LI><a href="#[c9]">HAL_MPU_ConfigRegion</a> from lto-llvm-dbe362.o(.text.HAL_MPU_ConfigRegion) referenced from lto-llvm-dbe362.o(.text.main)
 <LI><a href="#[ca]">HAL_SDRAM_SendCommand</a> from lto-llvm-dbe362.o(.text.HAL_SDRAM_SendCommand) referenced from lto-llvm-dbe362.o(.text.main)
 <LI><a href="#[c5]">HAL_UART_DeInit</a> from lto-llvm-dbe362.o(.text.HAL_UART_DeInit) referenced from lto-llvm-dbe362.o(.text.Restart)
 <LI><a href="#[28]">HardFault_Handler</a> from lto-llvm-dbe362.o(.text.HardFault_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[50]">I2C1_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4f]">I2C1_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[52]">I2C2_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[51]">I2C2_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[79]">I2C3_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[78]">I2C3_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[8f]">I2C4_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[8e]">I2C4_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[c3]">Int2Str</a> from lto-llvm-dbe362.o(.text.Int2Str) referenced from lto-llvm-dbe362.o(.text.OW_Service)
 <LI><a href="#[c3]">Int2Str</a> from lto-llvm-dbe362.o(.text.Int2Str) referenced from lto-llvm-dbe362.o(.text.UART_Receive_IT)
 <LI><a href="#[1c]">LCD_AA_MixColors16</a> from lcd_aa.o(i.LCD_AA_MixColors16) referenced 2 times from lcd_aa.o(.data)
 <LI><a href="#[df]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[df]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientV)
 <LI><a href="#[11d]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[9]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[e7]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[e6]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced 2 times from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[e6]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[e6]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui_drawbitmap_8888.o(i._DrawBitmap_8888)
 <LI><a href="#[e6]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i._WriteToActiveAlpha)
 <LI><a href="#[f0]">LCD_Index2Color_M555</a> from guicc_m555_index2color.o(i.LCD_Index2Color_M555) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[125]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[119]">LCD_Index2Color_M8888I</a> from guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[af]">LCD_SetDevFunc</a> from lcd_set.o(i.LCD_SetDevFunc) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[8c]">LPTIM1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[88]">LTDC_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[87]">LTDC_IRQHandler</a> from lto-llvm-dbe362.o(.text.LTDC_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[29]">MemManage_Handler</a> from lto-llvm-dbe362.o(.text.MemManage_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[27]">NMI_Handler</a> from lto-llvm-dbe362.o(.text.NMI_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[73]">OTG_FS_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5a]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7b]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7a]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7d]">OTG_HS_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7c]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[cb]">PID_Hook</a> from lto-llvm-dbe362.o(.text.PID_Hook) referenced from lto-llvm-dbe362.o(.text.main)
 <LI><a href="#[31]">PVD_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2e]">PendSV_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[aa]">QSPI_DMAAbortCplt</a> from lto-llvm-dbe362.o(.text.QSPI_DMAAbortCplt) referenced from lto-llvm-dbe362.o(.text.HAL_QSPI_Abort_IT)
 <LI><a href="#[aa]">QSPI_DMAAbortCplt</a> from lto-llvm-dbe362.o(.text.QSPI_DMAAbortCplt) referenced from lto-llvm-dbe362.o(.text.QUADSPI_IRQHandler)
 <LI><a href="#[8b]">QUADSPI_IRQHandler</a> from lto-llvm-dbe362.o(.text.QUADSPI_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[35]">RCC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7f]">RNG_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[59]">RTC_Alarm_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[33]">RTC_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[26]">Reset_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[86]">SAI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[8a]">SAI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[61]">SDMMC1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[90]">SPDIF_RX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[53]">SPI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[54]">SPI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[63]">SPI3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[83]">SPI4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[84]">SPI5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[85]">SPI6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[ea]">SPINBOX_Callback</a> from spinbox.o(i.SPINBOX_Callback) referenced from spinbox.o(i.SPINBOX_CreateUser)
 <LI><a href="#[9a]">SPINBOX_CreateEx</a> from spinbox.o(i.SPINBOX_CreateEx) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[9a]">SPINBOX_CreateEx</a> from spinbox.o(i.SPINBOX_CreateEx) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[17]">SPINBOX_DrawSkinFlex</a> from spinbox_skinflex.o(i.SPINBOX_DrawSkinFlex) referenced 2 times from spinbox.o(.data)
 <LI><a href="#[a0]">SPINBOX_GetValue</a> from spinbox.o(i.SPINBOX_GetValue) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[9b]">SPINBOX_SetEdge</a> from spinbox.o(i.SPINBOX_SetEdge) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[9b]">SPINBOX_SetEdge</a> from spinbox.o(i.SPINBOX_SetEdge) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[9c]">SPINBOX_SetValue</a> from spinbox.o(i.SPINBOX_SetValue) referenced from lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
 <LI><a href="#[9c]">SPINBOX_SetValue</a> from spinbox.o(i.SPINBOX_SetValue) referenced from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[2c]">SVC_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[c4]">Str2Hex</a> from lto-llvm-dbe362.o(.text.Str2Hex) referenced from lto-llvm-dbe362.o(.text.RS485_Service)
 <LI><a href="#[2f]">SysTick_Handler</a> from lto-llvm-dbe362.o(.text.SysTick_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[92]">SystemInit</a> from lto-llvm-dbe362.o(.text.SystemInit) referenced from startup_stm32f746xx.o(.text)
 <LI><a href="#[32]">TAMP_STAMP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[48]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4b]">TIM1_CC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4a]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[49]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4c]">TIM2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4d]">TIM3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4e]">TIM4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[62]">TIM5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[66]">TIM6_DAC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[67]">TIM7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5b]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5e]">TIM8_CC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5d]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5c]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[c6]">TS_IO_Read</a> from lto-llvm-dbe362.o(.text.TS_IO_Read) referenced from lto-llvm-dbe362.o(.text.TS_Service)
 <LI><a href="#[64]">UART4_IRQHandler</a> from lto-llvm-dbe362.o(.text.UART4_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[65]">UART5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[81]">UART7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[82]">UART8_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[ac]">UART_DMAAbortOnError</a> from lto-llvm-dbe362.o(.text.UART_DMAAbortOnError) referenced from lto-llvm-dbe362.o(.text.HAL_UART_IRQHandler)
 <LI><a href="#[55]">USART1_IRQHandler</a> from lto-llvm-dbe362.o(.text.USART1_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[56]">USART2_IRQHandler</a> from lto-llvm-dbe362.o(.text.USART2_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[57]">USART3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[77]">USART6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2b]">UsageFault_Handler</a> from lto-llvm-dbe362.o(.text.UsageFault_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[17b]">WIDGET_EFFECT_3D_DrawUp</a> from widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[9e]">WM_DeleteWindow</a> from wm.o(i.WM_DeleteWindow) referenced from lto-llvm-dbe362.o(.text.DISPDeleteSettings2Screen)
 <LI><a href="#[9e]">WM_DeleteWindow</a> from wm.o(i.WM_DeleteWindow) referenced 2 times from lto-llvm-dbe362.o(.text.DISPService)
 <LI><a href="#[e2]">WM_HandlePID</a> from wm_touch.o(i.WM_HandlePID) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[117]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._Paint1)
 <LI><a href="#[30]">WWDG_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[dc]">_AddKeyDec</a> from editdec.o(i._AddKeyDec) referenced from editdec.o(i.EDIT_SetDecMode)
 <LI><a href="#[122]">_CalcSizeOfChar</a> from gui_uc_encodeutf8.o(i._CalcSizeOfChar) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[127]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced 2 times from guicc_m565.o(.constdata)
 <LI><a href="#[b5]">_Color2IndexBulk_M1555I_DMA2D</a> from lto-llvm-dbe362.o(.text._Color2IndexBulk_M1555I_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b9]">_Color2IndexBulk_M4444I_DMA2D</a> from lto-llvm-dbe362.o(.text._Color2IndexBulk_M4444I_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b7]">_Color2IndexBulk_M565_DMA2D</a> from lto-llvm-dbe362.o(.text._Color2IndexBulk_M565_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[11b]">_Color2IndexBulk_M8888I</a> from guicc_m8888i.o(i._Color2IndexBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[bd]">_Color2IndexBulk_M8888I_DMA2D</a> from lto-llvm-dbe362.o(.text._Color2IndexBulk_M8888I_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[bb]">_Color2IndexBulk_M888_DMA2D</a> from lto-llvm-dbe362.o(.text._Color2IndexBulk_M888_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[14e]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[151]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[124]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[118]">_Color2Index_M8888I</a> from guicc_m8888i.o(i._Color2Index_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[ff]">_CopyBuffer</a> from guidrv_lin_16.o(i._CopyBuffer) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[1e]">_Create</a> from button_skin.o(i._Create) referenced 6 times from button_skin.o(.data)
 <LI><a href="#[bf]">_DMA_AlphaBlending</a> from lto-llvm-dbe362.o(.text._DMA_AlphaBlending) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[c1]">_DMA_MixColors</a> from lto-llvm-dbe362.o(.text._DMA_MixColors) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[12c]">_DrawBitmap</a> from guidrv_lin_16.o(i._DrawBitmap) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[11f]">_DrawBitmapHW_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmapHW_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[11e]">_DrawBitmap_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmap_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[173]">_DrawDown</a> from widget_effect_none.o(i._DrawDown) referenced 3 times from widget_effect_none.o(.constdata)
 <LI><a href="#[174]">_DrawDownRect</a> from widget_effect_none.o(i._DrawDownRect) referenced 3 times from widget_effect_none.o(.constdata)
 <LI><a href="#[175]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[12d]">_DrawHLine</a> from guidrv_lin_16.o(i._DrawHLine) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[4]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[4]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[4]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced from gui_bmp.o(i._DrawBitmap_RGB)
 <LI><a href="#[171]">_DrawUp</a> from widget_effect_none.o(i._DrawUp) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[172]">_DrawUpRect</a> from widget_effect_none.o(i._DrawUpRect) referenced 3 times from widget_effect_none.o(.constdata)
 <LI><a href="#[12e]">_DrawVLine</a> from guidrv_lin_16.o(i._DrawVLine) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[123]">_Encode</a> from gui_uc_encodeutf8.o(i._Encode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[12f]">_FillRect</a> from guidrv_lin_16.o(i._FillRect) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[179]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[120]">_GetCharCode</a> from gui_uc_encodeutf8.o(i._GetCharCode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[121]">_GetCharSize</a> from gui_uc_encodeutf8.o(i._GetCharSize) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[19]">_GetCharWrap</a> from gui__wrap.o(i._GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[25]">_GetCursorCharacter</a> from gui__getcursorpos.o(i._GetCursorCharacter) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[24]">_GetCursorPosChar</a> from gui__getcursorpos.o(i._GetCursorPosChar) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[23]">_GetCursorPosX</a> from gui__getcursorpos.o(i._GetCursorPosX) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[136]">_GetDevData</a> from guidrv_lin_16.o(i._GetDevData) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[134]">_GetDevFunc</a> from guidrv_lin_16.o(i._GetDevFunc) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[135]">_GetDevProp</a> from guidrv_lin_16.o(i._GetDevProp) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[150]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[152]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[126]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[11a]">_GetIndexMask_M8888I</a> from guicc_m8888i.o(i._GetIndexMask_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[130]">_GetPixelIndex</a> from guidrv_lin_16.o(i._GetPixelIndex) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[f6]">_GetPos</a> from guidrv_lin_16.o(i._GetPos) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[137]">_GetRect</a> from guidrv_lin_16.o(i._GetRect) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[18]">_GetWordWrap</a> from gui__wrap.o(i._GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[f1]">_Index2ColorBitfields</a> from gui_bmp.o(i._Index2ColorBitfields) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[128]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced 2 times from guicc_m565.o(.constdata)
 <LI><a href="#[b6]">_Index2ColorBulk_M1555I_DMA2D</a> from lto-llvm-dbe362.o(.text._Index2ColorBulk_M1555I_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[ba]">_Index2ColorBulk_M4444I_DMA2D</a> from lto-llvm-dbe362.o(.text._Index2ColorBulk_M4444I_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b8]">_Index2ColorBulk_M565_DMA2D</a> from lto-llvm-dbe362.o(.text._Index2ColorBulk_M565_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[11c]">_Index2ColorBulk_M8888I</a> from guicc_m8888i.o(i._Index2ColorBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[be]">_Index2ColorBulk_M8888I_DMA2D</a> from lto-llvm-dbe362.o(.text._Index2ColorBulk_M8888I_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[bc]">_Index2ColorBulk_M888_DMA2D</a> from lto-llvm-dbe362.o(.text._Index2ColorBulk_M888_DMA2D) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[14f]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[f9]">_Init</a> from guidrv_lin_16.o(i._Init) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[c8]">_InvertAlpha</a> from lto-llvm-dbe362.o(.text._InvertAlpha) referenced from lto-llvm-dbe362.o(.text._LCD_MixColorsBulk)
 <LI><a href="#[ae]">_LCD_CopyBuffer</a> from lto-llvm-dbe362.o(.text._LCD_CopyBuffer) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b0]">_LCD_CopyRect</a> from lto-llvm-dbe362.o(.text._LCD_CopyRect) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b3]">_LCD_DrawBitmap16bpp</a> from lto-llvm-dbe362.o(.text._LCD_DrawBitmap16bpp) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b2]">_LCD_DrawBitmap32bpp</a> from lto-llvm-dbe362.o(.text._LCD_DrawBitmap32bpp) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b4]">_LCD_DrawBitmap8bpp</a> from lto-llvm-dbe362.o(.text._LCD_DrawBitmap8bpp) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b1]">_LCD_FillRect</a> from lto-llvm-dbe362.o(.text._LCD_FillRect) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[b1]">_LCD_FillRect</a> from lto-llvm-dbe362.o(.text._LCD_FillRect) referenced from lto-llvm-dbe362.o(.text._LCD_FillRect)
 <LI><a href="#[c0]">_LCD_GetpPalConvTable</a> from lto-llvm-dbe362.o(.text._LCD_GetpPalConvTable) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[c2]">_LCD_MixColorsBulk</a> from lto-llvm-dbe362.o(.text._LCD_MixColorsBulk) referenced from lto-llvm-dbe362.o(.text.LCD_X_Config)
 <LI><a href="#[1a]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[148]">_MULTIBUF_Begin</a> from wm_multibuf.o(i._MULTIBUF_Begin) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[149]">_MULTIBUF_End</a> from wm_multibuf.o(i._MULTIBUF_End) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[8]">_NextPixel_End</a> from gui_bmp.o(i._NextPixel_End) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[7]">_NextPixel_NextLine</a> from gui_bmp.o(i._NextPixel_NextLine) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[6]">_NextPixel_SetPixel</a> from gui_bmp.o(i._NextPixel_SetPixel) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[5]">_NextPixel_Start</a> from gui_bmp.o(i._NextPixel_Start) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[fb]">_Off</a> from guidrv_lin_16.o(i._Off) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[fa]">_On</a> from guidrv_lin_16.o(i._On) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[e0]">_OnExit</a> from gui_multibuf.o(i._OnExit) referenced from gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx)
 <LI><a href="#[e1]">_OnExit</a> from gui_pid.o(i._OnExit) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[e4]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[e5]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[e8]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[e9]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[ed]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[13]">_OnTouchDefault</a> from button.o(i._OnTouchDefault) referenced 2 times from button.o(.data)
 <LI><a href="#[1d]">_Paint</a> from button_skin.o(i._Paint) referenced 6 times from button_skin.o(.data)
 <LI><a href="#[b]">_QR_Mask0</a> from gui_qr.o(i._QR_Mask0) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[c]">_QR_Mask1</a> from gui_qr.o(i._QR_Mask1) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[d]">_QR_Mask2</a> from gui_qr.o(i._QR_Mask2) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[e]">_QR_Mask3</a> from gui_qr.o(i._QR_Mask3) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[f]">_QR_Mask4</a> from gui_qr.o(i._QR_Mask4) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[10]">_QR_Mask5</a> from gui_qr.o(i._QR_Mask5) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[11]">_QR_Mask6</a> from gui_qr.o(i._QR_Mask6) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[12]">_QR_Mask7</a> from gui_qr.o(i._QR_Mask7) referenced 2 times from gui_qr.o(.data)
 <LI><a href="#[102]">_ReadRect</a> from guidrv_lin_16.o(i._ReadRect) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[f7]">_SetAlpha</a> from guidrv_lin_16.o(i._SetAlpha) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[fc]">_SetAlphaMode</a> from guidrv_lin_16.o(i._SetAlphaMode) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[12a]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[fe]">_SetChroma</a> from guidrv_lin_16.o(i._SetChroma) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[fd]">_SetChromaMode</a> from guidrv_lin_16.o(i._SetChromaMode) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[129]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[101]">_SetDevFunc</a> from guidrv_lin_16.o(i._SetDevFunc) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[12b]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[133]">_SetOrg</a> from guidrv_lin_16.o(i._SetOrg) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[a]">_SetPixelAlpha</a> from gui_drawbitmap_8888.o(i._SetPixelAlpha) referenced 2 times from gui_drawbitmap_8888.o(.data)
 <LI><a href="#[131]">_SetPixelIndex</a> from guidrv_lin_16.o(i._SetPixelIndex) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[f5]">_SetPos</a> from guidrv_lin_16.o(i._SetPos) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[f4]">_SetSize</a> from guidrv_lin_16.o(i._SetSize) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[f2]">_SetVRAMAddr</a> from guidrv_lin_16.o(i._SetVRAMAddr) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[f3]">_SetVSize</a> from guidrv_lin_16.o(i._SetVSize) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[f8]">_SetVis</a> from guidrv_lin_16.o(i._SetVis) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[100]">_ShowBuffer</a> from guidrv_lin_16.o(i._ShowBuffer) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[dd]">_UpdateBuffer</a> from editdec.o(i._UpdateBuffer) referenced from editdec.o(i.EDIT_SetDecMode)
 <LI><a href="#[132]">_XorPixel</a> from guidrv_lin_16.o(i._XorPixel) referenced 4 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[93]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f746xx.o(.text)
 <LI><a href="#[ec]">_cbBackWin</a> from wm.o(i._cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[ef]">_cbInvalidateOne</a> from wm_bringtotop.o(i._cbInvalidateOne) referenced from wm_bringtotop.o(i._BringToTop)
 <LI><a href="#[ee]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM__Paint)
 <LI><a href="#[eb]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[cd]">_free_fn</a> from lto-llvm-dbe362.o(.text._free_fn) referenced from lto-llvm-dbe362.o(.text.png_create_png_struct)
 <LI><a href="#[ce]">_malloc_fn</a> from lto-llvm-dbe362.o(.text._malloc_fn) referenced from lto-llvm-dbe362.o(.text.png_create_png_struct)
 <LI><a href="#[cf]">_png_cexcept_error</a> from lto-llvm-dbe362.o(.text._png_cexcept_error) referenced from lto-llvm-dbe362.o(.text.png_create_png_struct)
 <LI><a href="#[a4]">_png_read_data</a> from lto-llvm-dbe362.o(.text._png_read_data) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[d0]">longjmp</a> from setjmp.o(.text) referenced from lto-llvm-dbe362.o(.text.png_create_png_struct)
 <LI><a href="#[d0]">longjmp</a> from setjmp.o(.text) referenced from lto-llvm-dbe362.o(.text.png_free_jmpbuf)
 <LI><a href="#[91]">main</a> from lto-llvm-dbe362.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[c7]">mem_cpy</a> from lto-llvm-dbe362.o(.text.mem_cpy) referenced from lto-llvm-dbe362.o(.text.UART_Receive_IT)
 <LI><a href="#[c7]">mem_cpy</a> from lto-llvm-dbe362.o(.text.mem_cpy) referenced from lto-llvm-dbe362.o(.text.main)
 <LI><a href="#[3]">memcpy</a> from memmove.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[2]">memset</a> from memseta.o(.text) referenced 2 times from gui__private.o(.data)
 <LI><a href="#[d3]">png_free</a> from lto-llvm-dbe362.o(.text.png_free) referenced from lto-llvm-dbe362.o(.text.png_destroy_read_struct)
 <LI><a href="#[d8]">png_gamma_8bit_correct</a> from lto-llvm-dbe362.o(.text.png_gamma_8bit_correct) referenced from lto-llvm-dbe362.o(.text.png_read_start_row)
 <LI><a href="#[d7]">png_gamma_correct</a> from lto-llvm-dbe362.o(.text.png_gamma_correct) referenced from lto-llvm-dbe362.o(.text.png_read_start_row)
 <LI><a href="#[d4]">png_get_fixed_point</a> from lto-llvm-dbe362.o(.text.png_get_fixed_point) referenced from lto-llvm-dbe362.o(.text.png_handle_cHRM)
 <LI><a href="#[a5]">png_read_filter_row_avg</a> from lto-llvm-dbe362.o(.text.png_read_filter_row_avg) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[a8]">png_read_filter_row_paeth_1byte_pixel</a> from lto-llvm-dbe362.o(.text.png_read_filter_row_paeth_1byte_pixel) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[a9]">png_read_filter_row_paeth_multibyte_pixel</a> from lto-llvm-dbe362.o(.text.png_read_filter_row_paeth_multibyte_pixel) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[a7]">png_read_filter_row_sub</a> from lto-llvm-dbe362.o(.text.png_read_filter_row_sub) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[a6]">png_read_filter_row_up</a> from lto-llvm-dbe362.o(.text.png_read_filter_row_up) referenced from lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
 <LI><a href="#[d5]">png_reciprocal</a> from lto-llvm-dbe362.o(.text.png_reciprocal) referenced from lto-llvm-dbe362.o(.text.png_handle_cHRM)
 <LI><a href="#[d6]">png_safecat</a> from lto-llvm-dbe362.o(.text.png_safecat) referenced from lto-llvm-dbe362.o(.text.png_icc_profile_error)
 <LI><a href="#[d2]">png_zalloc</a> from lto-llvm-dbe362.o(.text.png_zalloc) referenced from lto-llvm-dbe362.o(.text.png_create_png_struct)
 <LI><a href="#[d1]">png_zfree</a> from lto-llvm-dbe362.o(.text.png_zfree) referenced from lto-llvm-dbe362.o(.text.png_create_png_struct)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[93]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(.text)
</UL>
<P><STRONG><a name="[4f4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[183]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[198]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4f6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4f7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[4f8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[4f9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[26]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4fa]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[4fb]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_combine_row
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
</UL>

<P><STRONG><a name="[2bc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_sync
</UL>

<P><STRONG><a name="[2c0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy8
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_png_struct
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_create_png_struct
</UL>

<P><STRONG><a name="[49e]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeRSChar
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[3]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[4fc]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[4fd]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4fe]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Clear
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_row
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Clear
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_read_struct
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2be]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_png_struct
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_create_png_struct
</UL>

<P><STRONG><a name="[2]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__private.o(.data)
</UL>
<P><STRONG><a name="[27d]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[1d3]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitStringToQRinput
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
</UL>

<P><STRONG><a name="[278]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2FLASH_Copy
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_sig_cmp
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
</UL>

<P><STRONG><a name="[3cb]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[187]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[18a]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
</UL>

<P><STRONG><a name="[2a2]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2bf]"></a>setjmp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, setjmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setjmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_jmpbuf
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_create_png_struct
</UL>

<P><STRONG><a name="[d0]"></a>longjmp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, setjmp.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.png_create_png_struct)
<LI> lto-llvm-dbe362.o(.text.png_free_jmpbuf)
</UL>
<P><STRONG><a name="[18b]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[4ff]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[500]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[193]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[194]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[195]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f2]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[501]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4eb]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[502]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[4e6]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[184]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[503]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[504]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[505]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[18d]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[192]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[191]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[19a]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[199]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[2a1]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[506]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[507]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[2da]"></a>__aeabi_dcmple</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
</UL>

<P><STRONG><a name="[290]"></a>__aeabi_dcmplt</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmplt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
</UL>

<P><STRONG><a name="[293]"></a>__aeabi_dcmpge</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmpge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
</UL>

<P><STRONG><a name="[291]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmpgt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
</UL>

<P><STRONG><a name="[19b]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
</UL>

<P><STRONG><a name="[508]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[509]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.BusFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BusFault_Handler &rArr; Restart &rArr; HAL_QSPI_DeInit &rArr; HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[1c9]"></a>GUI_X_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.GUI_X_Config))
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[1b]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.GUI_X_ExecIdle))
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[36b]"></a>GUI_X_GetTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.GUI_X_GetTime))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[28]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HardFault_Handler &rArr; Restart &rArr; HAL_QSPI_DeInit &rArr; HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MemManage_Handler &rArr; Restart &rArr; HAL_QSPI_DeInit &rArr; HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.UsageFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UsageFault_Handler &rArr; Restart &rArr; HAL_QSPI_DeInit &rArr; HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[e7]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
</UL>
<P><STRONG><a name="[24e]"></a>LCD_X_Config</STRONG> (Thumb, 1336 bytes, Stack size 80 bytes, lto-llvm-dbe362.o(.text.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColors
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M1555I_SetCustColorConv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M888_SetCustColorConv
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M565_SetCustColorConv
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncGetpPalConvTable
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M8888I_SetCustColorConv
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M4444I_SetCustColorConv
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColorsBulk
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncAlphaBlending
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[261]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 944 bytes, Stack size 80 bytes, lto-llvm-dbe362.o(.text.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[87]"></a>LTDC_IRQHandler</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_SetAddress &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 388 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.QUADSPI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QUADSPI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort_IT
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SysTick_Handler</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = SysTick_Handler &rArr; RS485_Init &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>UART4_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = UART4_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; DISPMessage &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; DISPMessage &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USART2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; DISPMessage &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>main</STRONG> (Thumb, 11608 bytes, Stack size 304 bytes, lto-llvm-dbe362.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 3256<LI>Call Chain = main &rArr; DISPService &rArr; GUI_PNG_Draw &rArr; png_handle_iCCP &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_SetHook
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MULTIBUF_Enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Service
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2Int
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_IsDeviceReady
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPGuiSet
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Clear
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc2unix
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_copy
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[d9]"></a>BUTTON_Callback</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[94]"></a>BUTTON_Create</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, button.o(i.BUTTON_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = BUTTON_Create &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.DISPCreateKeypad)
</UL>
<P><STRONG><a name="[2e2]"></a>BUTTON_CreateUser</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Create
</UL>

<P><STRONG><a name="[14]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 562 bytes, Stack size 56 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI__DrawTwinArc4 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[1d7]"></a>BUTTON_IsPressed</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, button.o(i.BUTTON_IsPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BUTTON_IsPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[95]"></a>BUTTON_SetFont</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, button.o(i.BUTTON_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BUTTON_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateKeypad)
</UL>
<P><STRONG><a name="[2e0]"></a>BUTTON_SetPressed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[96]"></a>BUTTON_SetText</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, button.o(i.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateKeypad)
</UL>
<P><STRONG><a name="[da]"></a>CHECKBOX_Callback</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, checkbox.o(i.CHECKBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CHECKBOX_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(i.CHECKBOX_CreateUser)
</UL>
<P><STRONG><a name="[1aa]"></a>CHECKBOX_Create</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CHECKBOX_Create &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>

<P><STRONG><a name="[2f3]"></a>CHECKBOX_CreateUser</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, checkbox.o(i.CHECKBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Create
</UL>

<P><STRONG><a name="[16]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[2f6]"></a>CHECKBOX_GetSkinFlexButtonSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, checkbox_skinflex.o(i.CHECKBOX_GetSkinFlexButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[1da]"></a>CHECKBOX_GetState</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, checkbox.o(i.CHECKBOX_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CHECKBOX_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1ad]"></a>CHECKBOX_SetState</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, checkbox.o(i.CHECKBOX_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CHECKBOX_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>

<P><STRONG><a name="[1ac]"></a>CHECKBOX_SetText</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, checkbox.o(i.CHECKBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CHECKBOX_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>

<P><STRONG><a name="[1ab]"></a>CHECKBOX_SetTextColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, checkbox.o(i.CHECKBOX_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CHECKBOX_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>

<P><STRONG><a name="[15]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CHECKBOX__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[2ff]"></a>EDIT_AddKey</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, edit.o(i.EDIT_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = EDIT_AddKey &rArr; _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[db]"></a>EDIT_Callback</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, edit.o(i.EDIT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = EDIT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(i.EDIT_CreateUser)
</UL>
<P><STRONG><a name="[30a]"></a>EDIT_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, edit.o(i.EDIT_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[30b]"></a>EDIT_CreateUser</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, edit.o(i.EDIT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>

<P><STRONG><a name="[3f1]"></a>EDIT_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit_default.o(i.EDIT_GetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[30d]"></a>EDIT_GetFont</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, edit.o(i.EDIT_GetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EDIT_GetFont
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>

<P><STRONG><a name="[30e]"></a>EDIT_GetValue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, edit.o(i.EDIT_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EDIT_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
</UL>

<P><STRONG><a name="[30f]"></a>EDIT_SetBkColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
</UL>

<P><STRONG><a name="[310]"></a>EDIT_SetCursorAtChar</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, edit.o(i.EDIT_SetCursorAtChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EDIT_SetCursorAtChar &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[309]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, edit.o(i.EDIT_SetCursorAtPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[315]"></a>EDIT_SetDecMode</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, editdec.o(i.EDIT_SetDecMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EDIT_SetDecMode &rArr; EDIT_SetMaxLen &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[317]"></a>EDIT_SetMaxLen</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, edit.o(i.EDIT_SetMaxLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = EDIT_SetMaxLen &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[319]"></a>EDIT_SetTextColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
</UL>

<P><STRONG><a name="[31a]"></a>EDIT_SetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit.o(i.EDIT_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
</UL>

<P><STRONG><a name="[318]"></a>EDIT__GetCurrentChar</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, edit.o(i.EDIT__GetCurrentChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EDIT__GetCurrentChar &rArr; GUI_UC__NumChars2NumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[305]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, edit.o(i.EDIT__SetCursorPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[2fe]"></a>GL_DispChar</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[31d]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[31f]"></a>GL_SetDefault</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_common.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[258]"></a>GUICC_M1555I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m1555i.o(i.GUICC_M1555I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[25a]"></a>GUICC_M4444I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m4444i.o(i.GUICC_M4444I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[259]"></a>GUICC_M565_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m565.o(i.GUICC_M565_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[25c]"></a>GUICC_M8888I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m8888i.o(i.GUICC_M8888I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[25b]"></a>GUICC_M888_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m888.o(i.GUICC_M888_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[155]"></a>GUIMONO_DispChar</STRONG> (Thumb, 310 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>GUIPROP_DispChar</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 14]<UL><LI> f08_1.o(.constdata)
<LI> fd48.o(.constdata)
<LI> f10_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> fd80.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 14]<UL><LI> f08_1.o(.constdata)
<LI> fd48.o(.constdata)
<LI> f10_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> fd80.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 14]<UL><LI> f08_1.o(.constdata)
<LI> fd48.o(.constdata)
<LI> f10_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> fd80.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 14]<UL><LI> f08_1.o(.constdata)
<LI> fd48.o(.constdata)
<LI> f10_1.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f13b_1.o(.constdata)
<LI> f16_1.o(.constdata)
<LI> f20_1.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32_1.o(.constdata)
<LI> fd80.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[325]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[28f]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_fn
</UL>

<P><STRONG><a name="[218]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Calloc
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1ca]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[226]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_fn
</UL>

<P><STRONG><a name="[347]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
</UL>

<P><STRONG><a name="[2dc]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[2dd]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[32b]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[32f]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[332]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[1eb]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[219]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Calloc
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_fn
</UL>

<P><STRONG><a name="[331]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
</UL>

<P><STRONG><a name="[333]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[227]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[225]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_fn
</UL>

<P><STRONG><a name="[330]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[28e]"></a>GUI_ALLOC_p2h</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_p2h))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_fn
</UL>

<P><STRONG><a name="[334]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_val.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_AddDecMin &rArr; GUI_Long2Len
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
</UL>

<P><STRONG><a name="[349]"></a>GUI_AddDecShift</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, gui_common.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[34a]"></a>GUI_AddHex</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, gui_common.o(i.GUI_AddHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_AddHex
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHexAt
</UL>

<P><STRONG><a name="[34d]"></a>GUI_AddSign</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, gui_common.o(i.GUI_AddSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_AddSign
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[1d0]"></a>GUI_BMP_Draw</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_bmp.o(i.GUI_BMP_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_BMP_Draw &rArr; GUI_BMP_DrawEx &rArr; _Draw &rArr; _DrawBitmap_32bpp &rArr; _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_DrawEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[336]"></a>GUI_BMP_DrawEx</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP_DrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_BMP_DrawEx &rArr; _Draw &rArr; _DrawBitmap_32bpp &rArr; _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Draw
</UL>

<P><STRONG><a name="[de]"></a>GUI_BMP__GetData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_bmp.o(i.GUI_BMP__GetData))
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i.GUI_BMP_Draw)
</UL>
<P><STRONG><a name="[338]"></a>GUI_BMP__Init</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, gui_bmp.o(i.GUI_BMP__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI_BMP__Init &rArr; _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[339]"></a>GUI_BMP__ReadData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP__ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[33d]"></a>GUI_BMP__ReadPalette</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP__ReadPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_BMP__ReadPalette &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
</UL>

<P><STRONG><a name="[33f]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gui_cursor.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[46c]"></a>GUI_CalcColorDist</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gui_common.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[1a1]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[1b4]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[343]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_core.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[396]"></a>GUI_DCACHE_Clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_core.o(i.GUI_DCACHE_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>

<P><STRONG><a name="[344]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[251]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[346]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[345]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[3de]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[37b]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[2ea]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[1b6]"></a>GUI_DispCharAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[1c1]"></a>GUI_DispDec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_val.o(i.GUI_DispDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispDec &rArr; GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
</UL>

<P><STRONG><a name="[9d]"></a>GUI_DispDecMin</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[348]"></a>GUI_DispDecShift</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDec
</UL>

<P><STRONG><a name="[1b5]"></a>GUI_DispHexAt</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, gui_common.o(i.GUI_DispHexAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DispHexAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddHex
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[31c]"></a>GUI_DispNextLine</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, gui_char.o(i.GUI_DispNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[1e0]"></a>GUI_DispSDec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_val.o(i.GUI_DispSDec))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1e1]"></a>GUI_DispSDecShift</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispSDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DispSDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[98]"></a>GUI_DispString</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[34b]"></a>GUI_DispStringAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispstring.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHexAt
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1d5]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstring.o(i.GUI_DispStringInRect))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[352]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_dispstring.o(i.GUI_DispStringInRectMax), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[1b9]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 276 bytes, Stack size 104 bytes, gui_dispstring.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
</UL>

<P><STRONG><a name="[1d1]"></a>GUI_DrawBitmap</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[359]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, gui_drawlib.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[2e8]"></a>GUI_DrawGradientV</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[99]"></a>GUI_DrawHLine</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[35c]"></a>GUI_DrawPixel</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawPixel &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[2e7]"></a>GUI_DrawRect</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>

<P><STRONG><a name="[2e6]"></a>GUI_DrawVLine</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_drawlib.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[1a6]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[35e]"></a>GUI_Exec1</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[1b3]"></a>GUI_FillRect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_drawlib.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[1b8]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_drawlib.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
</UL>

<P><STRONG><a name="[1d4]"></a>GUI_FillRoundedRect</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, gui_fillroundedrect.o(i.GUI_FillRoundedRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_FillRoundedRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[361]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
</UL>

<P><STRONG><a name="[362]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>

<P><STRONG><a name="[21a]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[327]"></a>GUI_GetBkColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[2fb]"></a>GUI_GetCharDistX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[3c3]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[2eb]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[326]"></a>GUI_GetColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_common.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[340]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[28a]"></a>GUI_GetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>

<P><STRONG><a name="[34c]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>

<P><STRONG><a name="[2fd]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetFontSizeY))
<BR><BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[265]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[368]"></a>GUI_GetOrg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetOrg))
<BR><BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[312]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_dispstring.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[36a]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[34e]"></a>GUI_GetYAdjust</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[3f2]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>

<P><STRONG><a name="[491]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[21c]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[21b]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[97]"></a>GUI_GotoXY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_GotoXY))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[29d]"></a>GUI_Init</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[335]"></a>GUI_Long2Len</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_common.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[376]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[377]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[378]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[37a]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[37d]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[380]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[388]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[38a]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[384]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[116]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[386]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_ReduceYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[379]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[387]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[38c]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[38f]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[37c]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 240 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[115]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[390]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[114]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1a2]"></a>GUI_MULTIBUF_BeginEx</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_BeginEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_Begin
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[250]"></a>GUI_MULTIBUF_ConfigEx</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MULTIBUF_ConfigEx
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[268]"></a>GUI_MULTIBUF_ConfirmEx</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfirmEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MULTIBUF_ConfirmEx
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1a3]"></a>GUI_MULTIBUF_EndEx</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_EndEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DCACHE_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIBUF_End
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[43a]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_common.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[2ec]"></a>GUI_MoveRect</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_common.o(i.GUI_MoveRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[397]"></a>GUI_PID_GetState</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[420]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[1e5]"></a>GUI_PID_IsPressed</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_IsPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_PID_IsPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[29e]"></a>GUI_PID_SetHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_SetHook))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39a]"></a>GUI_PID_StoreState</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[39d]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[1bb]"></a>GUI_QR_Create</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, gui_qr.o(i.GUI_QR_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = GUI_QR_Create &rArr; _EncodeString &rArr; _QR_CODE_EncodeMask &rArr; _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeString
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
</UL>

<P><STRONG><a name="[1bc]"></a>GUI_QR_Draw</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_qr.o(i.GUI_QR_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_QR_Draw &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
</UL>

<P><STRONG><a name="[220]"></a>GUI_ReadRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[407]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[3a3]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[342]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[3a5]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[37e]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_SelectLCD &rArr; LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1a0]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[1a4]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[a1]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetColor))
<BR><BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
</UL>
<P><STRONG><a name="[3a7]"></a>GUI_SetColorIndex</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetColorIndex))
<BR><BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[31e]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetDrawMode))
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[9f]"></a>GUI_SetFont</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
</UL>
<P><STRONG><a name="[25d]"></a>GUI_SetFuncAlphaBlending</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncAlphaBlending))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[25e]"></a>GUI_SetFuncGetpPalConvTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetFuncGetpPalConvTable))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[25f]"></a>GUI_SetFuncMixColors</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColors))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[260]"></a>GUI_SetFuncMixColorsBulk</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColorsBulk))
<BR><BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[341]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_SetLayerPosEx &rArr; LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[324]"></a>GUI_SetLineStyle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetLineStyle))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[374]"></a>GUI_SetOrg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_common.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[322]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetPenSize))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[1a5]"></a>GUI_SetTextAlign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
</UL>

<P><STRONG><a name="[1a8]"></a>GUI_SetTextMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_common.o(i.GUI_SetTextMode))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
</UL>

<P><STRONG><a name="[39c]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[3aa]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[3ab]"></a>GUI_TIMER_Create</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[3ad]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[e3]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TIMER_Exec
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[3b0]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER_GetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[3b1]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_TIMER_Restart &rArr; _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[3b2]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER_SetPeriod
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[3b3]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[3b4]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[280]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_touch.o(i.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Service
</UL>

<P><STRONG><a name="[46b]"></a>GUI_UC_Encode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC_Encode))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[303]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC_GetCharCode))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorCharacter
</UL>

<P><STRONG><a name="[473]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC_GetCharSize))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[2a0]"></a>GUI_UC_SetEncodeUTF8</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i.GUI_UC_SetEncodeUTF8))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46a]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[3c2]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
</UL>

<P><STRONG><a name="[4b0]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumBytes2NumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[302]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[483]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[391]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[37f]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[356]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_dispstring.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[3b5]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[3b7]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaPreserveTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[3b9]"></a>GUI__CalcTextRect</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui__private.o(i.GUI__CalcTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[223]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[3ba]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[36c]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[3bb]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__ConvertColor2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[351]"></a>GUI__DispLine</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[355]"></a>GUI__DispStringInRect</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, gui_dispstring.o(i.GUI__DispStringInRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[3be]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 456 bytes, Stack size 128 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
</UL>

<P><STRONG><a name="[2e5]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI__DrawTwinArc4 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[221]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[3bf]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[3b6]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>

<P><STRONG><a name="[467]"></a>GUI__GetCursorCharacter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui__getcursorpos.o(i.GUI__GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__GetCursorCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[314]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosChar))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[468]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosX))
<BR><BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[366]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_common.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[350]"></a>GUI__GetLineDistX</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[34f]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[313]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_uc.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[369]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_common.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[2fc]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[3bd]"></a>GUI__HandleEOLine</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui__private.o(i.GUI__HandleEOLine), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[42d]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__private.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[354]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__private.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[3c4]"></a>GUI__InvertRectColors</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gui_common.o(i.GUI__InvertRectColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__InvertRectColors &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3c7]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[3c8]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[0]"></a>GUI__MixColors</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__MixColorsBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[33a]"></a>GUI__Read16</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui__private.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[33b]"></a>GUI__Read32</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, gui__private.o(i.GUI__Read32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__Read32
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine_RGB
</UL>

<P><STRONG><a name="[35a]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__private.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>

<P><STRONG><a name="[395]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfigEx
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[2f1]"></a>GUI__SetText</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui__private.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>

<P><STRONG><a name="[358]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>

<P><STRONG><a name="[357]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[3cc]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[4b4]"></a>GUI__memset</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, gui__private.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[4a6]"></a>GUI__memset16</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui__private.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[360]"></a>GUI__sqrt32</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui__private.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>

<P><STRONG><a name="[3ce]"></a>GUI__strcmp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[3c9]"></a>GUI__strcmp_hp</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui__private.o(i.GUI__strcmp_hp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[3ca]"></a>GUI__strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__private.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[1c]"></a>LCD_AA_MixColors16</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd_aa.o(i.LCD_AA_MixColors16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_AA_MixColors16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_aa.o(.data)
</UL>
<P><STRONG><a name="[3b8]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[33e]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[224]"></a>LCD_DrawBitmap</STRONG> (Thumb, 512 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveAlpha
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[df]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[11d]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[35d]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[28b]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>

<P><STRONG><a name="[257]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[363]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[365]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[28c]"></a>LCD_GetDevFunc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetDevFunc))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[3d0]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[3d1]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[3d2]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[3d3]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[3d4]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[3d5]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[3d6]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[3d7]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelAlpha
</UL>

<P><STRONG><a name="[3c5]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[367]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[252]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetSwapXYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[381]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[3c1]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[382]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[27e]"></a>LCD_GetXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Service
</UL>

<P><STRONG><a name="[36f]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[262]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[372]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[27f]"></a>LCD_GetYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Service
</UL>

<P><STRONG><a name="[370]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[263]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[371]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetYSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[28d]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[9]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[3d9]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[3da]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetpfColor2IndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetpfColor2IndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[364]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[e6]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 5]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> gui_drawbitmap_8888.o(.constdata)
<LI> gui_drawbitmap_8888.o(i._DrawBitmap_8888)
<LI> guicc_8888.o(.constdata)
<LI> guidev_writetoactivealpha.o(i._WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[f0]"></a>LCD_Index2Color_M555</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_m555_index2color.o(i.LCD_Index2Color_M555))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M555
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[125]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[3db]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[3dc]"></a>LCD_InitLUT</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[3a6]"></a>LCD_SelectLCD</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[320]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3e0]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[3df]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[38e]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[321]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[3a8]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[af]"></a>LCD_SetDevFunc</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[373]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[323]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[3dd]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[3c6]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd.o(i.LCD_SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
</UL>

<P><STRONG><a name="[3a9]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[253]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[256]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVRAMAddrEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVRAMAddrEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[254]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[255]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[38d]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[3e1]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 434 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[3e2]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[389]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[ea]"></a>SPINBOX_Callback</STRONG> (Thumb, 504 bytes, Stack size 32 bytes, spinbox.o(i.SPINBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = SPINBOX_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox.o(i.SPINBOX_CreateUser)
</UL>
<P><STRONG><a name="[9a]"></a>SPINBOX_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, spinbox.o(i.SPINBOX_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = SPINBOX_CreateEx &rArr; SPINBOX_CreateUser &rArr; EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[3ef]"></a>SPINBOX_CreateUser</STRONG> (Thumb, 402 bytes, Stack size 64 bytes, spinbox.o(i.SPINBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SPINBOX_CreateUser &rArr; EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetDefaultFont
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateEx
</UL>

<P><STRONG><a name="[17]"></a>SPINBOX_DrawSkinFlex</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, spinbox_skinflex.o(i.SPINBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SPINBOX_DrawSkinFlex &rArr; SPINBOX__DrawBk &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox.o(.data)
</UL>
<P><STRONG><a name="[a0]"></a>SPINBOX_GetValue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPINBOX_GetValue &rArr; EDIT_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
</UL>
<P><STRONG><a name="[9b]"></a>SPINBOX_SetEdge</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_SetEdge))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SPINBOX_SetEdge &rArr; _AdjustEdit &rArr; WM_SetWindowPos &rArr; WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[3f4]"></a>SPINBOX_SetEditMode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_SetEditMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SPINBOX_SetEditMode &rArr; WIDGET_SetFocusable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[9c]"></a>SPINBOX_SetValue</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SPINBOX_SetValue &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen)
</UL>
<P><STRONG><a name="[3f5]"></a>SPINBOX__ApplyProps</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, spinbox_skin.o(i.SPINBOX__ApplyProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SPINBOX__ApplyProps &rArr; EDIT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3f7]"></a>SPINBOX__DrawBk</STRONG> (Thumb, 202 bytes, Stack size 80 bytes, spinbox.o(i.SPINBOX__DrawBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SPINBOX__DrawBk &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3fd]"></a>SPINBOX__GetButtonRect</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, spinbox.o(i.SPINBOX__GetButtonRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRectEx
</UL>

<P><STRONG><a name="[3fe]"></a>SPINBOX__GetButtonRectEx</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX__GetButtonRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPINBOX__GetButtonRectEx &rArr; SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2f0]"></a>WIDGET_AndState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
</UL>

<P><STRONG><a name="[17b]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[2db]"></a>WIDGET_HandleActive</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[2ef]"></a>WIDGET_OrState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetFocusable
</UL>

<P><STRONG><a name="[3f3]"></a>WIDGET_SetEffect</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, widget.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3fb]"></a>WIDGET_SetFocusable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, widget.o(i.WIDGET_SetFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_SetFocusable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
</UL>

<P><STRONG><a name="[401]"></a>WIDGET_SetState</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[4be]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[403]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[406]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, widget.o(i.WIDGET__FillStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[402]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[2e4]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>

<P><STRONG><a name="[404]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[222]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[409]"></a>WM_BringToBottom</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, wm_lib.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[400]"></a>WM_BringToTop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[40e]"></a>WM_CreateTimer</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[2e3]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>

<P><STRONG><a name="[21f]"></a>WM_Deactivate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2e1]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[3e6]"></a>WM_DeleteTimer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[9e]"></a>WM_DeleteWindow</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
<LI> lto-llvm-dbe362.o(.text.DISPDeleteSettings2Screen)
</UL>
<P><STRONG><a name="[35f]"></a>WM_Exec</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[41a]"></a>WM_ForEachDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_lib.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_ForEachDesc &rArr; WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[4b1]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[2f7]"></a>WM_GetClientRect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[41c]"></a>WM_GetClientRectEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[472]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[4e2]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_lib.o(i.WM_GetDesktopWindowEx))
<BR><BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>

<P><STRONG><a name="[41d]"></a>WM_GetFirstChild</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[40b]"></a>WM_GetParent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[41e]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetWindowOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowOrgX
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[3fc]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_lib.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
</UL>

<P><STRONG><a name="[311]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetWindowSizeX
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3e9]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[e2]"></a>WM_HandlePID</STRONG> (Thumb, 874 bytes, Stack size 144 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[4bd]"></a>WM_HasCaptured</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3e4]"></a>WM_HasFocus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_lib.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3eb]"></a>WM_HideWindow</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[375]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[42a]"></a>WM_InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
</UL>

<P><STRONG><a name="[2ee]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[430]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_lib.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[431]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[3e3]"></a>WM_IsFocusable</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, wm_lib.o(i.WM_IsFocusable))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_IsFocusable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
</UL>

<P><STRONG><a name="[426]"></a>WM_IsWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_lib.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_IsWindow &rArr; WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[29f]"></a>WM_MULTIBUF_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_multibuf.o(i.WM_MULTIBUF_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[433]"></a>WM_MoveTo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_move.o(i.WM_MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
</UL>

<P><STRONG><a name="[435]"></a>WM_MoveWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[2f9]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_lib.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[39f]"></a>WM_OnKey</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, wm_lib.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[428]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_PID__SetPrevState
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[427]"></a>WM_ReleaseCapture</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[439]"></a>WM_ResizeWindow</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, wm_lib.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[308]"></a>WM_RestartTimer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_Restart &rArr; _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[422]"></a>WM_Screen2hWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_Screen2hWin &rArr; _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[306]"></a>WM_SelectWindow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[3e7]"></a>WM_SendMessage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
</UL>

<P><STRONG><a name="[43d]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_lib.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SendMessageNoPara &rArr; WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[412]"></a>WM_SendToParent</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[43e]"></a>WM_SetCapture</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[43f]"></a>WM_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[3e8]"></a>WM_SetEnableState</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, wm_lib.o(i.WM_SetEnableState))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[3e5]"></a>WM_SetFocus</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, wm_lib.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[2ed]"></a>WM_SetHasTrans</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[441]"></a>WM_SetSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, wm_lib.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[353]"></a>WM_SetUserClipRect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_lib.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[443]"></a>WM_SetWindowPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_lib.o(i.WM_SetWindowPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = WM_SetWindowPos &rArr; WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>

<P><STRONG><a name="[3ea]"></a>WM_ShowWindow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_lib.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[440]"></a>WM_ValidateWindow</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_lib.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_ValidateWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[442]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[421]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm__private.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[42c]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__Client2Screen &rArr; GUI_MoveRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[42e]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[415]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[417]"></a>WM__DetachWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[41b]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm__private.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[411]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[408]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>

<P><STRONG><a name="[447]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__private.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[21e]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[40a]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__private.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[414]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[21d]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[40f]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[42f]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[42b]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[449]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[44a]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[40c]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[44b]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__private.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[2e9]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__private.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[423]"></a>WM__IsInModalArea</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[4e1]"></a>WM__IsInWindow</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM__IsInWindow))
<BR><BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[413]"></a>WM__IsWindow</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[434]"></a>WM__MoveTo</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm_move.o(i.WM__MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[436]"></a>WM__MoveWindow</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[44d]"></a>WM__Paint</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[117]"></a>WM__Paint1</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM__Paint1 &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[4b8]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[429]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm__private.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[446]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[452]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__private.o(i.WM__Screen2Client), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[43c]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD &rArr; GUI_DEVICE_Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[437]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[425]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__private.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[385]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, wm__private.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[410]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[453]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[424]"></a>WM__SendTouchMessage</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3ff]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 214 bytes, Stack size 56 bytes, wm__private.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[4f3]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[188]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[50a]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[4e5]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[2a3]"></a>__hardfp_log</STRONG> (Thumb, 872 bytes, Stack size 88 bytes, log.o(i.__hardfp_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2aa]"></a>__hardfp_pow</STRONG> (Thumb, 3072 bytes, Stack size 192 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
</UL>

<P><STRONG><a name="[4ec]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[4ea]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[4e7]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[4ed]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[4e9]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[4ee]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[4f1]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[50b]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[50c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[50d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4e8]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[36e]"></a>emWin_LCD_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[4f0]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[292]"></a>floor</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = floor &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
</UL>

<P><STRONG><a name="[2cd]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
</UL>

<P><STRONG><a name="[2d8]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
</UL>

<P><STRONG><a name="[4ef]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[11b]"></a>_Color2IndexBulk_M8888I</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guicc_m8888i.o(i._Color2IndexBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>_Color2Index_M8888I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_m8888i.o(i._Color2Index_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>_GetIndexMask_M8888I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m8888i.o(i._GetIndexMask_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>_Index2ColorBulk_M8888I</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guicc_m8888i.o(i._Index2ColorBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[329]"></a>_AddFreeMemory</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[328]"></a>_Alloc</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[4a2]"></a>_EnlargeBlocks</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[454]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[32c]"></a>_InitOnce</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[45d]"></a>_PopFreeBlock</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _PopFreeBlock &rArr;  _EnlargeBlocks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[32a]"></a>_PushFreeBlock</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[32e]"></a>_RemoveFreeBlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[32d]"></a>_RemoveHoles</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[455]"></a>_WriteTagData</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _WriteTagData
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[337]"></a>_Draw</STRONG> (Thumb, 376 bytes, Stack size 120 bytes, gui_bmp.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _Draw &rArr; _DrawBitmap_32bpp &rArr; _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_32bpp
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_DrawEx
</UL>

<P><STRONG><a name="[478]"></a>_DrawBitmap_16bpp</STRONG> (Thumb, 218 bytes, Stack size 104 bytes, gui_bmp.o(i._DrawBitmap_16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap_16bpp &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[477]"></a>_DrawBitmap_32bpp</STRONG> (Thumb, 34 bytes, Stack size 40 bytes, gui_bmp.o(i._DrawBitmap_32bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _DrawBitmap_32bpp &rArr; _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[474]"></a>_DrawBitmap_Pal</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, gui_bmp.o(i._DrawBitmap_Pal))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawBitmap_Pal &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[475]"></a>_DrawBitmap_RGB</STRONG> (Thumb, 248 bytes, Stack size 144 bytes, gui_bmp.o(i._DrawBitmap_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_32bpp
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[476]"></a>_DrawBitmap_RLE</STRONG> (Thumb, 576 bytes, Stack size 88 bytes, gui_bmp.o(i._DrawBitmap_RLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawBitmap_RLE &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[4]"></a>_DrawLine_RGB</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_bmp.o(i._DrawLine_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _DrawLine_RGB &rArr; GUI__Read32
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Address Reference Count : 3]<UL><LI> gui_bmp.o(i._Draw)
<LI> gui_bmp.o(i._DrawBitmap_RGB)
<LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[4ba]"></a>_GetBitfieldsPara</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_bmp.o(i._GetBitfieldsPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetBitfieldsPara
</UL>
<BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>

<P><STRONG><a name="[48f]"></a>_GetClipParam</STRONG> (Thumb, 198 bytes, Stack size 20 bytes, gui_bmp.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[490]"></a>_GetEarlyOut</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, gui_bmp.o(i._GetEarlyOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetEarlyOut
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[f1]"></a>_Index2ColorBitfields</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_bmp.o(i._Index2ColorBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Index2ColorBitfields &rArr; _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[33c]"></a>_ManageBitfields</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gui_bmp.o(i._ManageBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitfieldsPara
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBitfields
</UL>

<P><STRONG><a name="[8]"></a>_NextPixel_End</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_End &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[4bb]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, gui_bmp.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[7]"></a>_NextPixel_NextLine</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, gui_bmp.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>_NextPixel_Start</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gui_bmp.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[36d]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[e5]"></a>_OnExit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[2fa]"></a>CL_DispChar</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>

<P><STRONG><a name="[47d]"></a>_DoClipping</STRONG> (Thumb, 176 bytes, Stack size 36 bytes, gui_drawbitmap_8888.o(i._DoClipping))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47c]"></a>_DrawBitmap</STRONG> (Thumb, 1110 bytes, Stack size 136 bytes, gui_drawbitmap_8888.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[48e]"></a>_DrawBitmapHW</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _DrawBitmapHW &rArr; _DoClipping
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
</UL>

<P><STRONG><a name="[11f]"></a>_DrawBitmapHW_8888</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _DrawBitmapHW_8888 &rArr; _DrawBitmapHW &rArr; _DoClipping
</UL>
<BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>_DrawBitmap_8888</STRONG> (Thumb, 34 bytes, Stack size 48 bytes, gui_drawbitmap_8888.o(i._DrawBitmap_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawBitmap_8888 &rArr; _DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[a]"></a>_SetPixelAlpha</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_drawbitmap_8888.o(i._SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.data)
</UL>
<P><STRONG><a name="[e0]"></a>_OnExit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_multibuf.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_multibuf.o(i.GUI_MULTIBUF_ConfigEx)
</UL>
<P><STRONG><a name="[399]"></a>_DecPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._DecPointer))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsPressed
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[398]"></a>_IncPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[e1]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[39b]"></a>_StoreState</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gui_pid.o(i._StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[45e]"></a>_BS_Allocate</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, gui_qr.o(i._BS_Allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
</UL>

<P><STRONG><a name="[460]"></a>_BS_Append</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gui_qr.o(i._BS_Append))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_MergeBitStream
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
</UL>

<P><STRONG><a name="[461]"></a>_BS_AppendBytes</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_qr.o(i._BS_AppendBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _BS_AppendBytes &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeMode8
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
</UL>

<P><STRONG><a name="[464]"></a>_BS_AppendNum</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_qr.o(i._BS_AppendNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _BS_AppendNum &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeStructure
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeNum
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeKanji
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeECI
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeAn
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeMode8
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
</UL>

<P><STRONG><a name="[462]"></a>_BS_Create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_qr.o(i._BS_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _BS_Create &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_MergeBitStream
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeStructure
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeNum
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeKanji
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeECI
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeAn
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeMode8
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
</UL>

<P><STRONG><a name="[463]"></a>_BS_Delete</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_qr.o(i._BS_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _BS_Delete &rArr; _Free &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_MergeBitStream
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeStructure
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeNum
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeKanji
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeECI
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeAn
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeMode8
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
</UL>

<P><STRONG><a name="[465]"></a>_BS_ToByte</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gui_qr.o(i._BS_ToByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _BS_ToByte &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
</UL>

<P><STRONG><a name="[469]"></a>_Calloc</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_qr.o(i._Calloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Calloc &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRSChar
</UL>

<P><STRONG><a name="[494]"></a>_Eat8</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, gui_qr.o(i._Eat8))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _Eat8 &rArr; _QR_INPUT_Append &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeNum
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeAn
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Append
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IdentifyMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitString
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
</UL>

<P><STRONG><a name="[49a]"></a>_EatAn</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, gui_qr.o(i._EatAn))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _EatAn &rArr; _Eat8 &rArr; _QR_INPUT_Append &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeNum
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeAn
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Append
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitString
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
</UL>

<P><STRONG><a name="[49b]"></a>_EatNum</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, gui_qr.o(i._EatNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _EatNum &rArr; _EatAn &rArr; _Eat8 &rArr; _QR_INPUT_Append &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeNum
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeAn
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Append
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IdentifyMode
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitString
</UL>

<P><STRONG><a name="[49c]"></a>_EncodeRSChar</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, gui_qr.o(i._EncodeRSChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _EncodeRSChar &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ModNN
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_InitBlock
</UL>

<P><STRONG><a name="[3a0]"></a>_EncodeString</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_qr.o(i._EncodeString))
<BR><BR>[Stack]<UL><LI>Max Depth = 908<LI>Call Chain = _EncodeString &rArr; _QR_CODE_EncodeMask &rArr; _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitStringToQRinput
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Delete
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
</UL>

<P><STRONG><a name="[4a3]"></a>_FRAME_FILLER_Next</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gui_qr.o(i._FRAME_FILLER_Next))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = _FRAME_FILLER_Next &rArr;  _FRAME_FILLER_Next (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAME_FILLER_Next
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAME_FILLER_Next
</UL>

<P><STRONG><a name="[3a1]"></a>_Free</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_qr.o(i._Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Free &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_p2h
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitStringToQRinput
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Delete
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_Mask
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Delete
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRSChar
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>

<P><STRONG><a name="[496]"></a>_IdentifyMode</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, gui_qr.o(i._IdentifyMode))
<BR><BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitStringToQRinput
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitString
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>

<P><STRONG><a name="[4b5]"></a>_InitRS</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, gui_qr.o(i._InitRS))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _InitRS &rArr; _InitRSChar &rArr; _Calloc &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRSChar
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_Init
</UL>

<P><STRONG><a name="[4b6]"></a>_InitRSChar</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, gui_qr.o(i._InitRSChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _InitRSChar &rArr; _Calloc &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ModNN
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
</UL>

<P><STRONG><a name="[45f]"></a>_Malloc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_qr.o(i._Malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitStringToQRinput
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_Mask
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrameSub
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrame
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRSChar
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeString
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_ToByte
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Allocate
</UL>

<P><STRONG><a name="[49d]"></a>_ModNN</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui_qr.o(i._ModNN))
<BR><BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRSChar
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeRSChar
</UL>

<P><STRONG><a name="[4a1]"></a>_QR_CODE_EncodeMask</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, gui_qr.o(i._QR_CODE_EncodeMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 876<LI>Call Chain = _QR_CODE_EncodeMask &rArr; _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_GetCode
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Delete
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_Mask
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_MASK_WriteFormatInformation
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrame
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAME_FILLER_Next
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeString
</UL>

<P><STRONG><a name="[4db]"></a>_QR_CalcN1N3</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, gui_qr.o(i._QR_CalcN1N3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_CalcN1N3
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_MASK_EvaluateSymbol
</UL>

<P><STRONG><a name="[4da]"></a>_QR_CalcRunLength</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, gui_qr.o(i._QR_CalcRunLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_CalcRunLength
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_MASK_EvaluateSymbol
</UL>

<P><STRONG><a name="[4c0]"></a>_QR_CreateFrame</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_qr.o(i._QR_CreateFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _QR_CreateFrame &rArr; _QR_CreateFrameSub &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrameSub
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
</UL>

<P><STRONG><a name="[4c5]"></a>_QR_CreateFrameSub</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, gui_qr.o(i._QR_CreateFrameSub))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _QR_CreateFrameSub &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_PutFinderPattern
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_PutAlignmentPattern
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrame
</UL>

<P><STRONG><a name="[4ca]"></a>_QR_GetDataLength</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_qr.o(i._QR_GetDataLength))
<BR><BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
</UL>

<P><STRONG><a name="[495]"></a>_QR_GetLengthIndicator</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_qr.o(i._QR_GetLengthIndicator))
<BR><BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitStreamSizeOfEntry
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeNum
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeKanji
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeAn
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeMode8
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>

<P><STRONG><a name="[4cd]"></a>_QR_GetMinimumVersion</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gui_qr.o(i._QR_GetMinimumVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _QR_GetMinimumVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_ConvertData
</UL>

<P><STRONG><a name="[497]"></a>_QR_INPUT_Append</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_qr.o(i._QR_INPUT_Append))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _QR_INPUT_Append &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitString
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>

<P><STRONG><a name="[4c9]"></a>_QR_INPUT_AppendPaddingBit</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, gui_qr.o(i._QR_INPUT_AppendPaddingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _QR_INPUT_AppendPaddingBit &rArr; _BS_AppendBytes &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetDataLength
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
</UL>

<P><STRONG><a name="[4d7]"></a>_QR_INPUT_Check</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, gui_qr.o(i._QR_INPUT_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_INPUT_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
</UL>

<P><STRONG><a name="[4cb]"></a>_QR_INPUT_ConvertData</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gui_qr.o(i._QR_INPUT_ConvertData))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _QR_INPUT_ConvertData &rArr; _QR_INPUT_EncodeBitStream &rArr;  _QR_INPUT_EncodeBitStream (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitStreamSizeOfEntry
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetMinimumVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_MergeBitStream
</UL>

<P><STRONG><a name="[4d6]"></a>_QR_INPUT_DecodeECIFromByteArray</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_qr.o(i._QR_INPUT_DecodeECIFromByteArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _QR_INPUT_DecodeECIFromByteArray
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitStreamSizeOfEntry
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeECI
</UL>

<P><STRONG><a name="[4a0]"></a>_QR_INPUT_Delete</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_qr.o(i._QR_INPUT_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _QR_INPUT_Delete &rArr; _QR_INPUT_LIST_DeleteEntry &rArr; _BS_Delete &rArr; _Free &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeString
</UL>

<P><STRONG><a name="[4ce]"></a>_QR_INPUT_EncodeBitStream</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, gui_qr.o(i._QR_INPUT_EncodeBitStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + In Cycle
<LI>Call Chain = _QR_INPUT_EncodeBitStream &rArr;  _QR_INPUT_EncodeBitStream (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_DeleteEntry
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeStructure
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeNum
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeKanji
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeECI
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeModeAn
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeMode8
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_ConvertData
</UL>

<P><STRONG><a name="[4d2]"></a>_QR_INPUT_EncodeMode8</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui_qr.o(i._QR_INPUT_EncodeMode8))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _QR_INPUT_EncodeMode8 &rArr; _BS_AppendBytes &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[4d1]"></a>_QR_INPUT_EncodeModeAn</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gui_qr.o(i._QR_INPUT_EncodeModeAn))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _QR_INPUT_EncodeModeAn &rArr; _BS_AppendNum &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[4d5]"></a>_QR_INPUT_EncodeModeECI</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_qr.o(i._QR_INPUT_EncodeModeECI))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _QR_INPUT_EncodeModeECI &rArr; _BS_AppendNum &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_DecodeECIFromByteArray
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[4d3]"></a>_QR_INPUT_EncodeModeKanji</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gui_qr.o(i._QR_INPUT_EncodeModeKanji))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _QR_INPUT_EncodeModeKanji &rArr; _BS_AppendNum &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[4d0]"></a>_QR_INPUT_EncodeModeNum</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, gui_qr.o(i._QR_INPUT_EncodeModeNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _QR_INPUT_EncodeModeNum &rArr; _BS_AppendNum &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[4d4]"></a>_QR_INPUT_EncodeModeStructure</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gui_qr.o(i._QR_INPUT_EncodeModeStructure))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _QR_INPUT_EncodeModeStructure &rArr; _BS_AppendNum &rArr; _BS_Append &rArr; _BS_Allocate &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_AppendNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
</UL>

<P><STRONG><a name="[4cc]"></a>_QR_INPUT_EstimateBitStreamSizeOfEntry</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, gui_qr.o(i._QR_INPUT_EstimateBitStreamSizeOfEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _QR_INPUT_EstimateBitStreamSizeOfEntry &rArr; _QR_INPUT_DecodeECIFromByteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeNum
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitsModeAn
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_DecodeECIFromByteArray
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetLengthIndicator
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_ConvertData
</UL>

<P><STRONG><a name="[499]"></a>_QR_INPUT_EstimateBitsModeAn</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_qr.o(i._QR_INPUT_EstimateBitsModeAn))
<BR><BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitStreamSizeOfEntry
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>

<P><STRONG><a name="[498]"></a>_QR_INPUT_EstimateBitsModeNum</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_qr.o(i._QR_INPUT_EstimateBitsModeNum))
<BR><BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EstimateBitStreamSizeOfEntry
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>

<P><STRONG><a name="[4c8]"></a>_QR_INPUT_LIST_CreateEntry</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui_qr.o(i._QR_INPUT_LIST_CreateEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Check
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_MergeBitStream
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Append
</UL>

<P><STRONG><a name="[4cf]"></a>_QR_INPUT_LIST_DeleteEntry</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_qr.o(i._QR_INPUT_LIST_DeleteEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _QR_INPUT_LIST_DeleteEntry &rArr; _BS_Delete &rArr; _Free &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_EncodeBitStream
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Delete
</UL>

<P><STRONG><a name="[4d8]"></a>_QR_INPUT_MergeBitStream</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gui_qr.o(i._QR_INPUT_MergeBitStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _QR_INPUT_MergeBitStream &rArr; _QR_INPUT_ConvertData &rArr; _QR_INPUT_EncodeBitStream &rArr;  _QR_INPUT_EncodeBitStream (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_LIST_CreateEntry
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_ConvertData
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Create
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Append
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
</UL>

<P><STRONG><a name="[4d9]"></a>_QR_MASK_EvaluateSymbol</STRONG> (Thumb, 166 bytes, Stack size 744 bytes, gui_qr.o(i._QR_MASK_EvaluateSymbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CalcRunLength
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CalcN1N3
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_Mask
</UL>

<P><STRONG><a name="[4c4]"></a>_QR_MASK_WriteFormatInformation</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, gui_qr.o(i._QR_MASK_WriteFormatInformation))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_MASK_WriteFormatInformation
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_Mask
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
</UL>

<P><STRONG><a name="[4c3]"></a>_QR_Mask</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, gui_qr.o(i._QR_Mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_MASK_WriteFormatInformation
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_MASK_EvaluateSymbol
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
</UL>

<P><STRONG><a name="[b]"></a>_QR_Mask0</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, gui_qr.o(i._QR_Mask0))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_Mask0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>_QR_Mask1</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, gui_qr.o(i._QR_Mask1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_Mask1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>_QR_Mask2</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, gui_qr.o(i._QR_Mask2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_Mask2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>_QR_Mask3</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, gui_qr.o(i._QR_Mask3))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_Mask3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>_QR_Mask4</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, gui_qr.o(i._QR_Mask4))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_Mask4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>_QR_Mask5</STRONG> (Thumb, 94 bytes, Stack size 28 bytes, gui_qr.o(i._QR_Mask5))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _QR_Mask5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>_QR_Mask6</STRONG> (Thumb, 86 bytes, Stack size 28 bytes, gui_qr.o(i._QR_Mask6))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _QR_Mask6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>_QR_Mask7</STRONG> (Thumb, 86 bytes, Stack size 28 bytes, gui_qr.o(i._QR_Mask7))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _QR_Mask7
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_qr.o(.data)
</UL>
<P><STRONG><a name="[4dc]"></a>_QR_PutAlignmentMarker</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, gui_qr.o(i._QR_PutAlignmentMarker))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _QR_PutAlignmentMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_PutAlignmentPattern
</UL>

<P><STRONG><a name="[4c7]"></a>_QR_PutAlignmentPattern</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, gui_qr.o(i._QR_PutAlignmentPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = _QR_PutAlignmentPattern &rArr; _QR_PutAlignmentMarker
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_PutAlignmentMarker
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrameSub
</UL>

<P><STRONG><a name="[4c6]"></a>_QR_PutFinderPattern</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, gui_qr.o(i._QR_PutFinderPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _QR_PutFinderPattern
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CreateFrameSub
</UL>

<P><STRONG><a name="[4bf]"></a>_QR_RAW_Create</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, gui_qr.o(i._QR_RAW_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _QR_RAW_Create &rArr; _QR_INPUT_MergeBitStream &rArr; _QR_INPUT_ConvertData &rArr; _QR_INPUT_EncodeBitStream &rArr;  _QR_INPUT_EncodeBitStream (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_Init
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Delete
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_MergeBitStream
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_AppendPaddingBit
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_GetDataLength
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Calloc
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_ToByte
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BS_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
</UL>

<P><STRONG><a name="[4c1]"></a>_QR_RAW_Delete</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_qr.o(i._QR_RAW_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _QR_RAW_Delete &rArr; _Free &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
</UL>

<P><STRONG><a name="[4c2]"></a>_QR_RAW_GetCode</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, gui_qr.o(i._QR_RAW_GetCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _QR_RAW_GetCode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_CODE_EncodeMask
</UL>

<P><STRONG><a name="[4dd]"></a>_RS_BLOCK_Init</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, gui_qr.o(i._RS_BLOCK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _RS_BLOCK_Init &rArr; _InitRS &rArr; _InitRSChar &rArr; _Calloc &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_InitBlock
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRS
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_RAW_Create
</UL>

<P><STRONG><a name="[4de]"></a>_RS_BLOCK_InitBlock</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_qr.o(i._RS_BLOCK_InitBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _RS_BLOCK_InitBlock &rArr; _EncodeRSChar &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeRSChar
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RS_BLOCK_Init
</UL>

<P><STRONG><a name="[4e4]"></a>_SplitString</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gui_qr.o(i._SplitString))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _SplitString &rArr; _EatNum &rArr; _EatAn &rArr; _Eat8 &rArr; _QR_INPUT_Append &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_QR_INPUT_Append
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IdentifyMode
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatNum
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EatAn
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Eat8
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitStringToQRinput
</UL>

<P><STRONG><a name="[49f]"></a>_SplitStringToQRinput</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_qr.o(i._SplitStringToQRinput))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _SplitStringToQRinput &rArr; _SplitString &rArr; _EatNum &rArr; _EatAn &rArr; _Eat8 &rArr; _QR_INPUT_Append &rArr; _QR_INPUT_LIST_CreateEntry &rArr; _Malloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SplitString
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Malloc
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IdentifyMode
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EncodeString
</UL>

<P><STRONG><a name="[122]"></a>_CalcSizeOfChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Encode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>_Encode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_uc_encodeutf8.o(i._Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Encode
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizeOfChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>_GetCharCode</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>_GetCharSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>_Color2IndexBulk</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>_OnExit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[3cf]"></a>_GetDevProp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>

<P><STRONG><a name="[3d8]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
</UL>

<P><STRONG><a name="[3a2]"></a>LCD_ReadRectEx</STRONG> (Thumb, 426 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[ff]"></a>_CopyBuffer</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[47e]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, guidrv_lin_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47a]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, guidrv_lin_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47b]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, guidrv_lin_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47f]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 206 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[12c]"></a>_DrawBitmap</STRONG> (Thumb, 390 bytes, Stack size 72 bytes, guidrv_lin_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>_FillRect</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[4a4]"></a>_FillRectOpt16</STRONG> (Thumb, 326 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._FillRectOpt16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[136]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>_GetDevFunc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>_GetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>_GetPos</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[137]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _Init &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[46f]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[fb]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fa]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[102]"></a>_ReadRect</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f7]"></a>_SetAlpha</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetAlpha &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fc]"></a>_SetAlphaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fe]"></a>_SetChroma</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[fd]"></a>_SetChromaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[101]"></a>_SetDevFunc</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetDevFunc &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[133]"></a>_SetOrg</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, guidrv_lin_16.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, guidrv_lin_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>_SetPos</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, guidrv_lin_16.o(i._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _SetPos &rArr; _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f4]"></a>_SetSize</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidrv_lin_16.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _SetSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f2]"></a>_SetVRAMAddr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetVRAMAddr &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f3]"></a>_SetVSize</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f8]"></a>_SetVis</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[100]"></a>_ShowBuffer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ShowBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[132]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>_CopyBuffer</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[479]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, guidrv_lin_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawBitLine1BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[480]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 164 bytes, Stack size 28 bytes, guidrv_lin_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[481]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 160 bytes, Stack size 28 bytes, guidrv_lin_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[482]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, guidrv_lin_32.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[138]"></a>_DrawBitmap</STRONG> (Thumb, 384 bytes, Stack size 72 bytes, guidrv_lin_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>_FillRect</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt32
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[4a5]"></a>_FillRectOpt32</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._FillRectOpt32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _FillRectOpt32
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[142]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>_GetDevFunc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>_GetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>_GetPos</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _GetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[143]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _Init &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[470]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[10c]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10b]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[113]"></a>_ReadRect</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, guidrv_lin_32.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[108]"></a>_SetAlpha</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetAlpha &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10d]"></a>_SetAlphaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10f]"></a>_SetChroma</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10e]"></a>_SetChromaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[112]"></a>_SetDevFunc</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetDevFunc &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[13f]"></a>_SetOrg</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, guidrv_lin_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>_SetPos</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, guidrv_lin_32.o(i._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _SetPos &rArr; _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[105]"></a>_SetSize</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _SetSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[103]"></a>_SetVRAMAddr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetVRAMAddr &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[104]"></a>_SetVSize</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[109]"></a>_SetVis</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetVis &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[111]"></a>_ShowBuffer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ShowBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[13e]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[2de]"></a>_OnButtonPressed</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[2df]"></a>_OnButtonReleased</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[13]"></a>_OnTouchDefault</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[2f2]"></a>_OnTouch</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, checkbox.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[3fa]"></a>_AdjustEdit</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, spinbox.o(i._AdjustEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _AdjustEdit &rArr; WM_SetWindowPos &rArr; WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
</UL>

<P><STRONG><a name="[4ae]"></a>_GetButtonIndex</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, spinbox.o(i._GetButtonIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetButtonIndex &rArr; SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsInRect
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[3f0]"></a>_GetDecs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, spinbox.o(i._GetDecs))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[4b9]"></a>_InvalidateButtonRect</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, spinbox.o(i._InvalidateButtonRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _InvalidateButtonRect &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>

<P><STRONG><a name="[4af]"></a>_IsInRect</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, spinbox.o(i._IsInRect))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
</UL>

<P><STRONG><a name="[3ed]"></a>_OnAction</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, spinbox.o(i._OnAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _OnAction &rArr; WM_IsFocusable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[4bc]"></a>_OnButtonReleased</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, spinbox.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _OnButtonReleased &rArr; _InvalidateButtonRect &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[3ec]"></a>_OnPidStateChange</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, spinbox.o(i._OnPidStateChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _OnPidStateChange &rArr; _OnAction &rArr; WM_IsFocusable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[3ee]"></a>_OnTouch</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, spinbox.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _OnTouch &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocusable
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[44e]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[416]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[445]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[492]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 136 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Draw
</UL>

<P><STRONG><a name="[419]"></a>_Exec1Draw</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, wm.o(i._Exec1Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[418]"></a>_Exec1Input</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, wm.o(i._Exec1Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _Exec1Input &rArr; WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[448]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[4a8]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[4a9]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[4a7]"></a>_Findy1</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[432]"></a>_Invalidate1Abs</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[ed]"></a>_OnExit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[44f]"></a>_Paint1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[451]"></a>_Paint1Trans</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[450]"></a>_PaintTransChildren</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[444]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[ec]"></a>_cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i._cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _cbBackWin &rArr; GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[ee]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[148]"></a>_MULTIBUF_Begin</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_multibuf.o(i._MULTIBUF_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _MULTIBUF_Begin &rArr; GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>_MULTIBUF_End</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_multibuf.o(i._MULTIBUF_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _MULTIBUF_End &rArr; GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[19]"></a>_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetCharWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>_GetWordWrap</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[3cd]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[3bc]"></a>_DispLine</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DispLine &rArr; GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[1a]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[4b3]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[39e]"></a>_IncReadPointer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_onkey.o(i._IncReadPointer))
<BR><BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[3ac]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[e4]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[3ae]"></a>_RemoveFromLinList</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gui_timer.o(i._RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[3af]"></a>_Unlink</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>

<P><STRONG><a name="[14c]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[151]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[485]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 324 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[486]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[487]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 350 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[159]"></a>_DrawBitmap</STRONG> (Thumb, 712 bytes, Stack size 120 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[15b]"></a>_DrawVLine</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[15c]"></a>_FillRect</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[163]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>_GetDevProp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[484]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[15f]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[48a]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[48b]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 228 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[489]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine32BPP_DDB
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[48c]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[165]"></a>_DrawBitmap</STRONG> (Thumb, 662 bytes, Stack size 112 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[166]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>_DrawVLine</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>_FillRect</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[16f]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>_GetRect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[488]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[16b]"></a>_XorPixel</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[383]"></a>_Min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[38b]"></a>_CreateStaticDevice</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[1e]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>_Paint</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, checkbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>_Paint</STRONG> (Thumb, 146 bytes, Stack size 72 bytes, checkbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[2f4]"></a>_DrawBackground</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, checkbox_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[2f5]"></a>_DrawBitmap</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, checkbox_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[2f8]"></a>_DrawFocus</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, checkbox_skinflex.o(i._DrawFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawFocus &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[48d]"></a>_GenCheck</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, checkbox_skinflex.o(i._GenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[4ab]"></a>_SetBitmapPixel_1bpp</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, checkbox_skinflex.o(i._SetBitmapPixel_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>

<P><STRONG><a name="[466]"></a>_CalcSizes</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, edit.o(i._CalcSizes))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _CalcSizes &rArr; GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[304]"></a>_ChangeCharacter</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, edit.o(i._ChangeCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ChangeCharacter &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[300]"></a>_DeleteChar</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, edit.o(i._DeleteChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DeleteChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[30c]"></a>_IncrementBuffer</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, edit.o(i._IncrementBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[301]"></a>_InsertChar</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, edit.o(i._InsertChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[4b7]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, edit.o(i._IsSpaceInBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[307]"></a>_Paint</STRONG> (Thumb, 310 bytes, Stack size 72 bytes, edit.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__InvertRectColors
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[31b]"></a>_SetValue</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, edit.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>

<P><STRONG><a name="[dc]"></a>_AddKeyDec</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, editdec.o(i._AddKeyDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _AddKeyDec &rArr; _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecChar2Int
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> editdec.o(i.EDIT_SetDecMode)
</UL>
<P><STRONG><a name="[45c]"></a>_AddPosition</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, editdec.o(i._AddPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _AddPosition &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[456]"></a>_DecChar2Int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, editdec.o(i._DecChar2Int))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[457]"></a>_EditDec</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, editdec.o(i._EditDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecChar2Int
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[316]"></a>_GetDecs</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, editdec.o(i._GetDecs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetDecs
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[459]"></a>_IncrementCursor</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, editdec.o(i._IncrementCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _IncrementCursor &rArr; EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[45a]"></a>_MakeNegative</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, editdec.o(i._MakeNegative))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _MakeNegative &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[458]"></a>_MakePositive</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, editdec.o(i._MakePositive))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _MakePositive &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[45b]"></a>_SwapSign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, editdec.o(i._SwapSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _SwapSign &rArr; _MakePositive &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[dd]"></a>_UpdateBuffer</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, editdec.o(i._UpdateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _UpdateBuffer &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> editdec.o(i.EDIT_SetDecMode)
</UL>
<P><STRONG><a name="[22]"></a>_Create</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, spinbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox_skin.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>_Paint</STRONG> (Thumb, 278 bytes, Stack size 112 bytes, spinbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Paint &rArr; SPINBOX__GetButtonRectEx &rArr; SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRectEx
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox_skin.o(.data)
</UL>
<P><STRONG><a name="[3f9]"></a>_DrawArrow</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, spinbox_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3f8]"></a>_DrawButton</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, spinbox_skinflex.o(i._DrawButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawButton &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3f6]"></a>_DrawFrame</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, spinbox_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[405]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[173]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[174]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[175]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[41f]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[438]"></a>WM__ReleaseCapture</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[eb]"></a>_cbTimer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[3c0]"></a>_DrawTwinArc4</STRONG> (Thumb, 372 bytes, Stack size 96 bytes, gui__drawtwinarc.o(i._DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawTwinArc4 &rArr; _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[493]"></a>_GetTwinArcPara</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui__drawtwinarc.o(i._GetTwinArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>

<P><STRONG><a name="[25]"></a>_GetCursorCharacter</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui__getcursorpos.o(i._GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetCursorCharacter
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>_GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gui__getcursorpos.o(i._GetCursorPosChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetCursorPosChar &rArr; GUI_UC__NumBytes2NumChars
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>_GetCursorPosX</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, gui__getcursorpos.o(i._GetCursorPosX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetCursorPosX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[35b]"></a>_DrawGradient</STRONG> (Thumb, 346 bytes, Stack size 80 bytes, gui_drawgradient.o(i._DrawGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawGradient &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>

<P><STRONG><a name="[177]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[176]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[17a]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[179]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[392]"></a>_WriteToActiveAlpha</STRONG> (Thumb, 376 bytes, Stack size 104 bytes, guidev_writetoactivealpha.o(i._WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[46d]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[46e]"></a>_Convert8</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert8))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert8 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[393]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 830 bytes, Stack size 176 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[394]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 826 bytes, Stack size 160 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[17d]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>_DrawDownRect</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>_DrawUpRect</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[181]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[182]"></a>_DrawDownRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>_DrawUpRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[40d]"></a>_BringToTop</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, wm_bringtotop.o(i._BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[ef]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i._BringToTop)
</UL>
<P><STRONG><a name="[44c]"></a>_MoveDescendents</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[4e0]"></a>_Screen2hWin</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[43b]"></a>_Screen2hWinStop</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i._Screen2hWinStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[471]"></a>_CreateBuffer</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4aa]"></a>_FlushBuffer</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, gui_sprite.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[4ac]"></a>_GetBkIndex</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndex &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4ad]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndexAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndexAlpha &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4b2]"></a>_GetDeviceRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDeviceRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4df]"></a>_ReleaseBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ReleaseBuffer &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4e3]"></a>_SetBkIndexBuffered</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_sprite.o(i._SetBkIndexBuffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _SetBkIndexBuffered &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[3a4]"></a>_SetPosition</STRONG> (Thumb, 1122 bytes, Stack size 216 bytes, gui_sprite.o(i._SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[19d]"></a>CARD_Clear</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.CARD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CARD_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26f]"></a>CRC_Calculate8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.CRC_Calculate8))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_RS485_Bridge
</UL>

<P><STRONG><a name="[22c]"></a>CRC_Handle_16</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.CRC_Handle_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CRC_Handle_16
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Accumulate
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFwInfo
</UL>

<P><STRONG><a name="[22b]"></a>CRC_Handle_8</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.CRC_Handle_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CRC_Handle_8
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Accumulate
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFwInfo
</UL>

<P><STRONG><a name="[19f]"></a>DISPCardMsg</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.DISPCardMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = DISPCardMsg &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _Exec1Draw &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1a7]"></a>DISPCreateKeypad</STRONG> (Thumb, 596 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.DISPCreateKeypad))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DISPCreateKeypad &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1a9]"></a>DISPCreateSettings1Screen</STRONG> (Thumb, 1164 bytes, Stack size 64 bytes, lto-llvm-dbe362.o(.text.DISPCreateSettings1Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = DISPCreateSettings1Screen &rArr; CHECKBOX_Create &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Create
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1ae]"></a>DISPDateTime</STRONG> (Thumb, 1328 bytes, Stack size 64 bytes, lto-llvm-dbe362.o(.text.DISPDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = DISPDateTime &rArr; GUI_DispHexAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispHexAt
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc2unix
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1e2]"></a>DISPDeleteSettings1Screen</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.DISPDeleteSettings1Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISPDeleteSettings1Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1de]"></a>DISPDeleteSettings2Screen</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.DISPDeleteSettings2Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISPDeleteSettings2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1df]"></a>DISPGuiSet</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.DISPGuiSet))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b7]"></a>DISPMessage</STRONG> (Thumb, 340 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.DISPMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = DISPMessage &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[1ba]"></a>DISPQRCode</STRONG> (Thumb, 62 bytes, Stack size 136 bytes, lto-llvm-dbe362.o(.text.DISPQRCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1092<LI>Call Chain = DISPQRCode &rArr; GUI_QR_Create &rArr; _EncodeString &rArr; _QR_CODE_EncodeMask &rArr; _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Draw
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_QR_Create
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[1bd]"></a>DISPResetScrnsvr</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.DISPResetScrnsvr))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPSetBrightnes
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Hook
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1bf]"></a>DISPSaveSettings</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.DISPSaveSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DISPSaveSettings &rArr; EE_WriteBuffer &rArr; EE_WritePage &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1ce]"></a>DISPService</STRONG> (Thumb, 11168 bytes, Stack size 128 bytes, lto-llvm-dbe362.o(.text.DISPService))
<BR><BR>[Stack]<UL><LI>Max Depth = 2952<LI>Call Chain = DISPService &rArr; GUI_PNG_Draw &rArr; png_handle_iCCP &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Create
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsPressed
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Create
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDecShift
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRoundedRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Draw
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispSDec
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Service
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Str2Int
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dec2Bcd
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPTemperatureSetPoint
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPSetBrightnes
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPSaveSettings
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPResetScrnsvr
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPGuiSet
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDeleteSettings2Screen
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDeleteSettings1Screen
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateKeypad
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCardMsg
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CARD_Clear
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc2unix
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1be]"></a>DISPSetBrightnes</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.DISPSetBrightnes))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPResetScrnsvr
</UL>

<P><STRONG><a name="[1c0]"></a>DISPTemperatureSetPoint</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.DISPTemperatureSetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = DISPTemperatureSetPoint &rArr; GUI_DispDec &rArr; GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDec
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[22f]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.DMA_CalcBaseAndBitshift))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1db]"></a>Dec2Bcd</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, lto-llvm-dbe362.o(.text.Dec2Bcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Dec2Bcd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[1c3]"></a>EE_IsDeviceReady</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.EE_IsDeviceReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = EE_IsDeviceReady &rArr; I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Delete
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>EE_ReadBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.EE_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = EE_ReadBuffer &rArr; I2Cx_ReadMultiple &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Read
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPCreateSettings1Screen
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.DISPService)
</UL>
<P><STRONG><a name="[cc]"></a>EE_WriteBuffer</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.EE_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EE_WriteBuffer &rArr; EE_WritePage &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Delete
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPSaveSettings
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.main)
</UL>
<P><STRONG><a name="[1c6]"></a>EE_WritePage</STRONG> (Thumb, 588 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.EE_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EE_WritePage &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_IsDeviceReady
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
</UL>

<P><STRONG><a name="[1c7]"></a>ErrorHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.ErrorHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Response
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Read
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Delete
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[276]"></a>FLASH_GetSector</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.FLASH_GetSector))
<BR><BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2FLASH_Copy
</UL>

<P><STRONG><a name="[277]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2FLASH_Copy
</UL>

<P><STRONG><a name="[1d6]"></a>GUI_PNG_Draw</STRONG> (Thumb, 4716 bytes, Stack size 192 bytes, lto-llvm-dbe362.o(.text.GUI_PNG_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 2824<LI>Call Chain = GUI_PNG_Draw &rArr; png_handle_iCCP &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;translate_gamma_flags
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_sig_cmp
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_expand
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_rtran_ok
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_row
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_IDAT
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_data
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tIME
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sBIT
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pHYs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_oFFs
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_bKGD
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IHDR
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IEND
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_get_IHDR
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_read_struct
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_create_png_struct
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_combine_row
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_unknown_handling
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_error
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_png_read_data
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_malloc_fn
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_free_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[a3]"></a>GUI_PNG__GetData</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.GUI_PNG__GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_PNG__GetData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[22a]"></a>GetFwInfo</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.GetFwInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetFwInfo &rArr; HAL_CRC_Accumulate &rArr; CRC_Handle_8
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Accumulate
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_8
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_16
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[29c]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22d]"></a>HAL_CRC_Accumulate</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.HAL_CRC_Accumulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_CRC_Accumulate &rArr; CRC_Handle_8
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_8
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Handle_16
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFwInfo
</UL>

<P><STRONG><a name="[1c2]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[237]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort_IT
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUADSPI_IRQHandler
</UL>

<P><STRONG><a name="[22e]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d8]"></a>HAL_Delay</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lto-llvm-dbe362.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_RS485_Bridge
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 212 bytes, Stack size 36 bytes, lto-llvm-dbe362.o(.text.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.HAL_QSPI_DeInit)
<LI> lto-llvm-dbe362.o(.text.Restart)
</UL>
<P><STRONG><a name="[ad]"></a>HAL_GPIO_Init</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lto-llvm-dbe362.o(.text.MX_QSPI_Init)
<LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
<LI> lto-llvm-dbe362.o(.text.main)
</UL>
<P><STRONG><a name="[1e7]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_I2C_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
</UL>

<P><STRONG><a name="[24d]"></a>HAL_I2C_Init</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[230]"></a>HAL_InitTick</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[232]"></a>HAL_LTDC_SetAddress</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_LTDC_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_LTDC_SetAddress &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[c9]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_MPU_ConfigRegion))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.main)
</UL>
<P><STRONG><a name="[231]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_NVIC_SystemReset))
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
</UL>

<P><STRONG><a name="[234]"></a>HAL_QSPI_Abort</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_QSPI_Abort &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
</UL>

<P><STRONG><a name="[236]"></a>HAL_QSPI_Abort_IT</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_Abort_IT))
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QUADSPI_IRQHandler
</UL>

<P><STRONG><a name="[238]"></a>HAL_QSPI_AutoPolling</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_AutoPolling &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollMemRdy
</UL>

<P><STRONG><a name="[23a]"></a>HAL_QSPI_Command</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WritePage
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Erase
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
</UL>

<P><STRONG><a name="[23b]"></a>HAL_QSPI_DeInit</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_DeInit &rArr; HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
</UL>

<P><STRONG><a name="[23c]"></a>HAL_QSPI_Receive</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_QSPI_Receive &rArr; HAL_QSPI_Abort &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
</UL>

<P><STRONG><a name="[23d]"></a>HAL_QSPI_Transmit</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_QSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_QSPI_Transmit &rArr; HAL_QSPI_Abort &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WritePage
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
</UL>

<P><STRONG><a name="[281]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[282]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[283]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b0]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[1af]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[1dd]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_SetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1dc]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23f]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_RTC_WaitForSynchro))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[ca]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_SDRAM_SendCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.main)
</UL>
<P><STRONG><a name="[c5]"></a>HAL_UART_DeInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_UART_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.Restart)
</UL>
<P><STRONG><a name="[240]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_UART_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = HAL_UART_ErrorCallback &rArr; RS485_Init &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[242]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; DISPMessage &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[244]"></a>HAL_UART_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_UART_Init &rArr; UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[248]"></a>HAL_UART_Receive</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_UART_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_UART_Receive &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_RS485_Bridge
</UL>

<P><STRONG><a name="[26d]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24a]"></a>HAL_UART_Transmit</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Response
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_RS485_Bridge
</UL>

<P><STRONG><a name="[1b2]"></a>Hex2Str</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.Hex2Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hex2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
</UL>

<P><STRONG><a name="[24b]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[1c4]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_IsDeviceReady
</UL>

<P><STRONG><a name="[1ea]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
</UL>

<P><STRONG><a name="[1e9]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
</UL>

<P><STRONG><a name="[1e6]"></a>I2Cx_Error</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.I2Cx_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2Cx_Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
</UL>

<P><STRONG><a name="[24c]"></a>I2Cx_Init</STRONG> (Thumb, 240 bytes, Stack size 64 bytes, lto-llvm-dbe362.o(.text.I2Cx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2Cx_Init &rArr; HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c5]"></a>I2Cx_ReadMultiple</STRONG> (Thumb, 576 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.I2Cx_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = I2Cx_ReadMultiple &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
</UL>

<P><STRONG><a name="[c3]"></a>Int2Str</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, lto-llvm-dbe362.o(.text.Int2Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Int2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.UART_Receive_IT)
<LI> lto-llvm-dbe362.o(.text.OW_Service)
</UL>
<P><STRONG><a name="[27c]"></a>IsNewFwUpdate</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.IsNewFwUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[266]"></a>LOGGER_Delete</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.LOGGER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = LOGGER_Delete &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_IsDeviceReady
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[267]"></a>LOGGER_Read</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.LOGGER_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = LOGGER_Read &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[1c8]"></a>LOGGER_Write</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.LOGGER_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + In Cycle
<LI>Call Chain = LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_IsDeviceReady
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233]"></a>LTDC_SetConfig</STRONG> (Thumb, 328 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[269]"></a>MX_QSPI_Init</STRONG> (Thumb, 764 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.MX_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MX_QSPI_Init &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollMemRdy
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26b]"></a>OW_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.OW_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = OW_Init &rArr; OW_SetUsart &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26e]"></a>OW_RS485_Bridge</STRONG> (Thumb, 404 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.OW_RS485_Bridge))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = OW_RS485_Bridge &rArr; OW_SetUsart &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Calculate8
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[1d9]"></a>OW_Service</STRONG> (Thumb, 3396 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.OW_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508<LI>Call Chain = OW_Service &rArr; RS485_Service &rArr; DISPQRCode &rArr; GUI_QR_Create &rArr; _EncodeString &rArr; _QR_CODE_EncodeMask &rArr; _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Write
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Erase
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Read
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Delete
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Calculate8
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26c]"></a>OW_SetUsart</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.OW_SetUsart))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = OW_SetUsart &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_RS485_Bridge
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Init
</UL>

<P><STRONG><a name="[cb]"></a>PID_Hook</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.PID_Hook))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_Hook
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPResetScrnsvr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.main)
</UL>
<P><STRONG><a name="[275]"></a>QSPI2FLASH_Copy</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.QSPI2FLASH_Copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = QSPI2FLASH_Copy &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetSector
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[274]"></a>QSPI2QSPI_Copy</STRONG> (Thumb, 228 bytes, Stack size 352 bytes, lto-llvm-dbe362.o(.text.QSPI2QSPI_Copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = QSPI2QSPI_Copy &rArr; MX_QSPI_Init &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Write
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Erase
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[26a]"></a>QSPI_AutoPollMemRdy</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.QSPI_AutoPollMemRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QSPI_AutoPollMemRdy &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WritePage
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Erase
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
</UL>

<P><STRONG><a name="[239]"></a>QSPI_Config</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.QSPI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>

<P><STRONG><a name="[aa]"></a>QSPI_DMAAbortCplt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.QSPI_DMAAbortCplt))
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.HAL_QSPI_Abort_IT)
<LI> lto-llvm-dbe362.o(.text.QUADSPI_IRQHandler)
</UL>
<P><STRONG><a name="[273]"></a>QSPI_Erase</STRONG> (Thumb, 120 bytes, Stack size 96 bytes, lto-llvm-dbe362.o(.text.QSPI_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = QSPI_Erase &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollMemRdy
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[272]"></a>QSPI_MemMapMode</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.QSPI_MemMapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = QSPI_MemMapMode &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[235]"></a>QSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.QSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>

<P><STRONG><a name="[271]"></a>QSPI_Write</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.QSPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = QSPI_Write &rArr; QSPI_WritePage &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
</UL>

<P><STRONG><a name="[279]"></a>QSPI_WriteEnable</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.QSPI_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WritePage
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Erase
</UL>

<P><STRONG><a name="[27a]"></a>QSPI_WritePage</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, lto-llvm-dbe362.o(.text.QSPI_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = QSPI_WritePage &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollMemRdy
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Write
</UL>

<P><STRONG><a name="[241]"></a>RS485_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.RS485_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = RS485_Init &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27b]"></a>RS485_Response</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.RS485_Response))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = RS485_Response &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
</UL>

<P><STRONG><a name="[270]"></a>RS485_Service</STRONG> (Thumb, 2380 bytes, Stack size 376 bytes, lto-llvm-dbe362.o(.text.RS485_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468<LI>Call Chain = RS485_Service &rArr; DISPQRCode &rArr; GUI_QR_Create &rArr; _EncodeString &rArr; _QR_CODE_EncodeMask &rArr; _QR_Mask &rArr; _QR_MASK_EvaluateSymbol &rArr; _QR_CalcRunLength
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Response
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Write
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_MemMapMode
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Erase
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2QSPI_Copy
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI2FLASH_Copy
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_RS485_Bridge
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QSPI_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Write
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Read
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LOGGER_Delete
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNewFwUpdate
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFwInfo
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WriteBuffer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_IsDeviceReady
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPQRCode
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Calculate8
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc2unix
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23e]"></a>RTC_EnterInitMode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.RTC_EnterInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1cf]"></a>RTC_GetDateTime</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.RTC_GetDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_GetDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
</UL>

<P><STRONG><a name="[19c]"></a>Restart</STRONG> (Thumb, 816 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Restart &rArr; HAL_QSPI_DeInit &rArr; HAL_DMA_DeInit &rArr; DMA_CalcBaseAndBitshift
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_Service
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[c4]"></a>Str2Hex</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.Str2Hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Str2Hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.RS485_Service)
</UL>
<P><STRONG><a name="[1e3]"></a>Str2Int</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, lto-llvm-dbe362.o(.text.Str2Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Str2Int
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e8]"></a>TS_IO_Init</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, lto-llvm-dbe362.o(.text.TS_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_WritePage
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>

<P><STRONG><a name="[c6]"></a>TS_IO_Read</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.TS_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_Service
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.TS_Service)
</UL>
<P><STRONG><a name="[1e4]"></a>TS_Service</STRONG> (Thumb, 776 bytes, Stack size 104 bytes, lto-llvm-dbe362.o(.text.TS_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TS_Service &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[246]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[247]"></a>UART_CheckIdleState</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = UART_DMAAbortOnError &rArr; HAL_UART_ErrorCallback &rArr; RS485_Init &rArr; ErrorHandler &rArr; LOGGER_Write &rArr;  ErrorHandler (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[243]"></a>UART_Receive_IT</STRONG> (Thumb, 2264 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = UART_Receive_IT &rArr; DISPMessage &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restart
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Response
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsNewFwUpdate
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFwInfo
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_ReadBuffer
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPMessage
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Calculate8
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[245]"></a>UART_SetConfig</STRONG> (Thumb, 404 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OW_SetUsart
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[249]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive
</UL>

<P><STRONG><a name="[b5]"></a>_Color2IndexBulk_M1555I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Color2IndexBulk_M1555I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M1555I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b9]"></a>_Color2IndexBulk_M4444I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Color2IndexBulk_M4444I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M4444I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b7]"></a>_Color2IndexBulk_M565_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Color2IndexBulk_M565_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M565_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[bd]"></a>_Color2IndexBulk_M8888I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Color2IndexBulk_M8888I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M8888I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[bb]"></a>_Color2IndexBulk_M888_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Color2IndexBulk_M888_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M888_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[bf]"></a>_DMA_AlphaBlending</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text._DMA_AlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DMA_AlphaBlending
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ExecOperation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[1cd]"></a>_DMA_Color2IndexBulk</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text._DMA_Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M888_DMA2D
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M8888I_DMA2D
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M565_DMA2D
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M4444I_DMA2D
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M1555I_DMA2D
</UL>

<P><STRONG><a name="[286]"></a>_DMA_ConvertColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text._DMA_ConvertColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DMA_ConvertColor
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ExecOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[287]"></a>_DMA_Copy</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text._DMA_Copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap32bpp
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap16bpp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyRect
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[284]"></a>_DMA_ExecOperation</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._DMA_ExecOperation))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_MixColorsBulk
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_AlphaBlending
</UL>

<P><STRONG><a name="[288]"></a>_DMA_Index2ColorBulk</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text._DMA_Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M888_DMA2D
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M8888I_DMA2D
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M565_DMA2D
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M4444I_DMA2D
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M1555I_DMA2D
</UL>

<P><STRONG><a name="[c1]"></a>_DMA_MixColors</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text._DMA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _DMA_MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[289]"></a>_GetBufferSize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._GetBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap32bpp
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap16bpp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyRect
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[264]"></a>_GetPixelformat</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._GetPixelformat))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[b6]"></a>_Index2ColorBulk_M1555I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Index2ColorBulk_M1555I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M1555I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[ba]"></a>_Index2ColorBulk_M4444I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Index2ColorBulk_M4444I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M4444I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b8]"></a>_Index2ColorBulk_M565_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Index2ColorBulk_M565_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M565_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[be]"></a>_Index2ColorBulk_M8888I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Index2ColorBulk_M8888I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M8888I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[bc]"></a>_Index2ColorBulk_M888_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._Index2ColorBulk_M888_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M888_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c8]"></a>_InvertAlpha</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._InvertAlpha))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text._LCD_MixColorsBulk)
</UL>
<P><STRONG><a name="[285]"></a>_InvertAlpha_SwapRB</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text._InvertAlpha_SwapRB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InvertAlpha_SwapRB
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[ae]"></a>_LCD_CopyBuffer</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text._LCD_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _LCD_CopyBuffer &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b0]"></a>_LCD_CopyRect</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text._LCD_CopyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LCD_CopyRect &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b3]"></a>_LCD_DrawBitmap16bpp</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text._LCD_DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LCD_DrawBitmap16bpp &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b2]"></a>_LCD_DrawBitmap32bpp</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text._LCD_DrawBitmap32bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LCD_DrawBitmap32bpp &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b4]"></a>_LCD_DrawBitmap8bpp</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text._LCD_DrawBitmap8bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _LCD_DrawBitmap8bpp
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ExecOperation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b1]"></a>_LCD_FillRect</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, lto-llvm-dbe362.o(.text._LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _LCD_FillRect &rArr; LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ExecOperation
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
<LI> lto-llvm-dbe362.o(.text._LCD_FillRect)
</UL>
<P><STRONG><a name="[c0]"></a>_LCD_GetpPalConvTable</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text._LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevFunc
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c2]"></a>_LCD_MixColorsBulk</STRONG> (Thumb, 192 bytes, Stack size 72 bytes, lto-llvm-dbe362.o(.text._LCD_MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _LCD_MixColorsBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ExecOperation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[1cc]"></a>__NVIC_SystemReset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
</UL>

<P><STRONG><a name="[cd]"></a>_free_fn</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text._free_fn))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _free_fn &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _WriteTagData
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_p2h
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_create_png_struct)
</UL>
<P><STRONG><a name="[ce]"></a>_malloc_fn</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text._malloc_fn))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _malloc_fn &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_create_png_struct)
</UL>
<P><STRONG><a name="[cf]"></a>_png_cexcept_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text._png_cexcept_error))
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_create_png_struct)
</UL>
<P><STRONG><a name="[a4]"></a>_png_read_data</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text._png_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _png_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[297]"></a>adler32</STRONG> (Thumb, 418 bytes, Stack size 28 bytes, lto-llvm-dbe362.o(.text.adler32))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = adler32
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>

<P><STRONG><a name="[20c]"></a>convert_gamma_value</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.convert_gamma_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = convert_gamma_value &rArr; png_fixed_error
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_fixed_error
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[299]"></a>crc32</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calculate_crc
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>

<P><STRONG><a name="[295]"></a>ft5336_I2C_InitializeIfRequired</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.ft5336_I2C_InitializeIfRequired))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ft5336_I2C_InitializeIfRequired &rArr; TS_IO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[296]"></a>inflate</STRONG> (Thumb, 5140 bytes, Stack size 120 bytes, lto-llvm-dbe362.o(.text.inflate))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = inflate &rArr; inflate_table
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zmemcpy
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_table
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate_fast
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adler32
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_read
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate
</UL>

<P><STRONG><a name="[2c4]"></a>inflateReset</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.inflateReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inflateReset
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
</UL>

<P><STRONG><a name="[29b]"></a>inflate_fast</STRONG> (Thumb, 952 bytes, Stack size 116 bytes, lto-llvm-dbe362.o(.text.inflate_fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = inflate_fast
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>

<P><STRONG><a name="[29a]"></a>inflate_table</STRONG> (Thumb, 912 bytes, Stack size 156 bytes, lto-llvm-dbe362.o(.text.inflate_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = inflate_table
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>

<P><STRONG><a name="[2d5]"></a>is_ICC_signature_char</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.is_ICC_signature_char))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_icc_profile_error
</UL>

<P><STRONG><a name="[2a4]"></a>mem_copy</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.mem_copy))
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_copy
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7]"></a>mem_cpy</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.mem_cpy))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lto-llvm-dbe362.o(.text.UART_Receive_IT)
<LI> lto-llvm-dbe362.o(.text.main)
</UL>
<P><STRONG><a name="[20f]"></a>png_app_error</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_app_error))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_rtran_ok
</UL>

<P><STRONG><a name="[2a5]"></a>png_app_warning</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_app_warning))
<BR><BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
</UL>

<P><STRONG><a name="[216]"></a>png_benign_error</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_benign_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = png_benign_error &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
</UL>

<P><STRONG><a name="[2a7]"></a>png_build_16bit_table</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, lto-llvm-dbe362.o(.text.png_build_16bit_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = png_build_16bit_table &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calloc
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
</UL>

<P><STRONG><a name="[2ab]"></a>png_build_8bit_table</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_build_8bit_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = png_build_8bit_table &rArr; png_gamma_8bit_correct &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
</UL>

<P><STRONG><a name="[2ac]"></a>png_cache_unknown_chunk</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_cache_unknown_chunk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = png_cache_unknown_chunk &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
</UL>

<P><STRONG><a name="[2af]"></a>png_calculate_crc</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_calculate_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = png_calculate_crc &rArr; crc32
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
</UL>

<P><STRONG><a name="[2a8]"></a>png_calloc</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_calloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = png_calloc &rArr; png_malloc &rArr; png_malloc_base &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
</UL>

<P><STRONG><a name="[2b0]"></a>png_check_IHDR</STRONG> (Thumb, 508 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_check_IHDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = png_check_IHDR
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IHDR
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_get_IHDR
</UL>

<P><STRONG><a name="[2b2]"></a>png_check_fp_number</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.png_check_fp_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = png_check_fp_number
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_fp_string
</UL>

<P><STRONG><a name="[2b1]"></a>png_check_fp_string</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_check_fp_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = png_check_fp_string &rArr; png_check_fp_number
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_fp_number
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
</UL>

<P><STRONG><a name="[1f1]"></a>png_chunk_benign_error</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_chunk_benign_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = png_chunk_benign_error &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tIME
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sBIT
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pHYs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_oFFs
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_bKGD
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IEND
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_check_gamma
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_report
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_cache_unknown_chunk
</UL>

<P><STRONG><a name="[229]"></a>png_chunk_error</STRONG> (Thumb, 36 bytes, Stack size 216 bytes, lto-llvm-dbe362.o(.text.png_chunk_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = png_chunk_error &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_format_buffer
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_default_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tIME
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sBIT
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pHYs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_oFFs
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_bKGD
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IHDR
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IEND
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
</UL>

<P><STRONG><a name="[2b5]"></a>png_chunk_report</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_chunk_report))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = png_chunk_report &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_icc_profile_error
</UL>

<P><STRONG><a name="[1f3]"></a>png_chunk_unknown_handling</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_chunk_unknown_handling))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_chunk_unknown_handling
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2a6]"></a>png_chunk_warning</STRONG> (Thumb, 40 bytes, Stack size 232 bytes, lto-llvm-dbe362.o(.text.png_chunk_warning))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_format_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_check_gamma
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_report
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
</UL>

<P><STRONG><a name="[2b6]"></a>png_colorspace_check_gamma</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_colorspace_check_gamma))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = png_colorspace_check_gamma &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
</UL>

<P><STRONG><a name="[2b9]"></a>png_colorspace_endpoints_match</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_colorspace_endpoints_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = png_colorspace_endpoints_match
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
</UL>

<P><STRONG><a name="[2b8]"></a>png_colorspace_set_sRGB</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_colorspace_set_sRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = png_colorspace_set_sRGB &rArr; png_icc_profile_error &rArr; png_chunk_report &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_icc_profile_error
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_endpoints_match
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_check_gamma
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
</UL>

<P><STRONG><a name="[2bb]"></a>png_colorspace_sync</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_colorspace_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = png_colorspace_sync &rArr; png_free_data &rArr; png_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
</UL>

<P><STRONG><a name="[214]"></a>png_combine_row</STRONG> (Thumb, 988 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.png_combine_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = png_combine_row &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[217]"></a>png_crc_finish</STRONG> (Thumb, 168 bytes, Stack size 1048 bytes, lto-llvm-dbe362.o(.text.png_crc_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_data
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_IDAT
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tIME
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sBIT
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pHYs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_oFFs
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_bKGD
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IHDR
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IEND
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_cache_unknown_chunk
</UL>

<P><STRONG><a name="[2ae]"></a>png_crc_read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_crc_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = png_crc_read &rArr; png_calculate_crc &rArr; crc32
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_data
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calculate_crc
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_read
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tIME
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sRGB
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sBIT
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pHYs
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_oFFs
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_bKGD
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IHDR
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_cache_unknown_chunk
</UL>

<P><STRONG><a name="[1ec]"></a>png_create_png_struct</STRONG> (Thumb, 144 bytes, Stack size 1016 bytes, lto-llvm-dbe362.o(.text.png_create_png_struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 1044<LI>Call Chain = png_create_png_struct &rArr; png_malloc_warn &rArr; png_malloc_base &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setjmp
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy8
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2c1]"></a>png_decompress_chunk</STRONG> (Thumb, 344 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.png_decompress_chunk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = png_decompress_chunk &rArr; png_inflate &rArr; inflate &rArr; inflate_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateReset
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
</UL>

<P><STRONG><a name="[2b3]"></a>png_default_error</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_default_error))
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_longjmp
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
</UL>

<P><STRONG><a name="[2c6]"></a>png_destroy_gamma_table</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_destroy_gamma_table))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = png_destroy_gamma_table &rArr; png_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_read_struct
</UL>

<P><STRONG><a name="[2c7]"></a>png_destroy_png_struct</STRONG> (Thumb, 58 bytes, Stack size 856 bytes, lto-llvm-dbe362.o(.text.png_destroy_png_struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = png_destroy_png_struct &rArr; png_free_jmpbuf &rArr; setjmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy8
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_jmpbuf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_read_struct
</UL>

<P><STRONG><a name="[208]"></a>png_destroy_read_struct</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_destroy_read_struct))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = png_destroy_read_struct &rArr; png_destroy_png_struct &rArr; png_free_jmpbuf &rArr; setjmp
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_png_struct
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_gamma_table
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2cc]"></a>png_do_check_palette_indexes</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_do_check_palette_indexes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = png_do_check_palette_indexes
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
</UL>

<P><STRONG><a name="[2c9]"></a>png_do_expand</STRONG> (Thumb, 708 bytes, Stack size 28 bytes, lto-llvm-dbe362.o(.text.png_do_expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = png_do_expand
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
</UL>

<P><STRONG><a name="[2cb]"></a>png_do_gray_to_rgb</STRONG> (Thumb, 244 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.png_do_gray_to_rgb))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = png_do_gray_to_rgb
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
</UL>

<P><STRONG><a name="[213]"></a>png_do_read_transformations</STRONG> (Thumb, 7184 bytes, Stack size 80 bytes, lto-llvm-dbe362.o(.text.png_do_read_transformations))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = png_do_read_transformations &rArr; png_do_expand
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_strip_channel
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_gray_to_rgb
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_expand
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_check_palette_indexes
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2ca]"></a>png_do_strip_channel</STRONG> (Thumb, 208 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.png_do_strip_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = png_do_strip_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
</UL>

<P><STRONG><a name="[228]"></a>png_error</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_error))
<BR><BR>[Calls]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_default_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_data
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_array
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_get_uint_31
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_fixed_error
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_combine_row
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_IHDR
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_warning
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_error
</UL>

<P><STRONG><a name="[294]"></a>png_fixed_error</STRONG> (Thumb, 96 bytes, Stack size 224 bytes, lto-llvm-dbe362.o(.text.png_fixed_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = png_fixed_error
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_gamma_value
</UL>

<P><STRONG><a name="[2b4]"></a>png_format_buffer</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_format_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = png_format_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
</UL>

<P><STRONG><a name="[d3]"></a>png_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zfree
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_jmpbuf
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_read_struct
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_png_struct
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_gamma_table
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_cache_unknown_chunk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_destroy_read_struct)
</UL>
<P><STRONG><a name="[2bd]"></a>png_free_data</STRONG> (Thumb, 742 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_free_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = png_free_data &rArr; png_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_read_struct
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_sync
</UL>

<P><STRONG><a name="[2c8]"></a>png_free_jmpbuf</STRONG> (Thumb, 76 bytes, Stack size 176 bytes, lto-llvm-dbe362.o(.text.png_free_jmpbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = png_free_jmpbuf &rArr; setjmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setjmp
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_png_struct
</UL>

<P><STRONG><a name="[2ce]"></a>png_gamma_16bit_correct</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_gamma_16bit_correct))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = png_gamma_16bit_correct &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_correct
</UL>

<P><STRONG><a name="[d8]"></a>png_gamma_8bit_correct</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_gamma_8bit_correct))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = png_gamma_8bit_correct &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_correct
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_8bit_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_read_start_row)
</UL>
<P><STRONG><a name="[d7]"></a>png_gamma_correct</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_gamma_correct))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = png_gamma_correct &rArr; png_gamma_8bit_correct &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_8bit_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_read_start_row)
</UL>
<P><STRONG><a name="[209]"></a>png_get_IHDR</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.png_get_IHDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = png_get_IHDR &rArr; png_check_IHDR
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_IHDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[d4]"></a>png_get_fixed_point</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_get_fixed_point))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_gAMA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_handle_cHRM)
</UL>
<P><STRONG><a name="[2cf]"></a>png_get_uint_31</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_get_uint_31))
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_IHDR
</UL>

<P><STRONG><a name="[1f6]"></a>png_handle_IEND</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_handle_IEND))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = png_handle_IEND &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1f2]"></a>png_handle_IHDR</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.png_handle_IHDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = png_handle_IHDR &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_get_uint_31
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_IHDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1f5]"></a>png_handle_PLTE</STRONG> (Thumb, 532 bytes, Stack size 808 bytes, lto-llvm-dbe362.o(.text.png_handle_PLTE))
<BR><BR>[Stack]<UL><LI>Max Depth = 2120<LI>Call Chain = png_handle_PLTE &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1f7]"></a>png_handle_bKGD</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_handle_bKGD))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = png_handle_bKGD &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1f8]"></a>png_handle_cHRM</STRONG> (Thumb, 1388 bytes, Stack size 240 bytes, lto-llvm-dbe362.o(.text.png_handle_cHRM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1552<LI>Call Chain = png_handle_cHRM &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_sync
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_endpoints_match
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1ff]"></a>png_handle_gAMA</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_handle_gAMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = png_handle_gAMA &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_get_fixed_point
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_sync
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_check_gamma
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1f9]"></a>png_handle_hIST</STRONG> (Thumb, 372 bytes, Stack size 544 bytes, lto-llvm-dbe362.o(.text.png_handle_hIST))
<BR><BR>[Stack]<UL><LI>Max Depth = 1856<LI>Call Chain = png_handle_hIST &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[204]"></a>png_handle_iCCP</STRONG> (Thumb, 1728 bytes, Stack size 1320 bytes, lto-llvm-dbe362.o(.text.png_handle_iCCP))
<BR><BR>[Stack]<UL><LI>Max Depth = 2632<LI>Call Chain = png_handle_iCCP &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_read
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_icc_profile_error
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_sync
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adler32
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1fc]"></a>png_handle_iTXt</STRONG> (Thumb, 424 bytes, Stack size 72 bytes, lto-llvm-dbe362.o(.text.png_handle_iTXt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468<LI>Call Chain = png_handle_iTXt &rArr; png_decompress_chunk &rArr; png_inflate &rArr; inflate &rArr; inflate_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1fa]"></a>png_handle_oFFs</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_handle_oFFs))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = png_handle_oFFs &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[206]"></a>png_handle_pCAL</STRONG> (Thumb, 824 bytes, Stack size 64 bytes, lto-llvm-dbe362.o(.text.png_handle_pCAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376<LI>Call Chain = png_handle_pCAL &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_fp_string
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1fd]"></a>png_handle_pHYs</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_handle_pHYs))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = png_handle_pHYs &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[207]"></a>png_handle_sBIT</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_handle_sBIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = png_handle_sBIT &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[201]"></a>png_handle_sCAL</STRONG> (Thumb, 660 bytes, Stack size 48 bytes, lto-llvm-dbe362.o(.text.png_handle_sCAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = png_handle_sCAL &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_fp_string
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_fp_number
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[205]"></a>png_handle_sPLT</STRONG> (Thumb, 688 bytes, Stack size 48 bytes, lto-llvm-dbe362.o(.text.png_handle_sPLT))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = png_handle_sPLT &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_array
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[203]"></a>png_handle_sRGB</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_handle_sRGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336<LI>Call Chain = png_handle_sRGB &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_sync
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1fb]"></a>png_handle_tEXt</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.png_handle_tEXt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = png_handle_tEXt &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[200]"></a>png_handle_tIME</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, lto-llvm-dbe362.o(.text.png_handle_tIME))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = png_handle_tIME &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1fe]"></a>png_handle_tRNS</STRONG> (Thumb, 508 bytes, Stack size 272 bytes, lto-llvm-dbe362.o(.text.png_handle_tRNS))
<BR><BR>[Stack]<UL><LI>Max Depth = 1584<LI>Call Chain = png_handle_tRNS &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free_data
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[1f4]"></a>png_handle_unknown</STRONG> (Thumb, 608 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.png_handle_unknown))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368<LI>Call Chain = png_handle_unknown &rArr; png_cache_unknown_chunk &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_cache_unknown_chunk
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_warning
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[202]"></a>png_handle_zTXt</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, lto-llvm-dbe362.o(.text.png_handle_zTXt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452<LI>Call Chain = png_handle_zTXt &rArr; png_decompress_chunk &rArr; png_inflate &rArr; inflate &rArr; inflate_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2ba]"></a>png_icc_profile_error</STRONG> (Thumb, 356 bytes, Stack size 264 bytes, lto-llvm-dbe362.o(.text.png_icc_profile_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = png_icc_profile_error &rArr; png_chunk_report &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_safecat
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_report
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_ICC_signature_char
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_set_sRGB
</UL>

<P><STRONG><a name="[2c3]"></a>png_inflate</STRONG> (Thumb, 216 bytes, Stack size 1064 bytes, lto-llvm-dbe362.o(.text.png_inflate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340<LI>Call Chain = png_inflate &rArr; inflate &rArr; inflate_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zstream_error
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
</UL>

<P><STRONG><a name="[2c2]"></a>png_inflate_claim</STRONG> (Thumb, 224 bytes, Stack size 96 bytes, lto-llvm-dbe362.o(.text.png_inflate_claim))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = png_inflate_claim &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zstream_error
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_safecat
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflateReset
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
</UL>

<P><STRONG><a name="[2d0]"></a>png_inflate_read</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, lto-llvm-dbe362.o(.text.png_inflate_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = png_inflate_read &rArr; inflate &rArr; inflate_table
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zstream_error
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
</UL>

<P><STRONG><a name="[2c5]"></a>png_longjmp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_longjmp))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_default_error
</UL>

<P><STRONG><a name="[2a9]"></a>png_malloc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = png_malloc &rArr; png_malloc_base &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calloc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_8bit_table
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
</UL>

<P><STRONG><a name="[2d4]"></a>png_malloc_array</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_malloc_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_malloc_array &rArr; png_malloc_array_checked
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_array_checked
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
</UL>

<P><STRONG><a name="[2d7]"></a>png_malloc_array_checked</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_malloc_array_checked))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_malloc_array_checked
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_array
</UL>

<P><STRONG><a name="[1ed]"></a>png_malloc_base</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_malloc_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = png_malloc_base &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_decompress_chunk
</UL>

<P><STRONG><a name="[2ad]"></a>png_malloc_warn</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_malloc_warn))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = png_malloc_warn &rArr; png_malloc_base &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zalloc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_create_png_struct
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_cache_unknown_chunk
</UL>

<P><STRONG><a name="[2b7]"></a>png_muldiv</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_muldiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = png_muldiv &rArr; floor &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_cHRM
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_colorspace_check_gamma
</UL>

<P><STRONG><a name="[211]"></a>png_read_IDAT_data</STRONG> (Thumb, 352 bytes, Stack size 1064 bytes, lto-llvm-dbe362.o(.text.png_read_IDAT_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 2376<LI>Call Chain = png_read_IDAT_data &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zstream_error
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_buffer
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_benign_error
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_IDAT
</UL>

<P><STRONG><a name="[2d1]"></a>png_read_buffer</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = png_read_buffer &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iCCP
</UL>

<P><STRONG><a name="[1f0]"></a>png_read_chunk_header</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_read_chunk_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = png_read_chunk_header &rArr; png_chunk_error &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_data
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_get_uint_31
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_error
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calculate_crc
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
</UL>

<P><STRONG><a name="[1ef]"></a>png_read_data</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_read_data))
<BR><BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_chunk_header
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_read
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
</UL>

<P><STRONG><a name="[a5]"></a>png_read_filter_row_avg</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.png_read_filter_row_avg))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = png_read_filter_row_avg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[a8]"></a>png_read_filter_row_paeth_1byte_pixel</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, lto-llvm-dbe362.o(.text.png_read_filter_row_paeth_1byte_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = png_read_filter_row_paeth_1byte_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[a9]"></a>png_read_filter_row_paeth_multibyte_pixel</STRONG> (Thumb, 120 bytes, Stack size 28 bytes, lto-llvm-dbe362.o(.text.png_read_filter_row_paeth_multibyte_pixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = png_read_filter_row_paeth_multibyte_pixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[a7]"></a>png_read_filter_row_sub</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_read_filter_row_sub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = png_read_filter_row_sub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[a6]"></a>png_read_filter_row_up</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_read_filter_row_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_read_filter_row_up
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.GUI_PNG_Draw)
</UL>
<P><STRONG><a name="[215]"></a>png_read_finish_IDAT</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_read_finish_IDAT))
<BR><BR>[Stack]<UL><LI>Max Depth = 2392<LI>Call Chain = png_read_finish_IDAT &rArr; png_read_IDAT_data &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_crc_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_row
</UL>

<P><STRONG><a name="[212]"></a>png_read_finish_row</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_read_finish_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 2416<LI>Call Chain = png_read_finish_row &rArr; png_read_finish_IDAT &rArr; png_read_IDAT_data &rArr; png_crc_finish &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_finish_IDAT
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[20e]"></a>png_read_start_row</STRONG> (Thumb, 3748 bytes, Stack size 80 bytes, lto-llvm-dbe362.o(.text.png_read_start_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = png_read_start_row &rArr; png_build_16bit_table &rArr; __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal2
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_reciprocal
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_muldiv
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_correct
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_gamma_16bit_correct
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_destroy_gamma_table
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_calloc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_8bit_table
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_build_16bit_table
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2d3]"></a>png_realloc_array</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.png_realloc_array))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = png_realloc_array &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_array_checked
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_error
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_text_2
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_unknown
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
</UL>

<P><STRONG><a name="[d5]"></a>png_reciprocal</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_reciprocal))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = png_reciprocal &rArr; floor &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_handle_cHRM)
</UL>
<P><STRONG><a name="[2d9]"></a>png_reciprocal2</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, lto-llvm-dbe362.o(.text.png_reciprocal2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = png_reciprocal2 &rArr; floor &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
</UL>

<P><STRONG><a name="[20a]"></a>png_rtran_ok</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_rtran_ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_rtran_ok
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_error
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_set_expand
</UL>

<P><STRONG><a name="[d6]"></a>png_safecat</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_safecat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_safecat
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_icc_profile_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_icc_profile_error)
</UL>
<P><STRONG><a name="[20b]"></a>png_set_expand</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_set_expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = png_set_expand &rArr; png_rtran_ok
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_rtran_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[2d2]"></a>png_set_text_2</STRONG> (Thumb, 528 bytes, Stack size 48 bytes, lto-llvm-dbe362.o(.text.png_set_text_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = png_set_text_2 &rArr; png_chunk_warning &rArr; png_format_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_realloc_array
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_base
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_zTXt
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_iTXt
</UL>

<P><STRONG><a name="[1ee]"></a>png_sig_cmp</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_sig_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = png_sig_cmp &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[210]"></a>png_warning</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_warning))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_zalloc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_start_row
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tRNS
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tIME
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_tEXt
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sPLT
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_sCAL
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_pCAL
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_hIST
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_handle_PLTE
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_do_read_transformations
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_chunk_warning
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_check_IHDR
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_benign_error
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_warning
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_app_error
</UL>

<P><STRONG><a name="[d2]"></a>png_zalloc</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, lto-llvm-dbe362.o(.text.png_zalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = png_zalloc &rArr; png_malloc_warn &rArr; png_malloc_base &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_warning
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_malloc_warn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_create_png_struct)
</UL>
<P><STRONG><a name="[d1]"></a>png_zfree</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_zfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = png_zfree &rArr; png_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lto-llvm-dbe362.o(.text.png_create_png_struct)
</UL>
<P><STRONG><a name="[2d6]"></a>png_zstream_error</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.png_zstream_error))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_read_IDAT_data
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_read
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate_claim
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;png_inflate
</UL>

<P><STRONG><a name="[1b1]"></a>rtc2unix</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lto-llvm-dbe362.o(.text.rtc2unix))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rtc2unix
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Service
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPService
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISPDateTime
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20d]"></a>translate_gamma_flags</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.translate_gamma_flags))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PNG_Draw
</UL>

<P><STRONG><a name="[298]"></a>zmemcpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-dbe362.o(.text.zmemcpy))
<BR><BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inflate
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
