<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Exe\hc.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Exe\hc.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6130100: Last Updated: Sun Feb  9 12:21:19 2020
<BR><P>
<H3>Maximum Stack Usage =       1216 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
HTTP_CGI_Handler &rArr; HC_Service &rArr; SendFwInfo &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[47]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">ADC_IRQHandler</a><BR>
 <LI><a href="#[63f]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63f]">_Findy1</a><BR>
 <LI><a href="#[641]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[641]">_Findx1</a><BR>
 <LI><a href="#[640]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[640]">_Findx0</a><BR>
 <LI><a href="#[5e7]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e7]">WM__InvalidateRect</a><BR>
 <LI><a href="#[5cd]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5cd]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[5c7]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c7]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[3de]">WM_DefaultProc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5ac]">WM_SendToParent</a><BR>
 <LI><a href="#[5b0]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[aa]">WM_DeleteWindow</a><BR>
 <LI><a href="#[5fe]">_PopFreeBlock</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63a]">_EnlargeBlocks</a><BR>
 <LI><a href="#[42f]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[435]">_InitOnce</a><BR>
 <LI><a href="#[5ed]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5ed]">_PaintTransChildren</a><BR>
 <LI><a href="#[350]">pattern_matching</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[350]">pattern_matching</a><BR>
 <LI><a href="#[5cc]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5cc]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[5b6]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b6]">_GetDialogItem</a><BR>
 <LI><a href="#[596]">WM__UpdateChildPositions</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d4]">WM_ResizeWindow</a><BR>
 <LI><a href="#[5e9]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e9]">_MoveDescendents</a><BR>
 <LI><a href="#[5b5]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b5]">WM__ForEachDesc</a><BR>
 <LI><a href="#[5ba]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5ba]">_GetDialogItem</a><BR>
 <LI><a href="#[662]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[662]">_Screen2hWin</a><BR>
 <LI><a href="#[320]">_InvertAlpha</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[320]">_InvertAlpha</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[47]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ab]">APP_GetData</a> from display.o(.text.APP_GetData) referenced from display.o(.text.DISP_Init)
 <LI><a href="#[e5]">BUTTON_Callback</a> from button.o(i.BUTTON_Callback) referenced from button.o(i.BUTTON_CreateUser)
 <LI><a href="#[98]">BUTTON_Create</a> from button_create.o(i.BUTTON_Create) referenced from display.o(.text.DISP_CreateDefaultScreen)
 <LI><a href="#[98]">BUTTON_Create</a> from button_create.o(i.BUTTON_Create) referenced from display.o(.text.DISP_CreateKeypad)
 <LI><a href="#[98]">BUTTON_Create</a> from button_create.o(i.BUTTON_Create) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[98]">BUTTON_Create</a> from button_create.o(i.BUTTON_Create) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[98]">BUTTON_Create</a> from button_create.o(i.BUTTON_Create) referenced from display.o(.text.DISP_CreateToolsScreen)
 <LI><a href="#[9]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced 2 times from button.o(.data)
 <LI><a href="#[9]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced from display.o(.text.DISP_Init)
 <LI><a href="#[99]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from display.o(.text.DISP_CreateDefaultScreen)
 <LI><a href="#[99]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from display.o(.text.DISP_CreateKeypad)
 <LI><a href="#[99]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[99]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[99]">BUTTON_SetText</a> from button.o(i.BUTTON_SetText) referenced from display.o(.text.DISP_CreateToolsScreen)
 <LI><a href="#[2f]">BusFault_Handler</a> from stm32f4xx_it.o(.text.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[77]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e6]">CHECKBOX_Callback</a> from checkbox.o(i.CHECKBOX_Callback) referenced from checkbox.o(i.CHECKBOX_CreateUser)
 <LI><a href="#[a1]">CHECKBOX_Create</a> from checkbox_create.o(i.CHECKBOX_Create) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[1c]">CHECKBOX_DrawSkinFlex</a> from checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[cf]">CHECKBOX_GetState</a> from checkbox_getstate.o(i.CHECKBOX_GetState) referenced from display.o(.text.SAVE_Settings)
 <LI><a href="#[a4]">CHECKBOX_SetState</a> from checkbox_setstate.o(i.CHECKBOX_SetState) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[a3]">CHECKBOX_SetText</a> from checkbox_settext.o(i.CHECKBOX_SetText) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[a2]">CHECKBOX_SetTextColor</a> from checkbox_settextcolor.o(i.CHECKBOX_SetTextColor) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[1b]">CHECKBOX__GetButtonSize</a> from checkbox.o(i.CHECKBOX__GetButtonSize) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[84]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[83]">DCMI_IRQHandler</a> from stm32f4xx_it.o(.text.DCMI_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8f]">DMA2D_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2D_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">DMA2_Stream1_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">DMA2_Stream2_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">DMA2_Stream3_IRQHandler</a> from fatfs_drv.o(.text.DMA2_Stream3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[71]">DMA2_Stream4_IRQHandler</a> from stm32f4xx_it.o(.text.DMA2_Stream4_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7a]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7b]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[32]">DebugMon_Handler</a> from stm32f4xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e7]">EDIT_Callback</a> from edit.o(i.EDIT_Callback) referenced from edit.o(i.EDIT_CreateUser)
 <LI><a href="#[a5]">EDIT_Create</a> from edit_create.o(i.EDIT_Create) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[a7]">EDIT_EnableBlink</a> from edit_enableblink.o(i.EDIT_EnableBlink) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[a6]">EDIT_SetText</a> from edit.o(i.EDIT_SetText) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[72]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">EXTI0_IRQHandler</a> from stm32f4xx_it.o(.text.EXTI0_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(.text.EXTI15_10_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3e]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">EXTI9_5_IRQHandler</a> from stm32f4xx_it.o(.text.EXTI9_5_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[39]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[86]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ae]">GPIO_Init</a> from stm32f4xx_gpio.o(.text.GPIO_Init) referenced from eth_bsp.o(.text.ETHERNET_Init)
 <LI><a href="#[ae]">GPIO_Init</a> from stm32f4xx_gpio.o(.text.GPIO_Init) referenced from stm32f429i_lcd.o(.text.LCD_AF_GPIOConfig)
 <LI><a href="#[ae]">GPIO_Init</a> from stm32f4xx_gpio.o(.text.GPIO_Init) referenced from sdio_sd.o(.text.SD_LowLevel_Init)
 <LI><a href="#[ae]">GPIO_Init</a> from stm32f4xx_gpio.o(.text.GPIO_Init) referenced from spi_flash.o(.text.SPIFLASH_Init)
 <LI><a href="#[ae]">GPIO_Init</a> from stm32f4xx_gpio.o(.text.GPIO_Init) referenced from wiegand.o(.text.WIEGAND_Init)
 <LI><a href="#[af]">GPIO_PinAFConfig</a> from stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) referenced from eth_bsp.o(.text.ETHERNET_Init)
 <LI><a href="#[af]">GPIO_PinAFConfig</a> from stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) referenced from stm32f429i_lcd.o(.text.LCD_AF_GPIOConfig)
 <LI><a href="#[af]">GPIO_PinAFConfig</a> from stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) referenced from stm32f429i_sdram.o(.text.SDRAM_GPIOConfig)
 <LI><a href="#[af]">GPIO_PinAFConfig</a> from stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) referenced from sdio_sd.o(.text.SD_LowLevel_Init)
 <LI><a href="#[af]">GPIO_PinAFConfig</a> from stm32f4xx_gpio.o(.text.GPIO_PinAFConfig) referenced from spi_flash.o(.text.SPIFLASH_Init)
 <LI><a href="#[d4]">GPIO_SetBits</a> from stm32f4xx_gpio.o(.text.GPIO_SetBits) referenced from wiegand.o(.text.WIEGAND_Send)
 <LI><a href="#[16d]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[16e]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[16f]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[170]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[15e]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 7 times from f13_1.o(.constdata)
 <LI><a href="#[15f]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 7 times from f13_1.o(.constdata)
 <LI><a href="#[160]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 7 times from f13_1.o(.constdata)
 <LI><a href="#[161]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 7 times from f13_1.o(.constdata)
 <LI><a href="#[95]">GUI_DispDec</a> from gui_val.o(i.GUI_DispDec) referenced from fs5206.o(.text.Calibration)
 <LI><a href="#[96]">GUI_DispNextLine</a> from gui_char.o(i.GUI_DispNextLine) referenced from fs5206.o(.text.Calibration)
 <LI><a href="#[94]">GUI_DispString</a> from gui_dispstring.o(i.GUI_DispString) referenced from fs5206.o(.text.Calibration)
 <LI><a href="#[94]">GUI_DispString</a> from gui_dispstring.o(i.GUI_DispString) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[94]">GUI_DispString</a> from gui_dispstring.o(i.GUI_DispString) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[ad]">GUI_DispStringAt</a> from gui_dispstringat.o(i.GUI_DispStringAt) referenced from display.o(.text.DISP_UpdateLog)
 <LI><a href="#[fc]">GUI_DrawGradientH</a> from gui_drawgradient.o(i.GUI_DrawGradientH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[ff]">GUI_DrawGradientV</a> from gui_drawgradient.o(i.GUI_DrawGradientV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[97]">GUI_FillRect</a> from gui_fillrect.o(i.GUI_FillRect) referenced from display.o(.text.DISP_CreateDefaultScreen)
 <LI><a href="#[a0]">GUI_GotoXY</a> from gui_goto.o(i.GUI_GotoXY) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[a0]">GUI_GotoXY</a> from gui_goto.o(i.GUI_GotoXY) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[132]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._Paint1)
 <LI><a href="#[130]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[12f]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[93]">GUI_SetColor</a> from gui_setcolor.o(i.GUI_SetColor) referenced from fs5206.o(.text.Calibration)
 <LI><a href="#[93]">GUI_SetColor</a> from gui_setcolor.o(i.GUI_SetColor) referenced from display.o(.text.DISP_UpdateDateTime)
 <LI><a href="#[93]">GUI_SetColor</a> from gui_setcolor.o(i.GUI_SetColor) referenced from display.o(.text.DISP_UpdateLog)
 <LI><a href="#[ef]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[197]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[196]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[198]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[19a]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a]">GUI_X_ExecIdle</a> from gui_x.o(.text.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[0]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[1]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[85]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f4]">HEADER_Callback</a> from header.o(i.HEADER_Callback) referenced from header.o(i.HEADER_CreateUser)
 <LI><a href="#[1d]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced 2 times from header.o(.data)
 <LI><a href="#[1ab]">HTTP_CGI_Handler</a> from httpd_cgi_ssi.o(.text.HTTP_CGI_Handler) referenced from httpd_cgi_ssi.o(.rodata.HTTP_CGI)
 <LI><a href="#[db]">HTTP_ResponseHandler</a> from httpd_cgi_ssi.o(.text.HTTP_ResponseHandler) referenced from httpd_cgi_ssi.o(.text.httpd_ssi_init)
 <LI><a href="#[2d]">HardFault_Handler</a> from stm32f4xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ac]">Hex2Str</a> from common.o(.text.Hex2Str) referenced from display.o(.text.DISP_Service)
 <LI><a href="#[55]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7e]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7d]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[a9]">Int2Str</a> from common.o(.text.Int2Str) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[a9]">Int2Str</a> from common.o(.text.Int2Str) referenced from hotel_ctrl.o(.text.HC_CheckNewImageFile)
 <LI><a href="#[ec]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[ec]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientV)
 <LI><a href="#[13b]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[eb]">LCD_DrawVLine</a> from lcd.o(i.LCD_DrawVLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientH)
 <LI><a href="#[7]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[10c]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced 3 times from gui_drawbitmap_565.o(.constdata)
 <LI><a href="#[10c]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced from gui_drawbitmap_565.o(i._DrawBitmap)
 <LI><a href="#[10c]">LCD_Index2Color_565</a> from guicc_565.o(i.LCD_Index2Color_565) referenced from gui_drawbitmap_a16.o(i._DrawBitmapA565)
 <LI><a href="#[f2]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[ed]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[ed]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
 <LI><a href="#[ed]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[10a]">LCD_Index2Color_M555</a> from guicc_m555_index2color.o(i.LCD_Index2Color_M555) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[13f]">LCD_Index2Color_M565</a> from guicc_m565.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[137]">LCD_Index2Color_M8888I</a> from guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[9a]">LISTVIEW_AddColumn</a> from listview.o(i.LISTVIEW_AddColumn) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[f6]">LISTVIEW_Callback</a> from listview.o(i.LISTVIEW_Callback) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[f7]">LISTVIEW_OwnerDraw</a> from listview.o(i.LISTVIEW_OwnerDraw) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[8e]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8d]">LTDC_IRQHandler</a> from stm32f4xx_it.o(.text.LTDC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2e]">MemManage_Handler</a> from stm32f4xx_it.o(.text.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2c]">NMI_Handler</a> from stm32f4xx_it.o(.text.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">OTG_FS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[80]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7f]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[82]">OTG_HS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[81]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f8]">PROGBAR_Callback</a> from progbar.o(i.PROGBAR_Callback) referenced from progbar.o(i.PROGBAR_CreateUser)
 <LI><a href="#[c]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced 2 times from progbar.o(.data)
 <LI><a href="#[c]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced from display.o(.text.DISP_Init)
 <LI><a href="#[36]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">PendSV_Handler</a> from stm32f4xx_it.o(.text.PendSV_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[f9]">RADIO_Callback</a> from radio.o(i.RADIO_Callback) referenced from radio.o(i.RADIO_CreateUser)
 <LI><a href="#[10]">RADIO_DrawSkinFlex</a> from radio_skinflex.o(i.RADIO_DrawSkinFlex) referenced 2 times from radio.o(.data)
 <LI><a href="#[10]">RADIO_DrawSkinFlex</a> from radio_skinflex.o(i.RADIO_DrawSkinFlex) referenced from display.o(.text.DISP_Init)
 <LI><a href="#[9f]">RADIO_SetText</a> from radio_settext.o(i.RADIO_SetText) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[f]">RADIO__GetButtonSize</a> from radio.o(i.RADIO__GetButtonSize) referenced 2 times from radio.o(.data)
 <LI><a href="#[d3]">RCC_AHB1PeriphClockCmd</a> from stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd) referenced from wiegand.o(.text.WIEGAND_Init)
 <LI><a href="#[3a]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">RTC_Alarm_IRQHandler</a> from stm32f4xx_it.o(.text.RTC_Alarm_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[ce]">RTC_ByteToBcd2</a> from stm32f4xx_rtc.o(.text.RTC_ByteToBcd2) referenced from stm32f4xx_rtc.o(.text.RTC_SetTime)
 <LI><a href="#[38]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2b]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8c]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[fa]">SCROLLBAR_Callback</a> from scrollbar.o(i.SCROLLBAR_Callback) referenced from scrollbar.o(i.SCROLLBAR_CreateUser)
 <LI><a href="#[28]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced 2 times from scrollbar.o(.data)
 <LI><a href="#[d0]">SDIO_GetResponse</a> from stm32f4xx_sdio.o(.text.SDIO_GetResponse) referenced from sdio_sd.o(.text.SD_InitializeCards)
 <LI><a href="#[66]">SDIO_IRQHandler</a> from fatfs_drv.o(.text.SDIO_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[89]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8a]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[8b]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[d1]">SPIFLASH_ReadWrite</a> from spi_flash.o(.text.SPIFLASH_ReadWrite) referenced from spi_flash.o(.text.SPIFLASH_Write)
 <LI><a href="#[101]">SPINBOX_Callback</a> from spinbox.o(i.SPINBOX_Callback) referenced from spinbox.o(i.SPINBOX_CreateUser)
 <LI><a href="#[9b]">SPINBOX_CreateEx</a> from spinbox.o(i.SPINBOX_CreateEx) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[13]">SPINBOX_DrawSkinFlex</a> from spinbox_skinflex.o(i.SPINBOX_DrawSkinFlex) referenced 2 times from spinbox.o(.data)
 <LI><a href="#[13]">SPINBOX_DrawSkinFlex</a> from spinbox_skinflex.o(i.SPINBOX_DrawSkinFlex) referenced from display.o(.text.DISP_Init)
 <LI><a href="#[9d]">SPINBOX_EnableBlink</a> from spinbox.o(i.SPINBOX_EnableBlink) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[9e]">SPINBOX_SetEdge</a> from spinbox.o(i.SPINBOX_SetEdge) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[9c]">SPINBOX_SetValue</a> from spinbox.o(i.SPINBOX_SetValue) referenced from display.o(.text.DISP_CreateScanRS485BusScreen)
 <LI><a href="#[31]">SVC_Handler</a> from stm32f4xx_it.o(.text.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[b3]">Str2Hex</a> from common.o(.text.Str2Hex) referenced from httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
 <LI><a href="#[b4]">Str2Int</a> from common.o(.text.Str2Int) referenced from httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
 <LI><a href="#[34]">SysTick_Handler</a> from stm32f4xx_it.o(.text.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[91]">SystemInit</a> from system_stm32f4xx.o(.text.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[37]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4f]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">TIM6_DAC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">TIM7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[60]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[102]">TREEVIEW_Callback</a> from treeview.o(i.TREEVIEW_Callback) referenced from treeview.o(i.TREEVIEW_CreateUser)
 <LI><a href="#[103]">TREEVIEW_OwnerDraw</a> from treeview.o(i.TREEVIEW_OwnerDraw) referenced from treeview.o(i.TREEVIEW_CreateUser)
 <LI><a href="#[69]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[87]">UART7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[88]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">USART1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">USART2_IRQHandler</a> from stm32f4xx_it.o(.text.USART2_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7c]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">UsageFault_Handler</a> from stm32f4xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[189]">WIDGET_EFFECT_3D_DrawUp</a> from widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[aa]">WM_DeleteWindow</a> from wm.o(i.WM_DeleteWindow) referenced from display.o(.text.DISP_DeleteToolsScreen)
 <LI><a href="#[ee]">WM_HandlePID</a> from wm_touch.o(i.WM_HandlePID) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[133]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._Paint1)
 <LI><a href="#[35]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[e8]">_AddKeyDec</a> from editdec.o(i._AddKeyDec) referenced from editdec.o(i.EDIT_SetDecMode)
 <LI><a href="#[109]">_CalcPositions</a> from scrollbar_skin.o(i._CalcPositions) referenced from scrollbar_skin.o(i._Create)
 <LI><a href="#[164]">_CalcSizeOfChar</a> from gui_uc_encodenone.o(i._CalcSizeOfChar) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[141]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced 3 times from guicc_m565.o(.constdata)
 <LI><a href="#[bc]">_Color2IndexBulk_M1555I_DMA2D</a> from guidrv_stm32f429i.o(.text._Color2IndexBulk_M1555I_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[c0]">_Color2IndexBulk_M4444I_DMA2D</a> from guidrv_stm32f429i.o(.text._Color2IndexBulk_M4444I_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[be]">_Color2IndexBulk_M565_DMA2D</a> from guidrv_stm32f429i.o(.text._Color2IndexBulk_M565_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[139]">_Color2IndexBulk_M8888I</a> from guicc_m8888i.o(i._Color2IndexBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[c4]">_Color2IndexBulk_M8888I_DMA2D</a> from guidrv_stm32f429i.o(.text._Color2IndexBulk_M8888I_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[c2]">_Color2IndexBulk_M888_DMA2D</a> from guidrv_stm32f429i.o(.text._Color2IndexBulk_M888_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[166]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[169]">_Color2Index_565</a> from guicc_565.o(i._Color2Index_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[192]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[13e]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[136]">_Color2Index_M8888I</a> from guicc_m8888i.o(i._Color2Index_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[11a]">_CopyBuffer</a> from guidrv_lin_16.o(i._CopyBuffer) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[b]">_Create</a> from button_skin.o(i._Create) referenced 14 times from button_skin.o(.data)
 <LI><a href="#[c6]">_DMA_AlphaBlending</a> from guidrv_stm32f429i.o(.text._DMA_AlphaBlending) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[c8]">_DMA_MixColors</a> from guidrv_stm32f429i.o(.text._DMA_MixColors) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[fe]">_DrawBackgroundH</a> from scrollbar_skinflex.o(i._DrawBackgroundH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[fb]">_DrawBackgroundV</a> from scrollbar_skinflex.o(i._DrawBackgroundV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[13c]">_DrawBitmap</a> from gui_drawbitmap_565.o(i._DrawBitmap) referenced 6 times from gui_drawbitmap_565.o(.constdata)
 <LI><a href="#[13d]">_DrawBitmapA565</a> from gui_drawbitmap_a16.o(i._DrawBitmapA565) referenced from gui_drawbitmap_a16.o(.constdata)
 <LI><a href="#[18b]">_DrawDown</a> from widget_effect_3d.o(i._DrawDown) referenced 3 times from widget_effect_3d.o(.constdata)
 <LI><a href="#[18c]">_DrawDownRect</a> from widget_effect_3d.o(i._DrawDownRect) referenced 3 times from widget_effect_3d.o(.constdata)
 <LI><a href="#[191]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[100]">_DrawGraspH</a> from scrollbar_skinflex.o(i._DrawGraspH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[fd]">_DrawGraspV</a> from scrollbar_skinflex.o(i._DrawGraspV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[147]">_DrawHLine</a> from guidrv_lin_16.o(i._DrawHLine) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[2]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced 2 times from gui_bmp.o(.data)
 <LI><a href="#[2]">_DrawLine_RGB</a> from gui_bmp.o(i._DrawLine_RGB) referenced from gui_bmp.o(i._DrawBitmap_RGB)
 <LI><a href="#[18d]">_DrawUp</a> from widget_effect_none.o(i._DrawUp) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[18a]">_DrawUpRect</a> from widget_effect_3d.o(i._DrawUpRect) referenced 3 times from widget_effect_3d.o(.constdata)
 <LI><a href="#[148]">_DrawVLine</a> from guidrv_lin_16.o(i._DrawVLine) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[165]">_Encode</a> from gui_uc_encodenone.o(i._Encode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[149]">_FillRect</a> from guidrv_lin_16.o(i._FillRect) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[199]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[162]">_GetCharCode</a> from gui_uc_encodenone.o(i._GetCharCode) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[163]">_GetCharSize</a> from gui_uc_encodenone.o(i._GetCharSize) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[1f]">_GetCharWrap</a> from gui__wrap.o(i._GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[18]">_GetCursorCharacter</a> from gui__getcursorpos.o(i._GetCursorCharacter) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[17]">_GetCursorPosChar</a> from gui__getcursorpos.o(i._GetCursorPosChar) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[16]">_GetCursorPosX</a> from gui__getcursorpos.o(i._GetCursorPosX) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[150]">_GetDevData</a> from guidrv_lin_16.o(i._GetDevData) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[14e]">_GetDevFunc</a> from guidrv_lin_16.o(i._GetDevFunc) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[14f]">_GetDevProp</a> from guidrv_lin_16.o(i._GetDevProp) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[168]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[16a]">_GetIndexMask_565</a> from guicc_565.o(i._GetIndexMask_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[193]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[140]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[138]">_GetIndexMask_M8888I</a> from guicc_m8888i.o(i._GetIndexMask_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[14a]">_GetPixelIndex</a> from guidrv_lin_16.o(i._GetPixelIndex) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[111]">_GetPos</a> from guidrv_lin_16.o(i._GetPos) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[151]">_GetRect</a> from guidrv_lin_16.o(i._GetRect) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[1e]">_GetWordWrap</a> from gui__wrap.o(i._GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[10b]">_Index2ColorBitfields</a> from gui_bmp.o(i._Index2ColorBitfields) referenced from gui_bmp.o(i._Draw)
 <LI><a href="#[142]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced 3 times from guicc_m565.o(.constdata)
 <LI><a href="#[bd]">_Index2ColorBulk_M1555I_DMA2D</a> from guidrv_stm32f429i.o(.text._Index2ColorBulk_M1555I_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[c1]">_Index2ColorBulk_M4444I_DMA2D</a> from guidrv_stm32f429i.o(.text._Index2ColorBulk_M4444I_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[bf]">_Index2ColorBulk_M565_DMA2D</a> from guidrv_stm32f429i.o(.text._Index2ColorBulk_M565_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[13a]">_Index2ColorBulk_M8888I</a> from guicc_m8888i.o(i._Index2ColorBulk_M8888I) referenced from guicc_m8888i.o(.constdata)
 <LI><a href="#[c5]">_Index2ColorBulk_M8888I_DMA2D</a> from guidrv_stm32f429i.o(.text._Index2ColorBulk_M8888I_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[c3]">_Index2ColorBulk_M888_DMA2D</a> from guidrv_stm32f429i.o(.text._Index2ColorBulk_M888_DMA2D) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[167]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[114]">_Init</a> from guidrv_lin_16.o(i._Init) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[b7]">_LCD_CopyBuffer</a> from guidrv_stm32f429i.o(.text._LCD_CopyBuffer) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[b8]">_LCD_CopyRect</a> from guidrv_stm32f429i.o(.text._LCD_CopyRect) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[bb]">_LCD_DrawBitmap16bpp</a> from guidrv_stm32f429i.o(.text._LCD_DrawBitmap16bpp) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[ba]">_LCD_DrawBitmap8bpp</a> from guidrv_stm32f429i.o(.text._LCD_DrawBitmap8bpp) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[b9]">_LCD_FillRect</a> from guidrv_stm32f429i.o(.text._LCD_FillRect) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[b9]">_LCD_FillRect</a> from guidrv_stm32f429i.o(.text._LCD_FillRect) referenced from guidrv_stm32f429i.o(.text._LCD_FillRect)
 <LI><a href="#[c7]">_LCD_GetpPalConvTable</a> from guidrv_stm32f429i.o(.text._LCD_GetpPalConvTable) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[c9]">_LCD_MixColorsBulk</a> from guidrv_stm32f429i.o(.text._LCD_MixColorsBulk) referenced from guidrv_stm32f429i.o(.text.LCD_X_Config)
 <LI><a href="#[19]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[6]">_NextPixel_End</a> from gui_bmp.o(i._NextPixel_End) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[5]">_NextPixel_NextLine</a> from gui_bmp.o(i._NextPixel_NextLine) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[4]">_NextPixel_SetPixel</a> from gui_bmp.o(i._NextPixel_SetPixel) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[3]">_NextPixel_Start</a> from gui_bmp.o(i._NextPixel_Start) referenced 4 times from gui_bmp.o(.data)
 <LI><a href="#[116]">_Off</a> from guidrv_lin_16.o(i._Off) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[115]">_On</a> from guidrv_lin_16.o(i._On) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[ea]">_OnExit</a> from gui_curs1.o(i._OnExit) referenced from gui_curs1.o(i.GUI_CURSOR_SelectEx)
 <LI><a href="#[f0]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[f1]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[f3]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[f5]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[106]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[131]">_OnExit</a> from gui_alloc.o(i._OnExit) referenced from gui_alloc.o(i._InitOnce)
 <LI><a href="#[8]">_OnTouchDefault</a> from button.o(i._OnTouchDefault) referenced 2 times from button.o(.data)
 <LI><a href="#[a]">_Paint</a> from button_skin.o(i._Paint) referenced 14 times from button_skin.o(.data)
 <LI><a href="#[11d]">_ReadRect</a> from guidrv_lin_16.o(i._ReadRect) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[112]">_SetAlpha</a> from guidrv_lin_16.o(i._SetAlpha) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[117]">_SetAlphaMode</a> from guidrv_lin_16.o(i._SetAlphaMode) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[144]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[119]">_SetChroma</a> from guidrv_lin_16.o(i._SetChroma) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[118]">_SetChromaMode</a> from guidrv_lin_16.o(i._SetChromaMode) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[143]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[11c]">_SetDevFunc</a> from guidrv_lin_16.o(i._SetDevFunc) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[145]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[14d]">_SetOrg</a> from guidrv_lin_16.o(i._SetOrg) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[14b]">_SetPixelIndex</a> from guidrv_lin_16.o(i._SetPixelIndex) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[110]">_SetPos</a> from guidrv_lin_16.o(i._SetPos) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[10f]">_SetSize</a> from guidrv_lin_16.o(i._SetSize) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[10d]">_SetVRAMAddr</a> from guidrv_lin_16.o(i._SetVRAMAddr) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[10e]">_SetVSize</a> from guidrv_lin_16.o(i._SetVSize) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[113]">_SetVis</a> from guidrv_lin_16.o(i._SetVis) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[11b]">_ShowBuffer</a> from guidrv_lin_16.o(i._ShowBuffer) referenced 2 times from guidrv_lin_16.o(i._GetDevFunc)
 <LI><a href="#[e9]">_UpdateBuffer</a> from editdec.o(i._UpdateBuffer) referenced from editdec.o(i.EDIT_SetDecMode)
 <LI><a href="#[14c]">_XorPixel</a> from guidrv_lin_16.o(i._XorPixel) referenced 5 times from guidrv_lin_16.o(.constdata)
 <LI><a href="#[ca]">__2sprintf</a> from printf1.o(i.__0sprintf$1) referenced from netconf.o(.text.LwIP_Init)
 <LI><a href="#[92]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[105]">_cbBackWin</a> from wm.o(i._cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[108]">_cbInvalidateOne</a> from wm_bringtotop.o(i._cbInvalidateOne) referenced from wm_bringtotop.o(i._BringToTop)
 <LI><a href="#[107]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM__Paint)
 <LI><a href="#[104]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[135]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[b1]">atoi</a> from atoi.o(.text) referenced from hotel_ctrl.o(.text.HC_CreateCmdRequest)
 <LI><a href="#[b1]">atoi</a> from atoi.o(.text) referenced from httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
 <LI><a href="#[d6]">etharp_output</a> from etharp.o(.text.etharp_output) referenced from ethernetif.o(.text.ethernetif_init)
 <LI><a href="#[cb]">ethernet_input</a> from etharp.o(.text.ethernet_input) referenced from netconf.o(.text.LwIP_Init)
 <LI><a href="#[cc]">ethernetif_init</a> from ethernetif.o(.text.ethernetif_init) referenced from netconf.o(.text.LwIP_Init)
 <LI><a href="#[134]">fputc</a> from fputc.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[b2]">http_accept</a> from httpd.o(.text.http_accept) referenced from httpd.o(.text.HTTPD_Init)
 <LI><a href="#[d8]">http_err</a> from httpd.o(.text.http_err) referenced from httpd.o(.text.http_accept)
 <LI><a href="#[da]">http_poll</a> from httpd.o(.text.http_poll) referenced from httpd.o(.text.http_close_conn)
 <LI><a href="#[d7]">http_recv</a> from httpd.o(.text.http_recv) referenced from httpd.o(.text.http_accept)
 <LI><a href="#[d9]">http_sent</a> from httpd.o(.text.http_sent) referenced from httpd.o(.text.http_accept)
 <LI><a href="#[dc]">ipfrag_free_pbuf_custom</a> from ip_frag.o(.text.ipfrag_free_pbuf_custom) referenced from ip_frag.o(.text.ip_frag)
 <LI><a href="#[d5]">low_level_output</a> from ethernetif.o(.text.low_level_output) referenced from ethernetif.o(.text.ethernetif_init)
 <LI><a href="#[de]">lwip_htons</a> from def.o(.text.lwip_htons) referenced from tcp_out.o(.text.tcp_create_segment)
 <LI><a href="#[de]">lwip_htons</a> from def.o(.text.lwip_htons) referenced from tcp_out.o(.text.tcp_output_alloc_header)
 <LI><a href="#[de]">lwip_htons</a> from def.o(.text.lwip_htons) referenced from tcp_out.o(.text.tcp_rst)
 <LI><a href="#[df]">lwip_ntohs</a> from def.o(.text.lwip_ntohs) referenced from tcp_in.o(.text.tcp_input)
 <LI><a href="#[df]">lwip_ntohs</a> from def.o(.text.lwip_ntohs) referenced from tcp_in.o(.text.tcp_receive)
 <LI><a href="#[90]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[a8]">mem_set</a> from common.o(.text.mem_set) referenced from display.o(.text.DISP_CreateSettingsScreen)
 <LI><a href="#[a8]">mem_set</a> from common.o(.text.mem_set) referenced from display.o(.text.DISP_Keypad)
 <LI><a href="#[cd]">netbios_recv</a> from netbios.o(.text.netbios_recv) referenced from netbios.o(.text.NETBIOS_Init)
 <LI><a href="#[d2]">recv_callback_tftp</a> from tftpserver.o(.text.recv_callback_tftp) referenced from tftpserver.o(.text.TFTPD_Init)
 <LI><a href="#[d2]">recv_callback_tftp</a> from tftpserver.o(.text.recv_callback_tftp) referenced from tftpserver.o(.text.tftp_cleanup_wr)
 <LI><a href="#[e3]">rrq_recv_callback</a> from tftpserver.o(.text.rrq_recv_callback) referenced from tftpserver.o(.text.tftp_process_read)
 <LI><a href="#[b5]">strchr</a> from strchr.o(.text) referenced from httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
 <LI><a href="#[b6]">strcmp</a> from strcmp.o(.text) referenced 2 times from httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
 <LI><a href="#[b0]">strlen</a> from strlen.o(.text) referenced from hotel_ctrl.o(.text.HC_CheckNewImageFile)
 <LI><a href="#[b0]">strlen</a> from strlen.o(.text) referenced from hotel_ctrl.o(.text.HC_CreateCmdRequest)
 <LI><a href="#[e0]">tcp_accept_null</a> from tcp.o(.text.tcp_accept_null) referenced from tcp.o(.text.tcp_listen_with_backlog)
 <LI><a href="#[dd]">tcp_recv_null</a> from tcp.o(.text.tcp_recv_null) referenced from tcp.o(.text.tcp_alloc)
 <LI><a href="#[e1]">tcp_segs_free</a> from tcp.o(.text.tcp_segs_free) referenced from tcp.o(.text.tcp_pcb_purge)
 <LI><a href="#[e2]">tcpip_tcp_timer</a> from timers.o(.text.tcpip_tcp_timer) referenced from timers.o(.text.tcp_timer_needed)
 <LI><a href="#[e2]">tcpip_tcp_timer</a> from timers.o(.text.tcpip_tcp_timer) referenced from timers.o(.text.tcpip_tcp_timer)
 <LI><a href="#[e4]">wrq_recv_callback</a> from tftpserver.o(.text.wrq_recv_callback) referenced from tftpserver.o(.text.tftp_process_write)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[92]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[66d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1ac]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1be]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[66e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[66f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[670]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[671]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[672]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[673]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_chksum_copy
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_data_message
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbios_recv
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_ResponseHandler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_read
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[22b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
</UL>

<P><STRONG><a name="[655]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[674]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[675]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1af]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[676]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[677]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>

<P><STRONG><a name="[238]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadXY
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_StructInit
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[678]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1b0]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[28b]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[541]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
</UL>

<P><STRONG><a name="[b5]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
</UL>
<P><STRONG><a name="[b0]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_construct_error_message
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIEGAND_Send
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_ResponseHandler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnstr
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>
<BR>[Address Reference Count : 2]<UL><LI> hotel_ctrl.o(.text.HC_CheckNewImageFile)
<LI> hotel_ctrl.o(.text.HC_CreateCmdRequest)
</UL>
<P><STRONG><a name="[b6]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
</UL>
<P><STRONG><a name="[347]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbios_recv
</UL>

<P><STRONG><a name="[28d]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_errormsg
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_extract_filename
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_ResponseHandler
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[210]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnstr
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>

<P><STRONG><a name="[b1]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewFirmwareFile
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>
<BR>[Address Reference Count : 2]<UL><LI> httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
<LI> hotel_ctrl.o(.text.HC_CreateCmdRequest)
</UL>
<P><STRONG><a name="[1b3]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_TransformPoint
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[1b8]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1b9]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1ba]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_TransformPoint
</UL>

<P><STRONG><a name="[4e2]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_TransformPoint
</UL>

<P><STRONG><a name="[679]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[66c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1b4]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[67a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[67b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[67c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[67d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1b6]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1ad]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[67e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[67f]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>_strtoul</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[680]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[681]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[682]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>APP_GetData</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, display.o(.text.APP_GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = APP_GetData &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_Init)
</UL>
<P><STRONG><a name="[1c2]"></a>BUZZER_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, buzzer.o(.text.BUZZER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = BUZZER_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>BusFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.BusFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = BusFault_Handler &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[254]"></a>CRC_Calculate8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_crc.o(.text.CRC_Calculate8))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
</UL>

<P><STRONG><a name="[253]"></a>CRC_ResetDR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_crc.o(.text.CRC_ResetDR))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
</UL>

<P><STRONG><a name="[1c5]"></a>Calibration</STRONG> (Thumb, 604 bytes, Stack size 80 bytes, fs5206.o(.text.Calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = Calibration &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1d2]"></a>DCMI_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(.text.DCMI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>

<P><STRONG><a name="[1d1]"></a>DCMI_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(.text.DCMI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>

<P><STRONG><a name="[83]"></a>DCMI_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.DCMI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DCMI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_GetITStatus
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1d3]"></a>DISP_CreateDefaultScreen</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, display.o(.text.DISP_CreateDefaultScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = DISP_CreateDefaultScreen &rArr; DISP_uSDCardSetNewState &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1d6]"></a>DISP_CreateKeypad</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, display.o(.text.DISP_CreateKeypad))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DISP_CreateKeypad &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1d7]"></a>DISP_CreateScanRS485BusScreen</STRONG> (Thumb, 808 bytes, Stack size 64 bytes, display.o(.text.DISP_CreateScanRS485BusScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = DISP_CreateScanRS485BusScreen &rArr; LISTVIEW_Create &rArr; LISTVIEW_CreateEx &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1dd]"></a>DISP_CreateSettingsScreen</STRONG> (Thumb, 1264 bytes, Stack size 48 bytes, display.o(.text.DISP_CreateSettingsScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = DISP_CreateSettingsScreen &rArr; WM_DisableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>

<P><STRONG><a name="[1df]"></a>DISP_CreateToolsScreen</STRONG> (Thumb, 524 bytes, Stack size 48 bytes, display.o(.text.DISP_CreateToolsScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = DISP_CreateToolsScreen &rArr; SPINBOX_SetEdge &rArr; _AdjustEdit &rArr; WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateEx
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[212]"></a>DISP_DeleteDefaultScreen</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, display.o(.text.DISP_DeleteDefaultScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISP_DeleteDefaultScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[20f]"></a>DISP_DeleteKeypad</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, display.o(.text.DISP_DeleteKeypad))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISP_DeleteKeypad
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>

<P><STRONG><a name="[21f]"></a>DISP_DeleteScanRS485BusScreen</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, display.o(.text.DISP_DeleteScanRS485BusScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISP_DeleteScanRS485BusScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[21e]"></a>DISP_DeleteSettingsScreen</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, display.o(.text.DISP_DeleteSettingsScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISP_DeleteSettingsScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[215]"></a>DISP_DeleteToolsScreen</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, display.o(.text.DISP_DeleteToolsScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DISP_DeleteToolsScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1e3]"></a>DISP_FileTransferState</STRONG> (Thumb, 408 bytes, Stack size 8 bytes, display.o(.text.DISP_FileTransferState))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = DISP_FileTransferState &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[1e9]"></a>DISP_FoundDeviceList</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, display.o(.text.DISP_FoundDeviceList))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = DISP_FoundDeviceList &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1ec]"></a>DISP_Init</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, display.o(.text.DISP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = DISP_Init &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetDefaultSkin
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetDefaultButtonSize
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultTextColor
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultSkin
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Create
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_DrawEx
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDefaultTextAlign
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkin
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[201]"></a>DISP_ProgbarSetNewState</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, display.o(.text.DISP_ProgbarSetNewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DISP_ProgbarSetNewState &rArr; PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewFirmwareFile
</UL>

<P><STRONG><a name="[1d5]"></a>DISP_uSDCardSetNewState</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, display.o(.text.DISP_uSDCardSetNewState))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DISP_uSDCardSetNewState &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
</UL>

<P><STRONG><a name="[8f]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.DMA2D_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[683]"></a>DMA2D_ISR_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text.DMA2D_ISR_Handler), UNUSED)

<P><STRONG><a name="[2b6]"></a>DMA2D_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_dma2d.o(.text.DMA2D_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[6e]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_it.o(.text.DMA2_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream1_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_it.o(.text.DMA2_Stream2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream2_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fatfs_drv.o(.text.DMA2_Stream3_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_it.o(.text.DMA2_Stream4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream4_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2fb]"></a>DMA_ClearFlag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[206]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream4_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[2fc]"></a>DMA_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[300]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text.DMA_FlowControllerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[205]"></a>DMA_GetITStatus</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f4xx_dma.o(.text.DMA_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream4_IRQHandler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream2_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[208]"></a>DelayMs</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, common.o(.text.DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIEGAND_Send
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_FormatLogList
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DeleteLogListBlock
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLog
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFirmwareUpdateRequest
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFileUpdateRequest
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
</UL>

<P><STRONG><a name="[1c3]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_Init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Read
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteEnable
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteDisable
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadStatus
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIEGAND_Send
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[4df]"></a>GUI_TOUCH_X_ActivateX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(.text.GUI_TOUCH_X_ActivateX))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[2ff]"></a>DMA_ITConfig</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_dma.o(.text.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[20a]"></a>ETH_DeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text.ETH_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETH_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[20c]"></a>DISP_Keypad</STRONG> (Thumb, 2040 bytes, Stack size 48 bytes, display.o(.text.DISP_Keypad))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = DISP_Keypad &rArr; DISP_CreateSettingsScreen &rArr; WM_DisableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_DeleteKeypad
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[211]"></a>DISP_Service</STRONG> (Thumb, 3256 bytes, Stack size 48 bytes, display.o(.text.DISP_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = DISP_Service &rArr; Calibration &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAM_Init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSelUnsorted
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ScanRS485
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorCharPos
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FoundDeviceList
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_DeleteToolsScreen
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_DeleteSettingsScreen
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_DeleteScanRS485BusScreen
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_DeleteKeypad
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_DeleteDefaultScreen
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateKeypad
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[213]"></a>DISP_UpdateDateTime</STRONG> (Thumb, 728 bytes, Stack size 48 bytes, display.o(.text.DISP_UpdateDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = DISP_UpdateDateTime &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[22a]"></a>DISP_UpdateLog</STRONG> (Thumb, 1264 bytes, Stack size 24 bytes, display.o(.text.DISP_UpdateLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLogEvent
</UL>

<P><STRONG><a name="[2fd]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[2fe]"></a>DMA_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_dma.o(.text.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
</UL>

<P><STRONG><a name="[22d]"></a>ETHERNET_Init</STRONG> (Thumb, 396 bytes, Stack size 216 bytes, eth_bsp.o(.text.ETHERNET_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = ETHERNET_Init &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_ETH_MediaInterfaceConfig
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_StructInit
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_SoftwareReset
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_GetSoftwareResetStatus
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[395]"></a>ETH_CheckFrameReceived</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text.ETH_CheckFrameReceived))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETH_CheckFrameReceived
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34b]"></a>ETH_DMARxDescChainInit</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f4x7_eth.o(.text.ETH_DMARxDescChainInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ETH_DMARxDescChainInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[34a]"></a>ETH_DMATxDescChainInit</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, stm32f4x7_eth.o(.text.ETH_DMATxDescChainInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ETH_DMATxDescChainInit
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[231]"></a>ETH_GetSoftwareResetStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text.ETH_GetSoftwareResetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[34d]"></a>ETH_Get_Received_Frame</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text.ETH_Get_Received_Frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETH_Get_Received_Frame
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[233]"></a>ETH_Init</STRONG> (Thumb, 588 bytes, Stack size 56 bytes, stm32f4x7_eth.o(.text.ETH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ETH_Init &rArr; ETH_WritePHYRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_WritePHYRegister
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_ReadPHYRegister
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[349]"></a>ETH_MACAddressConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text.ETH_MACAddressConfig))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[38e]"></a>ETH_Prepare_Transmit_Descriptors</STRONG> (Thumb, 180 bytes, Stack size 20 bytes, stm32f4x7_eth.o(.text.ETH_Prepare_Transmit_Descriptors))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ETH_Prepare_Transmit_Descriptors
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
</UL>

<P><STRONG><a name="[237]"></a>ETH_ReadPHYRegister</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, stm32f4x7_eth.o(.text.ETH_ReadPHYRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ETH_ReadPHYRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[230]"></a>ETH_SoftwareReset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text.ETH_SoftwareReset))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[34c]"></a>ETH_Start</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f4x7_eth.o(.text.ETH_Start))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[232]"></a>ETH_StructInit</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f4x7_eth.o(.text.ETH_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ETH_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[235]"></a>ETH_WritePHYRegister</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f4x7_eth.o(.text.ETH_WritePHYRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ETH_WritePHYRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[3b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[23a]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[239]"></a>EXTI_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_exti.o(.text.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[297]"></a>EXTI_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32f4xx_exti.o(.text.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>

<P><STRONG><a name="[1c4]"></a>ErrorHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.ErrorHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLogEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReInit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
</UL>

<P><STRONG><a name="[2eb]"></a>FMC_GetFlagStatus</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(.text.FMC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[2ec]"></a>FMC_SDRAMCmdConfig</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_fmc.o(.text.FMC_SDRAMCmdConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_SDRAMCmdConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[2e9]"></a>FMC_SDRAMInit</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, stm32f4xx_fmc.o(.text.FMC_SDRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FMC_SDRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[2ed]"></a>FMC_SetRefreshCount</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_fmc.o(.text.FMC_SetRefreshCount))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
</UL>

<P><STRONG><a name="[23d]"></a>FS5206_Init</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, fs5206.o(.text.FS5206_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FS5206_Init &rArr; FS5206_ReadXY &rArr; FS5206_ReadBytes &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadXY
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_WriteByte
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[244]"></a>FS5206_ReadBytes</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, fs5206.o(.text.FS5206_ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FS5206_ReadBytes &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadXY
</UL>

<P><STRONG><a name="[242]"></a>FS5206_ReadXY</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, fs5206.o(.text.FS5206_ReadXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = FS5206_ReadXY &rArr; FS5206_ReadBytes &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
</UL>

<P><STRONG><a name="[241]"></a>FS5206_WriteByte</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, fs5206.o(.text.FS5206_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FS5206_WriteByte &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
</UL>

<P><STRONG><a name="[ae]"></a>GPIO_Init</STRONG> (Thumb, 130 bytes, Stack size 28 bytes, stm32f4xx_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sdio_sd.o(.text.SD_LowLevel_Init)
<LI> stm32f429i_lcd.o(.text.LCD_AF_GPIOConfig)
<LI> spi_flash.o(.text.SPIFLASH_Init)
<LI> eth_bsp.o(.text.ETHERNET_Init)
<LI> wiegand.o(.text.WIEGAND_Init)
</UL>
<P><STRONG><a name="[af]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_gpio.o(.text.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
</UL>
<BR>[Address Reference Count : 5]<UL><LI> sdio_sd.o(.text.SD_LowLevel_Init)
<LI> stm32f429i_lcd.o(.text.LCD_AF_GPIOConfig)
<LI> spi_flash.o(.text.SPIFLASH_Init)
<LI> stm32f429i_sdram.o(.text.SDRAM_GPIOConfig)
<LI> eth_bsp.o(.text.ETHERNET_Init)
</UL>
<P><STRONG><a name="[d4]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Read
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteEnable
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteDisable
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadStatus
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_clr
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wiegand.o(.text.WIEGAND_Send)
</UL>
<P><STRONG><a name="[262]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
</UL>

<P><STRONG><a name="[4e1]"></a>GUI_TOUCH_X_ActivateY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch.o(.text.GUI_TOUCH_X_ActivateY))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[24c]"></a>GUI_TOUCH_X_MeasureX</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_x_touch.o(.text.GUI_TOUCH_X_MeasureX))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_TOUCH_X_MeasureX &rArr; FS5206_ReadXY &rArr; FS5206_ReadBytes &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[24e]"></a>GUI_TOUCH_X_MeasureY</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_x_touch.o(.text.GUI_TOUCH_X_MeasureY))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GUI_TOUCH_X_MeasureY &rArr; FS5206_ReadXY &rArr; FS5206_ReadBytes &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[24f]"></a>GUI_X_Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guiconf.o(.text.GUI_X_Config))
<BR><BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[464]"></a>GUI_X_Delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_x.o(.text.GUI_X_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[1a]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text.GUI_X_ExecIdle))
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[463]"></a>GUI_X_GetTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_x.o(.text.GUI_X_GetTime))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[488]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(.text.GUI_X_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[209]"></a>Get_SysTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.Get_SysTick))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ScanRS485
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[251]"></a>HC_CheckNewFirmwareFile</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, hotel_ctrl.o(.text.HC_CheckNewFirmwareFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = HC_CheckNewFirmwareFile &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[252]"></a>HC_CheckNewImageFile</STRONG> (Thumb, 512 bytes, Stack size 56 bytes, hotel_ctrl.o(.text.HC_CheckNewImageFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = HC_CheckNewImageFile &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ResetDR
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Calculate8
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[256]"></a>HC_CreateAddrList</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, hotel_ctrl.o(.text.HC_CreateAddrList))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HC_CreateAddrList &rArr; SPIFLASH_Read &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Read
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
</UL>

<P><STRONG><a name="[259]"></a>HC_CreateCmdRequest</STRONG> (Thumb, 916 bytes, Stack size 32 bytes, hotel_ctrl.o(.text.HC_CreateCmdRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HC_CreateCmdRequest &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ScanRS485
</UL>

<P><STRONG><a name="[25a]"></a>HC_CreateFileUpdateRequest</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, hotel_ctrl.o(.text.HC_CreateFileUpdateRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = HC_CreateFileUpdateRequest &rArr; f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[25b]"></a>HC_CreateFirmwareUpdateRequest</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, hotel_ctrl.o(.text.HC_CreateFirmwareUpdateRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = HC_CreateFirmwareUpdateRequest &rArr; f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[26b]"></a>HC_CreateLogRequest</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, hotel_ctrl.o(.text.HC_CreateLogRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HC_CreateLogRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[272]"></a>HC_CreateRoomCtrlStatReq</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, hotel_ctrl.o(.text.HC_CreateRoomCtrlStatReq))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[271]"></a>HC_CreateRoomStatusRequest</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hotel_ctrl.o(.text.HC_CreateRoomStatusRequest))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[26c]"></a>HC_CreateTimeUpdatePacket</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, hotel_ctrl.o(.text.HC_CreateTimeUpdatePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HC_CreateTimeUpdatePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[25c]"></a>HC_DeleteLogListBlock</STRONG> (Thumb, 492 bytes, Stack size 16 bytes, hotel_ctrl.o(.text.HC_DeleteLogListBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HC_DeleteLogListBlock &rArr; I2CEE_WriteBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[25e]"></a>HC_FormatLogList</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, hotel_ctrl.o(.text.HC_FormatLogList))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HC_FormatLogList &rArr; I2CEE_WriteBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[260]"></a>HC_GetNextAddr</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, hotel_ctrl.o(.text.HC_GetNextAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HC_GetNextAddr &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ScanRS485
</UL>

<P><STRONG><a name="[261]"></a>HC_Init</STRONG> (Thumb, 584 bytes, Stack size 32 bytes, hotel_ctrl.o(.text.HC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = HC_Init &rArr; HC_LoadAddrList &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateAddrList
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[263]"></a>HC_LoadAddrList</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, hotel_ctrl.o(.text.HC_LoadAddrList))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = HC_LoadAddrList &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WaitBusy
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
</UL>

<P><STRONG><a name="[268]"></a>HC_ReadLogListBlock</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, hotel_ctrl.o(.text.HC_ReadLogListBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HC_ReadLogListBlock &rArr; I2CEE_ReadBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hex2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[218]"></a>HC_ScanRS485</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, hotel_ctrl.o(.text.HC_ScanRS485))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HC_ScanRS485 &rArr; HC_CreateCmdRequest &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_GetNextAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[26a]"></a>HC_Service</STRONG> (Thumb, 3448 bytes, Stack size 32 bytes, hotel_ctrl.o(.text.HC_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = HC_Service &rArr; SendFwInfo &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc2unix
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLogEvent
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLog
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_GetNextAddr
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateTimeUpdatePacket
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateRoomStatusRequest
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateRoomCtrlStatReq
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateLogRequest
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFirmwareUpdateRequest
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFileUpdateRequest
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewFirmwareFile
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26d]"></a>HC_WriteLog</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, hotel_ctrl.o(.text.HC_WriteLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HC_WriteLog &rArr; I2CEE_WriteBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLogEvent
</UL>

<P><STRONG><a name="[23b]"></a>HC_WriteLogEvent</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, hotel_ctrl.o(.text.HC_WriteLogEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLog
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[273]"></a>HTTP2RS485</STRONG> (Thumb, 304 bytes, Stack size 40 bytes, hotel_ctrl.o(.text.HTTP2RS485))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = HTTP2RS485 &rArr; UART_ReInit &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReInit
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[278]"></a>HTTPD_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, httpd.o(.text.HTTPD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = HTTPD_Init &rArr; tcp_new &rArr; tcp_alloc &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_setprio
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpd_ssi_init
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpd_cgi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ab]"></a>HTTP_CGI_Handler</STRONG> (Thumb, 6676 bytes, Stack size 56 bytes, httpd_cgi_ssi.o(.text.HTTP_CGI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = HTTP_CGI_Handler &rArr; HC_Service &rArr; SendFwInfo &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc2unix
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_set
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_clr
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIEGAND_Send
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Int2Str
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ReadLogListBlock
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_FormatLogList
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DeleteLogListBlock
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateCmdRequest
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateAddrList
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd_cgi_ssi.o(.rodata.HTTP_CGI)
</UL>
<P><STRONG><a name="[db]"></a>HTTP_ResponseHandler</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, httpd_cgi_ssi.o(.text.HTTP_ResponseHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HTTP_ResponseHandler &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_clr
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd_cgi_ssi.o(.text.httpd_ssi_init)
</UL>
<P><STRONG><a name="[2d]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = HardFault_Handler &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>Hex2Str</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, common.o(.text.Hex2Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Hex2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ReadLogListBlock
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_Service)
</UL>
<P><STRONG><a name="[28e]"></a>I2C2_Init</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, i2cee.o(.text.I2C2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_timeout
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
</UL>

<P><STRONG><a name="[28f]"></a>I2CEE_Init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, i2cee.o(.text.I2CEE_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2CEE_Init &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[264]"></a>I2CEE_ReadBytes16</STRONG> (Thumb, 392 bytes, Stack size 48 bytes, i2cee.o(.text.I2CEE_ReadBytes16))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = I2CEE_ReadBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ReadLogListBlock
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAM_Init
</UL>

<P><STRONG><a name="[25d]"></a>I2CEE_WriteBytes16</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, i2cee.o(.text.I2CEE_WriteBytes16))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = I2CEE_WriteBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_FormatLogList
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DeleteLogListBlock
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_WriteLog
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
</UL>

<P><STRONG><a name="[247]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[240]"></a>I2C_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Init
</UL>

<P><STRONG><a name="[292]"></a>I2C_DeInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(.text.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_timeout
</UL>

<P><STRONG><a name="[291]"></a>I2C_EEPROM_timeout</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, i2cee.o(.text.I2C_EEPROM_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SoftwareResetCmd
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[245]"></a>I2C_GenerateSTART</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_WriteByte
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[24a]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_WriteByte
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_timeout
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[246]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(.text.I2C_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_WriteByte
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[23f]"></a>I2C_Init</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, stm32f4xx_i2c.o(.text.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Init
</UL>

<P><STRONG><a name="[24b]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[248]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_WriteByte
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[249]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_WriteByte
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_ReadBytes
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
</UL>

<P><STRONG><a name="[293]"></a>I2C_SoftwareResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text.I2C_SoftwareResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EEPROM_timeout
</UL>

<P><STRONG><a name="[393]"></a>IWDG_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(.text.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25f]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(.text.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_FormatLogList
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
</UL>

<P><STRONG><a name="[391]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(.text.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[392]"></a>IWDG_SetReload</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(.text.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[390]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_iwdg.o(.text.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>Int2Str</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, common.o(.text.Int2Str))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Int2Str
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
</UL>
<BR>[Address Reference Count : 2]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
<LI> hotel_ctrl.o(.text.HC_CheckNewImageFile)
</UL>
<P><STRONG><a name="[294]"></a>Key_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gpio.o(.text.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Key_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[299]"></a>LCD_AF_GPIOConfig</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, stm32f429i_lcd.o(.text.LCD_AF_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_AF_GPIOConfig &rArr; LCD_DisplayOn
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[29a]"></a>LCD_DisplayOn</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f429i_lcd.o(.text.LCD_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DisplayOn
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
</UL>

<P><STRONG><a name="[29c]"></a>LCD_Init</STRONG> (Thumb, 146 bytes, Stack size 80 bytes, stm32f429i_lcd.o(.text.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAIConfig
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLSAICmd
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LTDCCLKDivConfig
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_Cmd
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a3]"></a>LCD_X_Config</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, guidrv_stm32f429i.o(.text.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColorsBulk
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncMixColors
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncGetpPalConvTable
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFuncAlphaBlending
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M888_SetCustColorConv
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M8888I_SetCustColorConv
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M565_SetCustColorConv
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M4444I_SetCustColorConv
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUICC_M1555I_SetCustColorConv
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[2b4]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 552 bytes, Stack size 88 bytes, guidrv_stm32f429i.o(.text.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerInit
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_LayerCmd
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ITConfig
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_ITConfig
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChromaMode
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetChroma
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlphaMode
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[2be]"></a>LED_Init</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gpio.o(.text.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29b]"></a>LTDC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(.text.LTDC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOn
</UL>

<P><STRONG><a name="[8d]"></a>LTDC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.LTDC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2bf]"></a>LTDC_ISR_Handler</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, guidrv_stm32f429i.o(.text.LTDC_ISR_Handler), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_ConfirmEx
</UL>

<P><STRONG><a name="[2b5]"></a>LTDC_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(.text.LTDC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[2a2]"></a>LTDC_Init</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32f4xx_ltdc.o(.text.LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LTDC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[2bd]"></a>LTDC_LayerCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(.text.LTDC_LayerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[2b9]"></a>LTDC_LayerInit</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f4xx_ltdc.o(.text.LTDC_LayerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LTDC_LayerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[2ba]"></a>LTDC_ReloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_ltdc.o(.text.LTDC_ReloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ISR_Handler
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
</UL>

<P><STRONG><a name="[2c1]"></a>LwIP_Init</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, netconf.o(.text.LwIP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = LwIP_Init &rArr; netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_default
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_init
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c7]"></a>LwIP_Periodic_Handle</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, netconf.o(.text.LwIP_Periodic_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = LwIP_Periodic_Handle &rArr; tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ca]"></a>LwIP_Pkt_Handle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, netconf.o(.text.LwIP_Pkt_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = LwIP_Pkt_Handle &rArr; ethernetif_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>MemManage_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.MemManage_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = MemManage_Handler &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2cc]"></a>NETBIOS_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, netbios.o(.text.NETBIOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NETBIOS_Init &rArr; udp_bind
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[298]"></a>NVIC_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, misc.o(.text.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[295]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, misc.o(.text.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[282]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(.text.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[33]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[219]"></a>RAM_Init</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, main.o(.text.RAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RAM_Init &rArr; I2CEE_ReadBytes16 &rArr; I2C_EEPROM_timeout &rArr; I2C2_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_ReadBytes16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[d3]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIOConfig
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AF_GPIOConfig
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_Init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wiegand.o(.text.WIEGAND_Init)
</UL>
<P><STRONG><a name="[20b]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_AHB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DeInit
</UL>

<P><STRONG><a name="[2e8]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[23e]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
</UL>

<P><STRONG><a name="[290]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
</UL>

<P><STRONG><a name="[22e]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[2e5]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[2d7]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_BackupResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2dd]"></a>RCC_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[234]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[2a1]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2d8]"></a>RCC_LSEConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[29f]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_LTDCCLKDivConfig))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[2a0]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_PLLSAICmd))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[29e]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_PLLSAIConfig))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[2da]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2d9]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[277]"></a>RS485_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, uart.o(.text.RS485_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RS485_Init &rArr; UART_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[269]"></a>RS485_Send</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uart.o(.text.RS485_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RS485_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ScanRS485
</UL>

<P><STRONG><a name="[5e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.RTC_Alarm_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_Alarm_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFlagStatus
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2d3]"></a>RTC_ClearFlag</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text.RTC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
</UL>

<P><STRONG><a name="[2d4]"></a>RTC_Config</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, rtc.o(.text.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_Config &rArr; RTC_WriteBackupRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteProtectionCmd
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2de]"></a>RTC_EnterInitMode</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, stm32f4xx_rtc.o(.text.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[229]"></a>RTC_GetDate</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
</UL>

<P><STRONG><a name="[2d2]"></a>RTC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text.RTC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Alarm_IRQHandler
</UL>

<P><STRONG><a name="[228]"></a>RTC_GetTime</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(.text.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
</UL>

<P><STRONG><a name="[2d5]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32f4xx_rtc.o(.text.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[284]"></a>RTC_SetDate</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[283]"></a>RTC_SetTime</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(.text.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[2d6]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, stm32f4xx_rtc.o(.text.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2dc]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, stm32f4xx_rtc.o(.text.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2db]"></a>RTC_WriteProtectionCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text.RTC_WriteProtectionCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[21d]"></a>SAVE_Settings</STRONG> (Thumb, 376 bytes, Stack size 56 bytes, display.o(.text.SAVE_Settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = SAVE_Settings &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_WriteBytes16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1cf]"></a>SDIO_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[305]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[303]"></a>SDIO_ClockCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[308]"></a>SDIO_DMACmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
</UL>

<P><STRONG><a name="[2e1]"></a>SDIO_DataConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(.text.SDIO_DataConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[2e4]"></a>SDIO_DeInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(.text.SDIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1ce]"></a>SDIO_GetCommandResponse</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_GetCommandResponse))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[2e2]"></a>SDIO_GetFlagStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[304]"></a>SDIO_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[2f9]"></a>SDIO_GetPowerState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[d0]"></a>SDIO_GetResponse</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, stm32f4xx_sdio.o(.text.SDIO_GetResponse))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDIO_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdio_sd.o(.text.SD_InitializeCards)
</UL>
<P><STRONG><a name="[66]"></a>SDIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fatfs_drv.o(.text.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[306]"></a>SDIO_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[2ef]"></a>SDIO_Init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(.text.SDIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[2e3]"></a>SDIO_ReadData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[2e0]"></a>SDIO_SendCommand</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f4xx_sdio.o(.text.SDIO_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[302]"></a>SDIO_SetPowerState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(.text.SDIO_SetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[2e7]"></a>SDRAM_GPIOConfig</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, stm32f429i_sdram.o(.text.SDRAM_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDRAM_GPIOConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[29d]"></a>SDRAM_Init</STRONG> (Thumb, 100 bytes, Stack size 80 bytes, stm32f429i_sdram.o(.text.SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMInit
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_InitSequence
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_GPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[2ea]"></a>SDRAM_InitSequence</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, stm32f429i_sdram.o(.text.SDRAM_InitSequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SetRefreshCount
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAMCmdConfig
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_GetFlagStatus
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[2ee]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, sdio_sd.o(.text.SD_EnableWideBusOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[2f7]"></a>SD_GetCardInfo</STRONG> (Thumb, 640 bytes, Stack size 20 bytes, sdio_sd.o(.text.SD_GetCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[2f0]"></a>SD_GetState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, sdio_sd.o(.text.SD_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_GetState &rArr; SD_SendStatus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>

<P><STRONG><a name="[2f2]"></a>SD_GetStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sdio_sd.o(.text.SD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_GetStatus &rArr; SD_GetState &rArr; SD_SendStatus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[2f3]"></a>SD_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, sdio_sd.o(.text.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[2f6]"></a>SD_InitializeCards</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, sdio_sd.o(.text.SD_InitializeCards))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_InitializeCards &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[2fa]"></a>SD_LowLevel_DMA_RxConfig</STRONG> (Thumb, 140 bytes, Stack size 80 bytes, sdio_sd.o(.text.SD_LowLevel_DMA_RxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SD_LowLevel_DMA_RxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
</UL>

<P><STRONG><a name="[301]"></a>SD_LowLevel_DMA_TxConfig</STRONG> (Thumb, 148 bytes, Stack size 80 bytes, sdio_sd.o(.text.SD_LowLevel_DMA_TxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
</UL>

<P><STRONG><a name="[2f4]"></a>SD_LowLevel_Init</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, sdio_sd.o(.text.SD_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_LowLevel_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[2f5]"></a>SD_PowerON</STRONG> (Thumb, 480 bytes, Stack size 40 bytes, sdio_sd.o(.text.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_PowerON &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClockCmd
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[207]"></a>SD_ProcessDMAIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sdio_sd.o(.text.SD_ProcessDMAIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[2e6]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, sdio_sd.o(.text.SD_ProcessIRQSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[307]"></a>SD_ReadMultiBlocks</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, sdio_sd.o(.text.SD_ReadMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SD_ReadMultiBlocks &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_RxConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[2f8]"></a>SD_SelectDeselect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sdio_sd.o(.text.SD_SelectDeselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SelectDeselect &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[2f1]"></a>SD_SendStatus</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sdio_sd.o(.text.SD_SendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_SendStatus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[309]"></a>SD_StopTransfer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sdio_sd.o(.text.SD_StopTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_StopTransfer &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
</UL>

<P><STRONG><a name="[30a]"></a>SD_WaitReadOperation</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, sdio_sd.o(.text.SD_WaitReadOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_WaitReadOperation &rArr; SD_StopTransfer &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[30b]"></a>SD_WaitWriteOperation</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, sdio_sd.o(.text.SD_WaitWriteOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_WaitWriteOperation &rArr; SD_StopTransfer &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[30c]"></a>SD_WriteMultiBlocks</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, sdio_sd.o(.text.SD_WriteMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[30d]"></a>SPIFLASH_Init</STRONG> (Thumb, 240 bytes, Stack size 64 bytes, spi_flash.o(.text.SPIFLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPIFLASH_Init &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[257]"></a>SPIFLASH_Read</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, spi_flash.o(.text.SPIFLASH_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIFLASH_Read &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateAddrList
</UL>

<P><STRONG><a name="[265]"></a>SPIFLASH_SectorErase</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, spi_flash.o(.text.SPIFLASH_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPIFLASH_SectorErase &rArr; SPIFLASH_WaitBusy &rArr; SPIFLASH_ReadStatus &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WaitBusy
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteEnable
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
</UL>

<P><STRONG><a name="[266]"></a>SPIFLASH_WaitBusy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, spi_flash.o(.text.SPIFLASH_WaitBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIFLASH_WaitBusy &rArr; SPIFLASH_ReadStatus &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
</UL>

<P><STRONG><a name="[267]"></a>SPIFLASH_Write</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, spi_flash.o(.text.SPIFLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPIFLASH_Write &rArr; SPIFLASH_SectorErase &rArr; SPIFLASH_WaitBusy &rArr; SPIFLASH_ReadStatus &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WaitBusy
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteEnable
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteDisable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
</UL>

<P><STRONG><a name="[30f]"></a>SPI_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
</UL>

<P><STRONG><a name="[311]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>

<P><STRONG><a name="[313]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>

<P><STRONG><a name="[312]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>

<P><STRONG><a name="[30e]"></a>SPI_Init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text.SPI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
</UL>

<P><STRONG><a name="[31]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[22f]"></a>SYSCFG_ETH_MediaInterfaceConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_syscfg.o(.text.SYSCFG_ETH_MediaInterfaceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
</UL>

<P><STRONG><a name="[296]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f4xx_syscfg.o(.text.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
</UL>

<P><STRONG><a name="[26e]"></a>SendFwInfo</STRONG> (Thumb, 404 bytes, Stack size 720 bytes, hotel_ctrl.o(.text.SendFwInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = SendFwInfo &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_ResetDR
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Calculate8
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateFwInfo
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_findnext
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_findfirst
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[b3]"></a>Str2Hex</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, common.o(.text.Str2Hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Str2Hex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
</UL>
<P><STRONG><a name="[b4]"></a>Str2Int</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, common.o(.text.Str2Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Str2Int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd_cgi_ssi.o(.text.HTTP_CGI_Handler)
</UL>
<P><STRONG><a name="[34]"></a>SysTick_Handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>SystemInit</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[319]"></a>TFTPD_Init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, tftpserver.o(.text.TFTPD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TFTPD_Init &rArr; udp_bind
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2d0]"></a>UART_Init</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, uart.o(.text.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
</UL>

<P><STRONG><a name="[274]"></a>UART_ReInit</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, uart.o(.text.UART_ReInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = UART_ReInit &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
</UL>

<P><STRONG><a name="[5b]"></a>USART2_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[31c]"></a>USART_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[28a]"></a>USART_DeInit</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReInit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[275]"></a>USART_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
</UL>

<P><STRONG><a name="[31e]"></a>USART_GetITStatus</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text.USART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[31d]"></a>USART_ITConfig</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[31b]"></a>USART_Init</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, stm32f4xx_usart.o(.text.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReInit
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[276]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP2RS485
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[2d1]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Send
</UL>

<P><STRONG><a name="[30]"></a>UsageFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text.UsageFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = UsageFault_Handler &rArr; ErrorHandler &rArr; HC_WriteLogEvent &rArr; DISP_UpdateLog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[317]"></a>ValidateFwInfo</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, common.o(.text.ValidateFwInfo))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
</UL>

<P><STRONG><a name="[394]"></a>WIEGAND_Init</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, wiegand.o(.text.WIEGAND_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIEGAND_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[289]"></a>WIEGAND_Send</STRONG> (Thumb, 484 bytes, Stack size 48 bytes, wiegand.o(.text.WIEGAND_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WIEGAND_Send &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[338]"></a>disk_initialize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fatfs_drv.o(.text.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = disk_initialize &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[339]"></a>disk_ioctl</STRONG> (Thumb, 62 bytes, Stack size 104 bytes, fatfs_drv.o(.text.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = disk_ioctl &rArr; SD_GetCardInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[33a]"></a>disk_read</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, fatfs_drv.o(.text.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = disk_read &rArr; SD_ReadMultiBlocks &rArr; SD_LowLevel_DMA_RxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitReadOperation
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[35b]"></a>disk_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fatfs_drv.o(.text.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[33b]"></a>disk_write</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, fatfs_drv.o(.text.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[d6]"></a>etharp_output</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, etharp.o(.text.etharp_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = etharp_output &rArr; etharp_query &rArr; etharp_request &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text.ethernetif_init)
</UL>
<P><STRONG><a name="[341]"></a>etharp_query</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, etharp.o(.text.etharp_query))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = etharp_query &rArr; etharp_request &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[343]"></a>etharp_request</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, etharp.o(.text.etharp_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = etharp_request &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
</UL>

<P><STRONG><a name="[2c9]"></a>etharp_tmr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, etharp.o(.text.etharp_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = etharp_tmr &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
</UL>

<P><STRONG><a name="[cb]"></a>ethernet_input</STRONG> (Thumb, 452 bytes, Stack size 40 bytes, etharp.o(.text.ethernet_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ethernet_input &rArr; ip_input &rArr; tcp_input &rArr; tcp_alloc &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netconf.o(.text.LwIP_Init)
</UL>
<P><STRONG><a name="[cc]"></a>ethernetif_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, ethernetif.o(.text.ethernetif_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ethernetif_init &rArr; ETH_DMATxDescChainInit
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Start
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_MACAddressConfig
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMATxDescChainInit
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_DMARxDescChainInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netconf.o(.text.LwIP_Init)
</UL>
<P><STRONG><a name="[2cb]"></a>ethernetif_input</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, ethernetif.o(.text.ethernetif_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ethernetif_input &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Get_Received_Frame
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Pkt_Handle
</UL>

<P><STRONG><a name="[255]"></a>f_close</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ff.o(.text.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFirmwareUpdateRequest
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFileUpdateRequest
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
</UL>

<P><STRONG><a name="[227]"></a>f_closedir</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ff.o(.text.f_closedir))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = f_closedir &rArr; validate
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[316]"></a>f_findfirst</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ff.o(.text.f_findfirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = f_findfirst &rArr; f_opendir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
</UL>

<P><STRONG><a name="[318]"></a>f_findnext</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ff.o(.text.f_findnext))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = f_findnext &rArr; f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pattern_matching
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
</UL>

<P><STRONG><a name="[1c0]"></a>f_lseek</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, ff.o(.text.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetData
</UL>

<P><STRONG><a name="[285]"></a>f_mkdir</STRONG> (Thumb, 348 bytes, Stack size 96 bytes, ff.o(.text.f_mkdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = f_mkdir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[1ee]"></a>f_mount</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, ff.o(.text.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFirmwareUpdateRequest
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFileUpdateRequest
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewFirmwareFile
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1f0]"></a>f_open</STRONG> (Thumb, 508 bytes, Stack size 96 bytes, ff.o(.text.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewFirmwareFile
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1ef]"></a>f_opendir</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ff.o(.text.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewFirmwareFile
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_findfirst
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1c1]"></a>f_read</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, ff.o(.text.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_next_block
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFirmwareUpdateRequest
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFileUpdateRequest
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetData
</UL>

<P><STRONG><a name="[223]"></a>f_readdir</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ff.o(.text.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_findnext
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[34e]"></a>f_sync</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, ff.o(.text.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[286]"></a>f_unlink</STRONG> (Thumb, 142 bytes, Stack size 120 bytes, ff.o(.text.f_unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[35a]"></a>f_write</STRONG> (Thumb, 402 bytes, Stack size 48 bytes, ff.o(.text.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
</UL>

<P><STRONG><a name="[36f]"></a>fs_bytes_left</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fs.o(.text.fs_bytes_left))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
</UL>

<P><STRONG><a name="[370]"></a>fs_close</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fs.o(.text.fs_close))
<BR><BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_state_free
</UL>

<P><STRONG><a name="[35c]"></a>fs_open</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, fs.o(.text.fs_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fs_open &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_free
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_get_404_file
</UL>

<P><STRONG><a name="[35e]"></a>fs_read</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fs.o(.text.fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fs_read &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
</UL>

<P><STRONG><a name="[373]"></a>http_set_cgi_handlers</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, httpd.o(.text.http_set_cgi_handlers))
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpd_cgi_init
</UL>

<P><STRONG><a name="[374]"></a>http_set_ssi_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, httpd.o(.text.http_set_ssi_handler))
<BR><BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;httpd_ssi_init
</UL>

<P><STRONG><a name="[27a]"></a>httpd_cgi_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, httpd_cgi_ssi.o(.text.httpd_cgi_init))
<BR><BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_set_cgi_handlers
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
</UL>

<P><STRONG><a name="[279]"></a>httpd_ssi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, httpd_cgi_ssi.o(.text.httpd_ssi_init))
<BR><BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_set_ssi_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
</UL>

<P><STRONG><a name="[375]"></a>icmp_dest_unreach</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icmp.o(.text.icmp_dest_unreach))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = icmp_dest_unreach &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[377]"></a>icmp_input</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, icmp.o(.text.icmp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = icmp_input &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[37c]"></a>icmp_time_exceeded</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icmp.o(.text.icmp_time_exceeded))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>

<P><STRONG><a name="[379]"></a>inet_chksum</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, inet_chksum.o(.text.inet_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = inet_chksum &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[378]"></a>inet_chksum_pbuf</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, inet_chksum.o(.text.inet_chksum_pbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inet_chksum_pbuf &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[37e]"></a>inet_chksum_pseudo</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, inet_chksum.o(.text.inet_chksum_pseudo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = inet_chksum_pseudo &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[37f]"></a>inet_chksum_pseudo_partial</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, inet_chksum.o(.text.inet_chksum_pseudo_partial))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = inet_chksum_pseudo_partial &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[340]"></a>ip4_addr_isbroadcast</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ip_addr.o(.text.ip4_addr_isbroadcast))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[380]"></a>ip_frag</STRONG> (Thumb, 356 bytes, Stack size 80 bytes, ip_frag.o(.text.ip_frag))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>

<P><STRONG><a name="[348]"></a>ip_input</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, ip.o(.text.ip_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = ip_input &rArr; tcp_input &rArr; tcp_alloc &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[37b]"></a>ip_output</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, ip.o(.text.ip_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[37a]"></a>ip_output_if</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, ip.o(.text.ip_output_if))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[386]"></a>ip_reass</STRONG> (Thumb, 608 bytes, Stack size 40 bytes, ip_frag.o(.text.ip_reass))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = ip_reass &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[38a]"></a>ip_route</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, ip.o(.text.ip_route))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ip_route
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_chksum
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
</UL>

<P><STRONG><a name="[287]"></a>led_clr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, httpd_cgi_ssi.o(.text.led_clr))
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_ResponseHandler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[281]"></a>led_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, httpd_cgi_ssi.o(.text.led_set))
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[38f]"></a>lwip_chksum_copy</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, inet_chksum.o(.text.lwip_chksum_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lwip_chksum_copy &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[3b3]"></a>lwip_htonl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, def.o(.text.lwip_htonl))
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[de]"></a>lwip_htons</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, def.o(.text.lwip_htons))
<BR><BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_block
</UL>
<BR>[Address Reference Count : 3]<UL><LI> tcp_out.o(.text.tcp_create_segment)
<LI> tcp_out.o(.text.tcp_output_alloc_header)
<LI> tcp_out.o(.text.tcp_rst)
</UL>
<P><STRONG><a name="[3b8]"></a>lwip_ntohl</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, def.o(.text.lwip_ntohl))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[df]"></a>lwip_ntohs</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, def.o(.text.lwip_ntohs))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_extract_block
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tcp_in.o(.text.tcp_receive)
<LI> tcp_in.o(.text.tcp_input)
</UL>
<P><STRONG><a name="[90]"></a>main</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = main &rArr; HC_Service &rArr; SendFwInfo &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Init
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_Init
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTPD_Init
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Pkt_Handle
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETBIOS_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CEE_Init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SysTick
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIEGAND_Init
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETHERNET_Init
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_CheckFrameReceived
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAM_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[270]"></a>mem_cpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, common.o(.text.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[371]"></a>mem_free</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, mem.o(.text.mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_state_free
</UL>

<P><STRONG><a name="[2c2]"></a>mem_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mem.o(.text.mem_init))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
</UL>

<P><STRONG><a name="[258]"></a>mem_malloc</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, mem.o(.text.mem_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateAddrList
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[a8]"></a>mem_set</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, common.o(.text.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIEGAND_Send
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFwInfo
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_LoadAddrList
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_FormatLogList
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_DeleteLogListBlock
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateAddrList
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Init
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_GetNextAddr
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CheckNewImageFile
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAM_Init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_ScanRS485
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FoundDeviceList
</UL>
<BR>[Address Reference Count : 2]<UL><LI> display.o(.text.DISP_Keypad)
<LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[39b]"></a>mem_trim</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, mem.o(.text.mem_trim))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mem_trim
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
</UL>

<P><STRONG><a name="[384]"></a>memp_free</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, memp.o(.text.memp_free))
<BR><BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
</UL>

<P><STRONG><a name="[2c3]"></a>memp_init</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, memp.o(.text.memp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = memp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
</UL>

<P><STRONG><a name="[381]"></a>memp_malloc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, memp.o(.text.memp_malloc))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[2c4]"></a>netif_add</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, netif.o(.text.netif_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
</UL>

<P><STRONG><a name="[288]"></a>netif_set_addr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, netif.o(.text.netif_set_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAVE_Settings
</UL>

<P><STRONG><a name="[2c5]"></a>netif_set_default</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, netif.o(.text.netif_set_default))
<BR><BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
</UL>

<P><STRONG><a name="[397]"></a>netif_set_ipaddr</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, netif.o(.text.netif_set_ipaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[2c6]"></a>netif_set_up</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, netif.o(.text.netif_set_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = netif_set_up &rArr; etharp_request &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Init
</UL>

<P><STRONG><a name="[345]"></a>pbuf_alloc</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, pbuf.o(.text.pbuf_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbios_recv
</UL>

<P><STRONG><a name="[382]"></a>pbuf_alloced_custom</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, pbuf.o(.text.pbuf_alloced_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pbuf_alloced_custom
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[36a]"></a>pbuf_cat</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pbuf.o(.text.pbuf_cat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pbuf_cat
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[39a]"></a>pbuf_chain</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pbuf.o(.text.pbuf_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pbuf_chain &rArr; pbuf_cat
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
</UL>

<P><STRONG><a name="[36d]"></a>pbuf_clen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pbuf.o(.text.pbuf_clen))
<BR><BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[346]"></a>pbuf_copy</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, pbuf.o(.text.pbuf_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pbuf_copy &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[36b]"></a>pbuf_copy_partial</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, pbuf.o(.text.pbuf_copy_partial))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pbuf_copy_partial &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[33e]"></a>pbuf_free</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, pbuf.o(.text.pbuf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rrq_recv_callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_callback_tftp
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbios_recv
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[33f]"></a>pbuf_header</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, pbuf.o(.text.pbuf_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pbuf_header
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[385]"></a>pbuf_realloc</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, pbuf.o(.text.pbuf_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pbuf_realloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[344]"></a>pbuf_ref</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pbuf.o(.text.pbuf_ref))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[39c]"></a>process_tftp_request</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, tftpserver.o(.text.process_tftp_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 980<LI>Call Chain = process_tftp_request &rArr; tftp_process_read &rArr; tftp_send_next_block &rArr; tftp_send_data_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_error_message
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_extract_filename
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_decode_op
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_callback_tftp
</UL>

<P><STRONG><a name="[387]"></a>raw_input</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, raw.o(.text.raw_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = raw_input
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[d2]"></a>recv_callback_tftp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tftpserver.o(.text.recv_callback_tftp))
<BR><BR>[Stack]<UL><LI>Max Depth = 988<LI>Call Chain = recv_callback_tftp &rArr; process_tftp_request &rArr; tftp_process_read &rArr; tftp_send_next_block &rArr; tftp_send_data_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tftpserver.o(.text.tftp_cleanup_wr)
<LI> tftpserver.o(.text.TFTPD_Init)
</UL>
<P><STRONG><a name="[e3]"></a>rrq_recv_callback</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tftpserver.o(.text.rrq_recv_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = rrq_recv_callback &rArr; tftp_send_next_block &rArr; tftp_send_data_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_next_block
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_is_correct_ack
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tftpserver.o(.text.tftp_process_read)
</UL>
<P><STRONG><a name="[26f]"></a>rtc2unix</STRONG> (Thumb, 316 bytes, Stack size 28 bytes, common.o(.text.rtc2unix))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rtc2unix
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_Service
</UL>

<P><STRONG><a name="[3a7]"></a>sys_timeout</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, timers.o(.text.sys_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
</UL>

<P><STRONG><a name="[3a8]"></a>tcp_abandon</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, tcp.o(.text.tcp_abandon))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[398]"></a>tcp_abort</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(.text.tcp_abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[280]"></a>tcp_accept</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text.tcp_accept))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
</UL>

<P><STRONG><a name="[3ab]"></a>tcp_alloc</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, tcp.o(.text.tcp_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = tcp_alloc &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
</UL>

<P><STRONG><a name="[27f]"></a>tcp_arg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text.tcp_arg))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[27d]"></a>tcp_bind</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tcp.o(.text.tcp_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tcp_bind &rArr; tcp_new_port
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
</UL>

<P><STRONG><a name="[365]"></a>tcp_close</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tcp.o(.text.tcp_close))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
</UL>

<P><STRONG><a name="[3b4]"></a>tcp_eff_send_mss</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tcp.o(.text.tcp_eff_send_mss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tcp_eff_send_mss &rArr; ip_route
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[3b5]"></a>tcp_enqueue_flags</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, tcp_out.o(.text.tcp_enqueue_flags))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = tcp_enqueue_flags &rArr; tcp_create_segment &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
</UL>

<P><STRONG><a name="[360]"></a>tcp_err</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(.text.tcp_err))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[3b6]"></a>tcp_fasttmr</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, tcp.o(.text.tcp_fasttmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[389]"></a>tcp_input</STRONG> (Thumb, 1812 bytes, Stack size 56 bytes, tcp_in.o(.text.tcp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = tcp_input &rArr; tcp_alloc &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[3bc]"></a>tcp_keepalive</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, tcp_out.o(.text.tcp_keepalive))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = tcp_keepalive &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[27e]"></a>tcp_listen_with_backlog</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, tcp.o(.text.tcp_listen_with_backlog))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tcp_listen_with_backlog &rArr; tcp_timer_needed &rArr; sys_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
</UL>

<P><STRONG><a name="[27b]"></a>tcp_new</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(.text.tcp_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = tcp_new &rArr; tcp_alloc &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
</UL>

<P><STRONG><a name="[368]"></a>tcp_output</STRONG> (Thumb, 676 bytes, Stack size 48 bytes, tcp_out.o(.text.tcp_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_poll
</UL>

<P><STRONG><a name="[3b0]"></a>tcp_pcb_purge</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, tcp.o(.text.tcp_pcb_purge))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tcp_pcb_purge &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[3a9]"></a>tcp_pcb_remove</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, tcp.o(.text.tcp_pcb_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = tcp_pcb_remove &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[361]"></a>tcp_poll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tcp.o(.text.tcp_poll))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[3b7]"></a>tcp_process_refused_data</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tcp.o(.text.tcp_process_refused_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>

<P><STRONG><a name="[35f]"></a>tcp_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(.text.tcp_recv))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[dd]"></a>tcp_recv_null</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tcp.o(.text.tcp_recv_null))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = tcp_recv_null &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text.tcp_alloc)
</UL>
<P><STRONG><a name="[369]"></a>tcp_recved</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, tcp.o(.text.tcp_recved))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[3bb]"></a>tcp_rexmit</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tcp_out.o(.text.tcp_rexmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tcp_rexmit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[3c3]"></a>tcp_rexmit_fast</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, tcp_out.o(.text.tcp_rexmit_fast))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tcp_rexmit_fast &rArr; tcp_rexmit
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[3c4]"></a>tcp_rexmit_rto</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tcp_out.o(.text.tcp_rexmit_rto))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = tcp_rexmit_rto &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[3aa]"></a>tcp_rst</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, tcp_out.o(.text.tcp_rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = tcp_rst &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[3c1]"></a>tcp_seg_copy</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, tcp.o(.text.tcp_seg_copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tcp_seg_copy &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[3b2]"></a>tcp_seg_free</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tcp.o(.text.tcp_seg_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tcp_seg_free &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[e1]"></a>tcp_segs_free</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcp.o(.text.tcp_segs_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text.tcp_pcb_purge)
</UL>
<P><STRONG><a name="[3bf]"></a>tcp_send_empty_ack</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, tcp_out.o(.text.tcp_send_empty_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[3af]"></a>tcp_send_fin</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, tcp_out.o(.text.tcp_send_fin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[362]"></a>tcp_sent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text.tcp_sent))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[27c]"></a>tcp_setprio</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text.tcp_setprio))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTPD_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_accept
</UL>

<P><STRONG><a name="[3c5]"></a>tcp_slowtmr</STRONG> (Thumb, 660 bytes, Stack size 48 bytes, tcp.o(.text.tcp_slowtmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = tcp_slowtmr &rArr; tcp_rexmit_rto &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[3ad]"></a>tcp_timer_needed</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, timers.o(.text.tcp_timer_needed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tcp_timer_needed &rArr; sys_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[2c8]"></a>tcp_tmr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, tcp.o(.text.tcp_tmr))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LwIP_Periodic_Handle
</UL>

<P><STRONG><a name="[3c2]"></a>tcp_update_rcv_ann_wnd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tcp.o(.text.tcp_update_rcv_ann_wnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tcp_update_rcv_ann_wnd
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
</UL>

<P><STRONG><a name="[372]"></a>tcp_write</STRONG> (Thumb, 1034 bytes, Stack size 112 bytes, tcp_out.o(.text.tcp_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = tcp_write &rArr; tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_chksum_copy
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_add_chksum
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_write
</UL>

<P><STRONG><a name="[3c6]"></a>tcp_zero_window_probe</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, tcp_out.o(.text.tcp_zero_window_probe))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = tcp_zero_window_probe &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[3a5]"></a>tftp_cleanup_rd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tftpserver.o(.text.tftp_cleanup_rd))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = tftp_cleanup_rd &rArr; f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rrq_recv_callback
</UL>

<P><STRONG><a name="[3c9]"></a>tftp_cleanup_wr</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, tftpserver.o(.text.tftp_cleanup_wr))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = tftp_cleanup_wr &rArr; f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
</UL>

<P><STRONG><a name="[3ca]"></a>tftp_construct_error_message</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tftpserver.o(.text.tftp_construct_error_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tftp_construct_error_message
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_opcode
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_errormsg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_errorcode
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_error_message
</UL>

<P><STRONG><a name="[39d]"></a>tftp_decode_op</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_decode_op))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>

<P><STRONG><a name="[3ce]"></a>tftp_extract_block</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_extract_block))
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_is_correct_ack
</UL>

<P><STRONG><a name="[39e]"></a>tftp_extract_filename</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_extract_filename))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>

<P><STRONG><a name="[3a4]"></a>tftp_is_correct_ack</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tftputils.o(.text.tftp_is_correct_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tftp_is_correct_ack
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_extract_block
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rrq_recv_callback
</UL>

<P><STRONG><a name="[3a3]"></a>tftp_process_read</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, tftpserver.o(.text.tftp_process_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = tftp_process_read &rArr; tftp_send_next_block &rArr; tftp_send_data_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_next_block
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_error_message
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>

<P><STRONG><a name="[39f]"></a>tftp_process_write</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tftpserver.o(.text.tftp_process_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 884<LI>Call Chain = tftp_process_write &rArr; tftp_send_error_message &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_error_message
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_ack_packet
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>

<P><STRONG><a name="[3cf]"></a>tftp_send_ack_packet</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, tftpserver.o(.text.tftp_send_ack_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = tftp_send_ack_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_opcode
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_block
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
</UL>

<P><STRONG><a name="[3d2]"></a>tftp_send_data_packet</STRONG> (Thumb, 72 bytes, Stack size 544 bytes, tftpserver.o(.text.tftp_send_data_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = tftp_send_data_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_opcode
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_data_message
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_set_block
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_next_block
</UL>

<P><STRONG><a name="[3a0]"></a>tftp_send_error_message</STRONG> (Thumb, 44 bytes, Stack size 536 bytes, tftpserver.o(.text.tftp_send_error_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = tftp_send_error_message &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_construct_error_message
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wrq_recv_callback
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>

<P><STRONG><a name="[3d1]"></a>tftp_send_message</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, tftpserver.o(.text.tftp_send_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_error_message
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_data_packet
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_ack_packet
</UL>

<P><STRONG><a name="[3a6]"></a>tftp_send_next_block</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, tftpserver.o(.text.tftp_send_next_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 900<LI>Call Chain = tftp_send_next_block &rArr; tftp_send_data_packet &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_data_packet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rrq_recv_callback
</UL>

<P><STRONG><a name="[3d0]"></a>tftp_set_block</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tftputils.o(.text.tftp_set_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tftp_set_block
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_data_packet
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_ack_packet
</UL>

<P><STRONG><a name="[3d3]"></a>tftp_set_data_message</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_set_data_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tftp_set_data_message &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_data_packet
</UL>

<P><STRONG><a name="[3cc]"></a>tftp_set_errorcode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_set_errorcode))
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_construct_error_message
</UL>

<P><STRONG><a name="[3cd]"></a>tftp_set_errormsg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_set_errormsg))
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_construct_error_message
</UL>

<P><STRONG><a name="[3cb]"></a>tftp_set_opcode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tftputils.o(.text.tftp_set_opcode))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_data_packet
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_ack_packet
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_construct_error_message
</UL>

<P><STRONG><a name="[2ce]"></a>udp_bind</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, udp.o(.text.udp_bind))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTPD_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETBIOS_Init
</UL>

<P><STRONG><a name="[3c8]"></a>udp_disconnect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udp.o(.text.udp_disconnect))
<BR><BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
</UL>

<P><STRONG><a name="[388]"></a>udp_input</STRONG> (Thumb, 356 bytes, Stack size 48 bytes, udp.o(.text.udp_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = udp_input &rArr; icmp_dest_unreach &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[2cd]"></a>udp_new</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, udp.o(.text.udp_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udp_new
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTPD_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETBIOS_Init
</UL>

<P><STRONG><a name="[2cf]"></a>udp_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, udp.o(.text.udp_recv))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_write
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_process_read
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTPD_Init
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NETBIOS_Init
</UL>

<P><STRONG><a name="[3a1]"></a>udp_remove</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, udp.o(.text.udp_remove))
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_rd
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>

<P><STRONG><a name="[396]"></a>udp_sendto</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, udp.o(.text.udp_sendto))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_message
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbios_recv
</UL>

<P><STRONG><a name="[3d4]"></a>udp_sendto_chksum</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, udp.o(.text.udp_sendto_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>

<P><STRONG><a name="[3d5]"></a>udp_sendto_if_chksum</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, udp.o(.text.udp_sendto_if_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_chksum
</UL>

<P><STRONG><a name="[e4]"></a>wrq_recv_callback</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, tftpserver.o(.text.wrq_recv_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 892<LI>Call Chain = wrq_recv_callback &rArr; tftp_send_error_message &rArr; tftp_send_message &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_error_message
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_send_ack_packet
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_extract_block
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tftp_cleanup_wr
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tftpserver.o(.text.tftp_process_write)
</UL>
<P><STRONG><a name="[e5]"></a>BUTTON_Callback</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[98]"></a>BUTTON_Create</STRONG> (Thumb, 24 bytes, Stack size 32 bytes, button_create.o(i.BUTTON_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = BUTTON_Create &rArr; BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>
<BR>[Address Reference Count : 5]<UL><LI> display.o(.text.DISP_CreateKeypad)
<LI> display.o(.text.DISP_CreateToolsScreen)
<LI> display.o(.text.DISP_CreateSettingsScreen)
<LI> display.o(.text.DISP_CreateScanRS485BusScreen)
<LI> display.o(.text.DISP_CreateDefaultScreen)
</UL>
<P><STRONG><a name="[3df]"></a>BUTTON_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = BUTTON_CreateEx &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Create
</UL>

<P><STRONG><a name="[3e0]"></a>BUTTON_CreateUser</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>

<P><STRONG><a name="[9]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 562 bytes, Stack size 56 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 2]<UL><LI> display.o(.text.DISP_Init)
<LI> button.o(.data)
</UL>
<P><STRONG><a name="[214]"></a>BUTTON_IsPressed</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, button_ispressed.o(i.BUTTON_IsPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BUTTON_IsPressed
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1f2]"></a>BUTTON_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_skin.o(i.BUTTON_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[3dd]"></a>BUTTON_SetPressed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[99]"></a>BUTTON_SetText</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, button.o(i.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Address Reference Count : 5]<UL><LI> display.o(.text.DISP_CreateKeypad)
<LI> display.o(.text.DISP_CreateToolsScreen)
<LI> display.o(.text.DISP_CreateSettingsScreen)
<LI> display.o(.text.DISP_CreateScanRS485BusScreen)
<LI> display.o(.text.DISP_CreateDefaultScreen)
</UL>
<P><STRONG><a name="[e6]"></a>CHECKBOX_Callback</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, checkbox.o(i.CHECKBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = CHECKBOX_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(i.CHECKBOX_CreateUser)
</UL>
<P><STRONG><a name="[a1]"></a>CHECKBOX_Create</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, checkbox_create.o(i.CHECKBOX_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CHECKBOX_Create &rArr; CHECKBOX_CreateEx &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[3f2]"></a>CHECKBOX_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = CHECKBOX_CreateEx &rArr; CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Create
</UL>

<P><STRONG><a name="[3f3]"></a>CHECKBOX_CreateUser</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, checkbox.o(i.CHECKBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CHECKBOX_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateEx
</UL>

<P><STRONG><a name="[1c]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[3f6]"></a>CHECKBOX_GetSkinFlexButtonSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, checkbox_skinflex.o(i.CHECKBOX_GetSkinFlexButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[cf]"></a>CHECKBOX_GetState</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, checkbox_getstate.o(i.CHECKBOX_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CHECKBOX_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.SAVE_Settings)
</UL>
<P><STRONG><a name="[a4]"></a>CHECKBOX_SetState</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, checkbox_setstate.o(i.CHECKBOX_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = CHECKBOX_SetState &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[a3]"></a>CHECKBOX_SetText</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, checkbox_settext.o(i.CHECKBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CHECKBOX_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[a2]"></a>CHECKBOX_SetTextColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, checkbox_settextcolor.o(i.CHECKBOX_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CHECKBOX_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[1b]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CHECKBOX__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[401]"></a>EDIT_AddKey</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, edit.o(i.EDIT_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = EDIT_AddKey &rArr; _InsertChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[e7]"></a>EDIT_Callback</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, edit.o(i.EDIT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = EDIT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(i.EDIT_CreateUser)
</UL>
<P><STRONG><a name="[a5]"></a>EDIT_Create</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, edit_create.o(i.EDIT_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = EDIT_Create &rArr; EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[40c]"></a>EDIT_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, edit.o(i.EDIT_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Create
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[40d]"></a>EDIT_CreateUser</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, edit.o(i.EDIT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>

<P><STRONG><a name="[a7]"></a>EDIT_EnableBlink</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, edit_enableblink.o(i.EDIT_EnableBlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = EDIT_EnableBlink &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_EnableBlink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[21b]"></a>EDIT_GetCursorCharPos</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, edit_getcursorpos.o(i.EDIT_GetCursorCharPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EDIT_GetCursorCharPos
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[57b]"></a>EDIT_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit_default.o(i.EDIT_GetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[411]"></a>EDIT_GetFont</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, edit.o(i.EDIT_GetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EDIT_GetFont
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>

<P><STRONG><a name="[226]"></a>EDIT_GetText</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, edit.o(i.EDIT_GetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = EDIT_GetText &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[413]"></a>EDIT_GetValue</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, edit.o(i.EDIT_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EDIT_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
</UL>

<P><STRONG><a name="[414]"></a>EDIT_SetBkColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[415]"></a>EDIT_SetCursorAtChar</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, edit_setcursoratchar.o(i.EDIT_SetCursorAtChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = EDIT_SetCursorAtChar &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[40b]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, edit.o(i.EDIT_SetCursorAtPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[419]"></a>EDIT_SetDecMode</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, editdec.o(i.EDIT_SetDecMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = EDIT_SetDecMode &rArr; EDIT_SetMaxLen &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[1f6]"></a>EDIT_SetDefaultTextAlign</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit_default.o(i.EDIT_SetDefaultTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[41d]"></a>EDIT_SetFocussable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, edit_setfocussable.o(i.EDIT_SetFocussable))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = EDIT_SetFocussable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
</UL>

<P><STRONG><a name="[41b]"></a>EDIT_SetMaxLen</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetMaxLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetMaxLen &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[a6]"></a>EDIT_SetText</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, edit.o(i.EDIT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = EDIT_SetText &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
</UL>
<P><STRONG><a name="[41f]"></a>EDIT_SetTextColor</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, edit.o(i.EDIT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = EDIT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[420]"></a>EDIT_SetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit.o(i.EDIT_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
</UL>

<P><STRONG><a name="[41c]"></a>EDIT__GetCurrentChar</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, edit.o(i.EDIT__GetCurrentChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EDIT__GetCurrentChar &rArr; GUI_UC__NumChars2NumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[407]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, edit.o(i.EDIT__SetCursorPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[3ff]"></a>GL_DispChar</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[422]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[479]"></a>GL_FillCircle</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
</UL>

<P><STRONG><a name="[425]"></a>GL_SetDefault</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_setdefault.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
</UL>
<BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[2ab]"></a>GUICC_M1555I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m1555i.o(i.GUICC_M1555I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2ad]"></a>GUICC_M4444I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m4444i.o(i.GUICC_M4444I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2ac]"></a>GUICC_M565_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m565.o(i.GUICC_M565_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2af]"></a>GUICC_M8888I_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m8888i.o(i.GUICC_M8888I_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2ae]"></a>GUICC_M888_SetCustColorConv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicc_m888.o(i.GUICC_M888_SetCustColorConv))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[16d]"></a>GUIMONO_DispChar</STRONG> (Thumb, 302 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[16f]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>GUIPROP_DispChar</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 7]<UL><LI> f13_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 7]<UL><LI> f13_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 7]<UL><LI> f13_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 7]<UL><LI> f13_1.o(.constdata)
<LI> f13_ascii.o(.constdata)
<LI> f16b_1.o(.constdata)
<LI> f20b_1.o(.constdata)
<LI> f24_1.o(.constdata)
<LI> f24b_1.o(.constdata)
<LI> f32b_1.o(.constdata)
</UL>
<P><STRONG><a name="[429]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[42c]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gui_alloc_allocinit.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[42d]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[430]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[250]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[431]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[460]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[3d9]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[3da]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[434]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[438]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[43b]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>

<P><STRONG><a name="[3d7]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_EnableBlink
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSelUnsorted
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorCharPos
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[43a]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui_realloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[43c]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[3d8]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetValue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_GetValue
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_EnableBlink
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSelUnsorted
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetCursorCharPos
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetState
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_IsPressed
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[439]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[43d]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[43e]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[43f]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[440]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_array_deleteitem.o(i.GUI_ARRAY_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
</UL>

<P><STRONG><a name="[441]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[442]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[444]"></a>GUI_ARRAY_ResizeItemLocked</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gui_array_resizeitem.o(i.GUI_ARRAY_ResizeItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ARRAY_ResizeItemLocked &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>

<P><STRONG><a name="[446]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, gui_array.o(i.GUI_ARRAY_SetItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
</UL>

<P><STRONG><a name="[447]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>

<P><STRONG><a name="[443]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[445]"></a>GUI_ARRAY__SethItem</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__SethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[448]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_adddecmin.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[44a]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gui_adddecshift.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[668]"></a>GUI_AddSign</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_adddecshift.o(i.GUI_AddSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_AddSign
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
</UL>

<P><STRONG><a name="[200]"></a>GUI_BMP_DrawEx</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP_DrawEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = GUI_BMP_DrawEx &rArr; _Draw &rArr; _DrawBitmap_Pal &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[44c]"></a>GUI_BMP__Init</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, gui_bmp.o(i.GUI_BMP__Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_BMP__Init &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[44d]"></a>GUI_BMP__ReadData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP__ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[450]"></a>GUI_BMP__ReadPalette</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_bmp.o(i.GUI_BMP__ReadPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_BMP__ReadPalette &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
</UL>

<P><STRONG><a name="[651]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_curs1.o(i.GUI_CURSOR_GetStateEx))
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[452]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, gui_curs1.o(i.GUI_CURSOR_SelectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[459]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gui_curs1.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[60e]"></a>GUI_CalcColorDist</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[1c8]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[1e4]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[45c]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_clearrectex.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[45d]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[2a4]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[45f]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[45e]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>

<P><STRONG><a name="[52a]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
</UL>

<P><STRONG><a name="[499]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVRAMAddrEx
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[3e8]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[461]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[462]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1ca]"></a>GUI_Delay</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[22c]"></a>GUI_DispCEOL</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_dispceol.o(i.GUI_DispCEOL))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_DispCEOL &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
</UL>

<P><STRONG><a name="[20e]"></a>GUI_DispCharAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>

<P><STRONG><a name="[95]"></a>GUI_DispDec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_val.o(i.GUI_DispDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispDec &rArr; GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fs5206.o(.text.Calibration)
</UL>
<P><STRONG><a name="[1e7]"></a>GUI_DispDecMin</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispDecMin &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
</UL>

<P><STRONG><a name="[466]"></a>GUI_DispDecShift</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, gui_val.o(i.GUI_DispDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = GUI_DispDecShift &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDec
</UL>

<P><STRONG><a name="[96]"></a>GUI_DispNextLine</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, gui_char.o(i.GUI_DispNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_DispNextLine
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fs5206.o(.text.Calibration)
</UL>
<P><STRONG><a name="[94]"></a>GUI_DispString</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecMin
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecShift
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fs5206.o(.text.Calibration)
<LI> display.o(.text.DISP_CreateSettingsScreen)
<LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[ad]"></a>GUI_DispStringAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_UpdateLog)
</UL>
<P><STRONG><a name="[3eb]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRect))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[46b]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRectMax), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[46f]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 274 bytes, Stack size 80 bytes, gui_dispstringinrectwrap.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[204]"></a>GUI_DrawBitmap</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[473]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, gui_drawfocusrect.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[fc]"></a>GUI_DrawGradientH</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientH))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[ff]"></a>GUI_DrawGradientV</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[3e4]"></a>GUI_DrawHLine</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, gui_drawhline.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[476]"></a>GUI_DrawPixel</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_drawpixel.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawPixel &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[3e6]"></a>GUI_DrawRect</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>

<P><STRONG><a name="[3e5]"></a>GUI_DrawVLine</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gui_drawvline.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[1e8]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FoundDeviceList
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
</UL>

<P><STRONG><a name="[477]"></a>GUI_Exec1</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[1c9]"></a>GUI_FillCircle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_circ.o(i.GUI_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_FillCircle &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
</UL>

<P><STRONG><a name="[97]"></a>GUI_FillRect</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gui_fillrect.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateKeypad
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateDefaultScreen)
</UL>
<P><STRONG><a name="[47a]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_fillrectex.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
</UL>

<P><STRONG><a name="[47b]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47c]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[4ea]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_Start
</UL>

<P><STRONG><a name="[42b]"></a>GUI_GetBkColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[3fb]"></a>GUI_GetCharDistX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[4f7]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[3e9]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getclientrect.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[42a]"></a>GUI_GetColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[453]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[326]"></a>GUI_GetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_getdrawmode.o(i.GUI_GetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>

<P><STRONG><a name="[467]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[660]"></a>GUI_GetFontInfo</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_getfontinfo.o(i.GUI_GetFontInfo))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3fd]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getfontsizey.o(i.GUI_GetFontSizeY))
<BR><BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
</UL>

<P><STRONG><a name="[2bb]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_GetLayerPosEx &rArr; LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[482]"></a>GUI_GetOrg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getorg.o(i.GUI_GetOrg))
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[417]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getstringdistx.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[484]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[465]"></a>GUI_GetYAdjust</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCEOL
</UL>

<P><STRONG><a name="[509]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[638]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
</UL>

<P><STRONG><a name="[4ef]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[4eb]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[a0]"></a>GUI_GotoXY</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
</UL>
<BR>[Address Reference Count : 2]<UL><LI> display.o(.text.DISP_CreateSettingsScreen)
<LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[1ed]"></a>GUI_Init</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplaySize
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[492]"></a>GUI_InvertRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_invertrect.o(i.GUI_InvertRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_InvertRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[449]"></a>GUI_Long2Len</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_adddecshift.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[493]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[494]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[495]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[498]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[49b]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[49e]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[4a6]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[4a8]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[4a2]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[132]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[4a4]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_ReduceYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[497]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4a5]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV_SetOrg
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[4aa]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[4ae]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[49a]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[130]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 386 bytes, Stack size 104 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[4af]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[12f]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[2c0]"></a>GUI_MULTIBUF_ConfirmEx</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_ConfirmEx), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ISR_Handler
</UL>

<P><STRONG><a name="[55a]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[3ea]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[4b6]"></a>GUI_PID_GetState</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5bd]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[4b8]"></a>GUI_PID_StoreState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[4bb]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[4be]"></a>GUI_ReadRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[59d]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[4c0]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[456]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[45b]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[4c4]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[457]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, gui_sprite.o(i.GUI_SPRITE__CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[4c8]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[49c]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[1d4]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[1c7]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateKeypad
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[93]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateKeypad
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateDefaultScreen
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>
<BR>[Address Reference Count : 3]<UL><LI> fs5206.o(.text.Calibration)
<LI> display.o(.text.DISP_UpdateDateTime)
<LI> display.o(.text.DISP_UpdateLog)
</UL>
<P><STRONG><a name="[423]"></a>GUI_SetDrawMode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setdrawmode.o(i.GUI_SetDrawMode))
<BR><BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[1c6]"></a>GUI_SetFont</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[2b0]"></a>GUI_SetFuncAlphaBlending</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncAlphaBlending))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2b1]"></a>GUI_SetFuncGetpPalConvTable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetFuncGetpPalConvTable))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2b2]"></a>GUI_SetFuncMixColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColors))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2b3]"></a>GUI_SetFuncMixColorsBulk</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__alpha.o(i.GUI_SetFuncMixColorsBulk))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[45a]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_SetLayerPosEx &rArr; LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[455]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_SetLayerSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_SetLayerSizeEx &rArr; LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[4cd]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_SetLayerVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SetLayerVisEx &rArr; LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[427]"></a>GUI_SetLineStyle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_setlinestyle.o(i.GUI_SetLineStyle))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[490]"></a>GUI_SetOrg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[426]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[1e5]"></a>GUI_SetTextAlign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_settextalign.o(i.GUI_SetTextAlign))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[1e6]"></a>GUI_SetTextMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_settextmode.o(i.GUI_SetTextMode))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_uSDCardSetNewState
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateLog
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_UpdateDateTime
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FileTransferState
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[4ba]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[4cf]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4d0]"></a>GUI_TIMER_Create</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[4d2]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[ef]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TIMER_Exec
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[4d5]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER_GetFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[4d6]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_TIMER_Restart &rArr; _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[4d7]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER_SetPeriod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[4d8]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[4d9]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[4da]"></a>GUI_TOUCH_CalcCoefficients</STRONG> (Thumb, 1170 bytes, Stack size 152 bytes, gui_touch_calibrate.o(i.GUI_TOUCH_CalcCoefficients))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_TOUCH_CalcCoefficients
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2PhysY
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2PhysX
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[1cc]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUI_TOUCH_Calibrate &rArr; GUI_TOUCH_CalcCoefficients
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalcCoefficients
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
</UL>

<P><STRONG><a name="[4dd]"></a>GUI_TOUCH_CalibratePoint</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gui_touch_calibrate.o(i.GUI_TOUCH_CalibratePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GUI_TOUCH_CalibratePoint &rArr; GUI_TOUCH_TransformPoint &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_TransformPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[1cb]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_TOUCH_Exec &rArr; GUI_TOUCH_CalibratePoint &rArr; GUI_TOUCH_TransformPoint &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateY
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateX
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_GetLayer
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalibratePoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calibration
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[4e0]"></a>GUI_TOUCH_GetLayer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_touch_storestate.o(i.GUI_TOUCH_GetLayer))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[24d]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gui_touch.o(i.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[4de]"></a>GUI_TOUCH_TransformPoint</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, gui_touch_calibrate.o(i.GUI_TOUCH_TransformPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_TOUCH_TransformPoint &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalibratePoint
</UL>

<P><STRONG><a name="[60b]"></a>GUI_UC_Encode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC_Encode))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[405]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC_GetCharCode))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorCharacter
</UL>

<P><STRONG><a name="[618]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC_GetCharSize))
<BR><BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[60a]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
</UL>

<P><STRONG><a name="[4f6]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[648]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumBytes2NumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[404]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[62a]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[4b0]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[49d]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[470]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_dispstringinrectwrap.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[4b1]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[4e4]"></a>GUI__AlphaPreserveTrans</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaPreserveTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaPreserveTrans
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[4e6]"></a>GUI__CalcTextRect</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui__calctextrect.o(i.GUI__CalcTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[612]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>

<P><STRONG><a name="[4b3]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__CompactPixelIndicesEx &rArr; GUI__ConvertColor2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[487]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[4e7]"></a>GUI__ConvertColor2Index</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__ConvertColor2Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ConvertColor2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
</UL>

<P><STRONG><a name="[46a]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[46e]"></a>GUI__DispStringInRect</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, gui_dispstringinrect.o(i.GUI__DispStringInRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[606]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__divideround32.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4b2]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 442 bytes, Stack size 104 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[4ed]"></a>GUI__DrawBitmap16bpp</STRONG> (Thumb, 598 bytes, Stack size 96 bytes, gui__drawbitmap16bpp.o(i.GUI__DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNextPixelAPI
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[4f0]"></a>GUI__DrawBitmapA16bpp</STRONG> (Thumb, 722 bytes, Stack size 128 bytes, gui_drawbitmap_a16.o(i.GUI__DrawBitmapA16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = GUI__DrawBitmapA16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapA565
</UL>

<P><STRONG><a name="[3e3]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[4ec]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[4f3]"></a>GUI__FillTrippleArc</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
</UL>

<P><STRONG><a name="[4e3]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[608]"></a>GUI__GetCursorCharacter</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui__getcursorpos.o(i.GUI__GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__GetCursorCharacter
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[418]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosChar))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[609]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosX))
<BR><BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[480]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui__getfontsizey.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[469]"></a>GUI__GetLineDistX</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[468]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[412]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui__getnumchars.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
</UL>

<P><STRONG><a name="[483]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_getorg.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[3fc]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[4e9]"></a>GUI__HandleEOLine</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui__handleeoline.o(i.GUI__HandleEOLine), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[5c9]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>

<P><STRONG><a name="[46d]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[4f8]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[4f9]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[0]"></a>GUI__MixColors</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColorsBulk
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GUI__MixColorsBulk &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[44e]"></a>GUI__Read16</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__read.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[44f]"></a>GUI__Read32</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui__read.o(i.GUI__Read32))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLine_RGB
</UL>

<P><STRONG><a name="[474]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__reducerect.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
</UL>

<P><STRONG><a name="[454]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[4f1]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui__setpixelalpha.o(i.GUI__SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>
<BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>

<P><STRONG><a name="[3ef]"></a>GUI__SetText</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui__settext.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>

<P><STRONG><a name="[472]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>

<P><STRONG><a name="[471]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[4fd]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[42e]"></a>GUI__memset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[63d]"></a>GUI__memset16</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[64f]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__sqrt32.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>

<P><STRONG><a name="[4ff]"></a>GUI__strcmp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui__strcmp.o(i.GUI__strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[4fb]"></a>GUI__strcmp_hp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui__strcmp.o(i.GUI__strcmp_hp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[4fc]"></a>GUI__strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__strlen.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[500]"></a>HEADER_AddItem</STRONG> (Thumb, 180 bytes, Stack size 72 bytes, header.o(i.HEADER_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HEADER_AddItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[f4]"></a>HEADER_Callback</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, header.o(i.HEADER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = HEADER_Callback &rArr; _HandlePID &rArr; _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(i.HEADER_CreateUser)
</UL>
<P><STRONG><a name="[505]"></a>HEADER_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, header.o(i.HEADER_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = HEADER_CreateEx &rArr; HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[506]"></a>HEADER_CreateUser</STRONG> (Thumb, 208 bytes, Stack size 56 bytes, header.o(i.HEADER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[1d]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, header_skinflex.o(i.HEADER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HEADER_DrawSkinFlex &rArr; _DrawOverlap &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(.data)
</UL>
<P><STRONG><a name="[50f]"></a>HEADER_GetHeight</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, header.o(i.HEADER_GetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[511]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, header.o(i.HEADER_GetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[512]"></a>HEADER_GetNumItems</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, header.o(i.HEADER_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[513]"></a>HEADER_GetSel</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, header_getsel.o(i.HEADER_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HEADER_GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[514]"></a>HEADER_SetDirIndicator</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, header.o(i.HEADER_SetDirIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = HEADER_SetDirIndicator &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[515]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, header.o(i.HEADER_SetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = HEADER_SetItemWidth &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[517]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, header.o(i.HEADER_SetScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[4e5]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
</UL>

<P><STRONG><a name="[451]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[424]"></a>LCD_DrawBitmap</STRONG> (Thumb, 504 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[ec]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[13b]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawgradient.o(i.GUI_DrawGradientH)
</UL>
<P><STRONG><a name="[327]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[2a8]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[47d]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[47f]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[328]"></a>LCD_GetDevFunc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetDevFunc))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[519]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[51a]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[4ee]"></a>LCD_GetNextPixelAPI</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i.LCD_GetNextPixelAPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetNextPixelAPI
</UL>
<BR>[Called By]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>

<P><STRONG><a name="[51b]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[51c]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[51d]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[51e]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[51f]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[4fa]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
</UL>

<P><STRONG><a name="[520]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[481]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[521]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetSwapXYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
</UL>

<P><STRONG><a name="[49f]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[4f5]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[4a0]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[523]"></a>LCD_GetXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[48b]"></a>LCD_GetXSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[2b7]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[48e]"></a>LCD_GetXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[524]"></a>LCD_GetYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[48c]"></a>LCD_GetYSizeDisplay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>

<P><STRONG><a name="[2b8]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LTDC_SetLayerPos
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>

<P><STRONG><a name="[48d]"></a>LCD_GetYSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetYSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[329]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[7]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[525]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[526]"></a>LCD_GetpfColor2IndexEx</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetpfColor2IndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetpfColor2IndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[47e]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[10c]"></a>LCD_Index2Color_565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_565.o(i.LCD_Index2Color_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_565
</UL>
<BR>[Address Reference Count : 5]<UL><LI> gui_drawbitmap_565.o(i._DrawBitmap)
<LI> gui_drawbitmap_565.o(.constdata)
<LI> gui_drawbitmap_a16.o(i._DrawBitmapA565)
<LI> gui_drawbitmap_a16.o(.constdata)
<LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
</UL>
<P><STRONG><a name="[ed]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 3]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
<LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>LCD_Index2Color_M555</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicc_m555_index2color.o(i.LCD_Index2Color_M555))
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[13f]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>LCD_Index2Color_M8888I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_m8888i_index2color.o(i.LCD_Index2Color_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[527]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[528]"></a>LCD_InitLUT</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_InitLUT &rArr; LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[4c9]"></a>LCD_SelectLCD</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[4ca]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[52d]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[52b]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[4ad]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[4cb]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[52c]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[2a9]"></a>LCD_SetDevFunc</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
</UL>

<P><STRONG><a name="[48f]"></a>LCD_SetDisplaySize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_SetDisplaySize))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[428]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[529]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[4cc]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[2a5]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[2a7]"></a>LCD_SetVRAMAddrEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVRAMAddrEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVRAMAddrEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2a6]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[4ce]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[4ac]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[52e]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[52f]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[4a7]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[9a]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_AddColumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[1ea]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 252 bytes, Stack size 64 bytes, listview.o(i.LISTVIEW_AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FoundDeviceList
</UL>

<P><STRONG><a name="[f6]"></a>LISTVIEW_Callback</STRONG> (Thumb, 522 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = LISTVIEW_Callback &rArr; _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[1d8]"></a>LISTVIEW_Create</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, listview_create.o(i.LISTVIEW_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = LISTVIEW_Create &rArr; LISTVIEW_CreateEx &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
</UL>

<P><STRONG><a name="[53f]"></a>LISTVIEW_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = LISTVIEW_CreateEx &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Create
</UL>

<P><STRONG><a name="[540]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, listview.o(i.LISTVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
</UL>

<P><STRONG><a name="[221]"></a>LISTVIEW_GetItemText</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, listview_getitemtext.o(i.LISTVIEW_GetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTVIEW_GetItemText &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[542]"></a>LISTVIEW_GetLBorder</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, listview_setlborder.o(i.LISTVIEW_GetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetLBorder
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[543]"></a>LISTVIEW_GetRBorder</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, listview_setrborder.o(i.LISTVIEW_GetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetRBorder
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[544]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_getsel.o(i.LISTVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetSel &rArr; _GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[220]"></a>LISTVIEW_GetSelUnsorted</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview_setsort.o(i.LISTVIEW_GetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = LISTVIEW_GetSelUnsorted &rArr; _Sort &rArr; _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[548]"></a>LISTVIEW_GetWrapMode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, listview_getwrapmode.o(i.LISTVIEW_GetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW_GetWrapMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[f7]"></a>LISTVIEW_OwnerDraw</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = LISTVIEW_OwnerDraw &rArr; GUI_DispStringInRectWrap &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[549]"></a>LISTVIEW_RowIsDisabled</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, listview_disablerow.o(i.LISTVIEW_RowIsDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTVIEW_RowIsDisabled &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[1da]"></a>LISTVIEW_SetAutoScrollV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_setautoscroll.o(i.LISTVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = LISTVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
</UL>

<P><STRONG><a name="[1d9]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview_setgridvis.o(i.LISTVIEW_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
</UL>

<P><STRONG><a name="[1eb]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, listview_setitemtext.o(i.LISTVIEW_SetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_FoundDeviceList
</UL>

<P><STRONG><a name="[534]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_getnumcolumns.o(i.LISTVIEW__GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[530]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_getnumrows.o(i.LISTVIEW__GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[54b]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW__GetRowDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[531]"></a>LISTVIEW__GetpRow</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__GetpRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[532]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[535]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__InvalidateRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[54e]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
</UL>

<P><STRONG><a name="[533]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, listview.o(i.LISTVIEW__UpdateScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>

<P><STRONG><a name="[f8]"></a>PROGBAR_Callback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(i.PROGBAR_CreateUser)
</UL>
<P><STRONG><a name="[1f7]"></a>PROGBAR_Create</STRONG> (Thumb, 22 bytes, Stack size 32 bytes, progbar_create.o(i.PROGBAR_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = PROGBAR_Create &rArr; PROGBAR_CreateEx &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[553]"></a>PROGBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, progbar.o(i.PROGBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = PROGBAR_CreateEx &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Create
</UL>

<P><STRONG><a name="[554]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, progbar.o(i.PROGBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
</UL>

<P><STRONG><a name="[c]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, progbar_skinflex.o(i.PROGBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>
<BR>[Address Reference Count : 2]<UL><LI> progbar.o(.data)
<LI> display.o(.text.DISP_Init)
</UL>
<P><STRONG><a name="[1fa]"></a>PROGBAR_SetBarColor</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, progbar_setbarcolor.o(i.PROGBAR_SetBarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PROGBAR_SetBarColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1fc]"></a>PROGBAR_SetFont</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, progbar_setfont.o(i.PROGBAR_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = PROGBAR_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1f8]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, progbar_setminmax.o(i.PROGBAR_SetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PROGBAR_SetMinMax &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1fe]"></a>PROGBAR_SetSkin</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, progbar_skin.o(i.PROGBAR_SetSkin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = PROGBAR_SetSkin &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1fd]"></a>PROGBAR_SetText</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, progbar_settext.o(i.PROGBAR_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PROGBAR_SetText &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1fb]"></a>PROGBAR_SetTextAlign</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, progbar_settextalign.o(i.PROGBAR_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = PROGBAR_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1f9]"></a>PROGBAR_SetTextColor</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, progbar_settextcolor.o(i.PROGBAR_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = PROGBAR_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[202]"></a>PROGBAR_SetValue</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, progbar.o(i.PROGBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFirmwareUpdateRequest
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC_CreateFileUpdateRequest
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
</UL>

<P><STRONG><a name="[558]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[559]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[55b]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[55c]"></a>RADIO_AddValue</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, radio.o(i.RADIO_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>

<P><STRONG><a name="[f9]"></a>RADIO_Callback</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, radio.o(i.RADIO_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = RADIO_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(i.RADIO_CreateUser)
</UL>
<P><STRONG><a name="[1db]"></a>RADIO_CreateEx</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, radio.o(i.RADIO_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = RADIO_CreateEx &rArr; RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
</UL>

<P><STRONG><a name="[560]"></a>RADIO_CreateUser</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, radio.o(i.RADIO_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
</UL>

<P><STRONG><a name="[55f]"></a>RADIO_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, radio.o(i.RADIO_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = RADIO_Dec &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[10]"></a>RADIO_DrawSkinFlex</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, radio_skinflex.o(i.RADIO_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = RADIO_DrawSkinFlex &rArr; GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> display.o(.text.DISP_Init)
<LI> radio.o(.data)
</UL>
<P><STRONG><a name="[217]"></a>RADIO_GetValue</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, radio.o(i.RADIO_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RADIO_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[55e]"></a>RADIO_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio.o(i.RADIO_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[1f1]"></a>RADIO_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, radio_skin.o(i.RADIO_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1f5]"></a>RADIO_SetDefaultTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio_default.o(i.RADIO_SetDefaultTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[9f]"></a>RADIO_SetText</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, radio_settext.o(i.RADIO_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = RADIO_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[1dc]"></a>RADIO_SetValue</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, radio.o(i.RADIO_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateScanRS485BusScreen
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[f]"></a>RADIO__GetButtonSize</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, radio.o(i.RADIO__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RADIO__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.data)
</UL>
<P><STRONG><a name="[562]"></a>RADIO__SetValue</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, radio.o(i.RADIO__SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = RADIO__SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>

<P><STRONG><a name="[563]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[fa]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 324 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[56a]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scrollbar_create.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[56b]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar.o(i.SCROLLBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[56c]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 212 bytes, Stack size 64 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[568]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[28]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(.data)
</UL>
<P><STRONG><a name="[567]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[564]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[565]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__InvalidatePartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[605]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[101]"></a>SPINBOX_Callback</STRONG> (Thumb, 504 bytes, Stack size 32 bytes, spinbox.o(i.SPINBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = SPINBOX_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox.o(i.SPINBOX_CreateUser)
</UL>
<P><STRONG><a name="[9b]"></a>SPINBOX_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, spinbox.o(i.SPINBOX_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = SPINBOX_CreateEx &rArr; SPINBOX_CreateUser &rArr; EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[579]"></a>SPINBOX_CreateUser</STRONG> (Thumb, 400 bytes, Stack size 64 bytes, spinbox.o(i.SPINBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SPINBOX_CreateUser &rArr; EDIT_CreateEx &rArr; EDIT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetDefaultFont
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEditMode
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDecs
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateEx
</UL>

<P><STRONG><a name="[13]"></a>SPINBOX_DrawSkinFlex</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, spinbox_skinflex.o(i.SPINBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SPINBOX_DrawSkinFlex &rArr; SPINBOX__DrawBk &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawButton
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__ApplyProps
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
</UL>
<BR>[Address Reference Count : 2]<UL><LI> display.o(.text.DISP_Init)
<LI> spinbox.o(.data)
</UL>
<P><STRONG><a name="[9d]"></a>SPINBOX_EnableBlink</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, spinbox.o(i.SPINBOX_EnableBlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = SPINBOX_EnableBlink &rArr; EDIT_EnableBlink &rArr; WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[216]"></a>SPINBOX_GetValue</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPINBOX_GetValue &rArr; EDIT_GetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[1f4]"></a>SPINBOX_SetDefaultButtonSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spinbox_default.o(i.SPINBOX_SetDefaultButtonSize))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[1f3]"></a>SPINBOX_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spinbox_skin.o(i.SPINBOX_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
</UL>

<P><STRONG><a name="[9e]"></a>SPINBOX_SetEdge</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_SetEdge))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = SPINBOX_SetEdge &rArr; _AdjustEdit &rArr; WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[57c]"></a>SPINBOX_SetEditMode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_SetEditMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SPINBOX_SetEditMode &rArr; EDIT_SetFocussable &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[9c]"></a>SPINBOX_SetValue</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = SPINBOX_SetValue &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_CreateScanRS485BusScreen)
</UL>
<P><STRONG><a name="[57d]"></a>SPINBOX__ApplyProps</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, spinbox_skin.o(i.SPINBOX__ApplyProps))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = SPINBOX__ApplyProps &rArr; EDIT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[57f]"></a>SPINBOX__DrawBk</STRONG> (Thumb, 198 bytes, Stack size 80 bytes, spinbox.o(i.SPINBOX__DrawBk))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SPINBOX__DrawBk &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[584]"></a>SPINBOX__GetButtonRect</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, spinbox.o(i.SPINBOX__GetButtonRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRectEx
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
</UL>

<P><STRONG><a name="[585]"></a>SPINBOX__GetButtonRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, spinbox.o(i.SPINBOX__GetButtonRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPINBOX__GetButtonRectEx &rArr; SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[225]"></a>TREEVIEW_AttachItem</STRONG> (Thumb, 272 bytes, Stack size 56 bytes, treeview.o(i.TREEVIEW_AttachItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = TREEVIEW_AttachItem &rArr; _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[102]"></a>TREEVIEW_Callback</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, treeview.o(i.TREEVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = TREEVIEW_Callback &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateUser)
</UL>
<P><STRONG><a name="[1e0]"></a>TREEVIEW_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, treeview.o(i.TREEVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = TREEVIEW_CreateEx &rArr; TREEVIEW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
</UL>

<P><STRONG><a name="[58e]"></a>TREEVIEW_CreateUser</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, treeview.o(i.TREEVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = TREEVIEW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateEx
</UL>

<P><STRONG><a name="[58f]"></a>TREEVIEW_ITEM_Collapse</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_ITEM_Collapse))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TREEVIEW_ITEM_Collapse &rArr; _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[224]"></a>TREEVIEW_ITEM_Create</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_ITEM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TREEVIEW_ITEM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_InsertItem
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[591]"></a>TREEVIEW_ITEM_Expand</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_ITEM_Expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TREEVIEW_ITEM_Expand &rArr; _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[222]"></a>TREEVIEW_InsertItem</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, treeview.o(i.TREEVIEW_InsertItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = TREEVIEW_InsertItem &rArr; TREEVIEW_AttachItem &rArr; _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Create
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[103]"></a>TREEVIEW_OwnerDraw</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = TREEVIEW_OwnerDraw &rArr; _OnOwnerdraw_Paint &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_Paint
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> treeview.o(i.TREEVIEW_CreateUser)
</UL>
<P><STRONG><a name="[1e1]"></a>TREEVIEW_SetAutoScrollV</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, treeview.o(i.TREEVIEW_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = TREEVIEW_SetAutoScrollV &rArr; _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
</UL>

<P><STRONG><a name="[1e2]"></a>TREEVIEW_SetSelMode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, treeview.o(i.TREEVIEW_SetSelMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TREEVIEW_SetSelMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateToolsScreen
</UL>

<P><STRONG><a name="[3ee]"></a>WIDGET_AndState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFocussable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[189]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[508]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[3d6]"></a>WIDGET_HandleActive</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[3ed]"></a>WIDGET_OrState</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFocussable
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[555]"></a>WIDGET_SetEffect</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, widget_seteffect.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[598]"></a>WIDGET_SetState</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[56f]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[65e]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[59a]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>

<P><STRONG><a name="[59c]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, widget_fillstringinrect.o(i.WIDGET__FillStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[59e]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[599]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[3e2]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[56d]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[5a0]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.WIDGET__SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[496]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[5a3]"></a>WM_BringToBottom</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[597]"></a>WM_BringToTop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[5a8]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_checkscrollpos.o(i.WM_CheckScrollBounds))
<BR><BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[5a7]"></a>WM_CheckScrollPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_checkscrollpos.o(i.WM_CheckScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[40f]"></a>WM_CreateTimer</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3e1]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_CreateUser
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_CreateUser
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[4ab]"></a>WM_Deactivate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[3de]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[410]"></a>WM_DeleteTimer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>

<P><STRONG><a name="[aa]"></a>WM_DeleteWindow</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WM_DeleteWindow &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Address Reference Count : 1]<UL><LI> display.o(.text.DISP_DeleteToolsScreen)
</UL>
<P><STRONG><a name="[1de]"></a>WM_DisableWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_enablewindow.o(i.WM_DisableWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_DisableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_CreateSettingsScreen
</UL>

<P><STRONG><a name="[21c]"></a>WM_EnableWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_enablewindow.o(i.WM_EnableWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_EnableWindow &rArr; WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
</UL>

<P><STRONG><a name="[478]"></a>WM_Exec</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[5b4]"></a>WM_ForEachDesc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_foreachdesc.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_ForEachDesc &rArr; WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[649]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[561]"></a>WM_GetBkColor</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getbkcolor.o(i.WM_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[3f7]"></a>WM_GetClientRect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_getclientrect.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>

<P><STRONG><a name="[510]"></a>WM_GetClientRectEx</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_getclientrect.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetClientRectEx &rArr; WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
</UL>

<P><STRONG><a name="[617]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[664]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_getdesktopwindowex.o(i.WM_GetDesktopWindowEx))
<BR><BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>

<P><STRONG><a name="[5a1]"></a>WM_GetDialogItem</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_getdialogitem.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[5b7]"></a>WM_GetFirstChild</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[5b8]"></a>WM_GetFlags</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_getflags.o(i.WM_GetFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFlags
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[5b9]"></a>WM_GetId</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getid.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[507]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getinsiderect.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[54c]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_getinsiderectexscrollbar.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>

<P><STRONG><a name="[501]"></a>WM_GetParent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[570]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_getscrollpartner.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[537]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getscrollstate.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[538]"></a>WM_GetScrollbarH</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_getscrollbar.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[536]"></a>WM_GetScrollbarV</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_getscrollbar.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[5bb]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_getorg.o(i.WM_GetWindowOrgX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowOrgX
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[583]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getwindowrect.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetWindowRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__DrawBk
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[416]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetWindowSizeX
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[575]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[ee]"></a>WM_HandlePID</STRONG> (Thumb, 850 bytes, Stack size 144 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[65f]"></a>WM_HasCaptured</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_hascaptured.o(i.WM_HasCaptured))
<BR><BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[21a]"></a>WM_HasFocus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_hasfocus.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Service
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[1ff]"></a>WM_HideWindow</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Init
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[491]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[54d]"></a>WM_InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
</UL>

<P><STRONG><a name="[3f0]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetSelMode
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetText
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetSkin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_EnableBlink
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetTextColor
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetText
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[5cc]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_show.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[5cd]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[572]"></a>WM_IsFocussable</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, wm_isfocussable.o(i.WM_IsFocussable))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_IsFocussable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[5c3]"></a>WM_IsWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_iswindow.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_IsWindow &rArr; WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[5cf]"></a>WM_MoveTo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_move.o(i.WM_MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
</UL>

<P><STRONG><a name="[5d1]"></a>WM_MoveWindow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[3f9]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_notifyparent.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ChangeCharacter
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[4bd]"></a>WM_OnKey</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, wm_onkey.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[5c5]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5c4]"></a>WM_ReleaseCapture</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[5d4]"></a>WM_ResizeWindow</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, wm_resizewindow.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[40a]"></a>WM_RestartTimer</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_Restart &rArr; _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[5bf]"></a>WM_Screen2hWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM_Screen2hWin &rArr; _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[408]"></a>WM_SelectWindow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[573]"></a>WM_SendMessage</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>

<P><STRONG><a name="[571]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_sendmessagenopara.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM_SendMessageNoPara &rArr; WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[5ac]"></a>WM_SendToParent</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[5d7]"></a>WM_SetCapture</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[5d8]"></a>WM_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[574]"></a>WM_SetEnableState</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, wm_enablewindow.o(i.WM_SetEnableState))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = WM_SetEnableState &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableWindow
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableWindow
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[539]"></a>WM_SetFocus</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, wm_setfocus.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3ec]"></a>WM_SetHasTrans</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[5a2]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_setscrollstate.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[5da]"></a>WM_SetScrollValue</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_checkscrollpos.o(i.WM_SetScrollValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[552]"></a>WM_SetScrollbarH</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM_SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[551]"></a>WM_SetScrollbarV</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[5dd]"></a>WM_SetSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, wm_setsize.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[46c]"></a>WM_SetUserClipRect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setusercliprect.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5df]"></a>WM_SetWindowPos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_setwindowpos.o(i.WM_SetWindowPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustEdit
</UL>

<P><STRONG><a name="[203]"></a>WM_ShowWindow</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_show.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_ProgbarSetNewState
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[5d9]"></a>WM_ValidateWindow</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, wm_validatewindow.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_ValidateWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[5de]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[5be]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5c8]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[5ca]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[5af]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5e2]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[5b1]"></a>WM__DetachWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5b5]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm__foreachdesc.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[5ab]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[59f]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[5e4]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[400]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[5a4]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[5ae]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[3fe]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[5a9]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[5cb]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[5c7]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[5e6]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[5e7]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[5a5]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[5e8]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__isancestor.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[3e7]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__isenabled.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[5c0]"></a>WM__IsInModalArea</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[663]"></a>WM__IsInWindow</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM__IsInWindow))
<BR><BR>[Called By]<UL><LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[5ad]"></a>WM__IsWindow</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[5d0]"></a>WM__MoveTo</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm_move.o(i.WM__MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[5d2]"></a>WM__MoveWindow</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>

<P><STRONG><a name="[5ea]"></a>WM__Paint</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[133]"></a>WM__Paint1</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = WM__Paint1 &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[656]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[5c6]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5e3]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[5ef]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__screen2client.o(i.WM__Screen2Client), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[5d6]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[516]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetEnableState
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>

<P><STRONG><a name="[5c2]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__sendmessageifenabled.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[4a3]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, wm__sendmessagenopara.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5aa]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[5f0]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[5c1]"></a>WM__SendTouchMessage</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[5db]"></a>WM__SetScrollbarH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[5dc]"></a>WM__SetScrollbarV</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[596]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, wm__updatechildpositions.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + In Cycle
<LI>Call Chain = WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[669]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[684]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[31a]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTPD_Init
</UL>

<P><STRONG><a name="[66b]"></a>__0sprintf$1</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[685]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[ca]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DISP_Keypad
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netconf.o(.text.LwIP_Init)
</UL>
<P><STRONG><a name="[1b1]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[686]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[687]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[688]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[689]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[48a]"></a>emWin_LCD_Init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[134]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[3a2]"></a>puts</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = puts &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_tftp_request
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ce]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(.text.RTC_ByteToBcd2))
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_rtc.o(.text.RTC_SetTime)
</UL>
<P><STRONG><a name="[bc]"></a>_Color2IndexBulk_M1555I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Color2IndexBulk_M1555I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M1555I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c0]"></a>_Color2IndexBulk_M4444I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Color2IndexBulk_M4444I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M4444I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[be]"></a>_Color2IndexBulk_M565_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Color2IndexBulk_M565_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M565_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c4]"></a>_Color2IndexBulk_M8888I_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Color2IndexBulk_M8888I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M8888I_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c2]"></a>_Color2IndexBulk_M888_DMA2D</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Color2IndexBulk_M888_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Color2IndexBulk_M888_DMA2D &rArr; _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c6]"></a>_DMA_AlphaBlending</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, guidrv_stm32f429i.o(.text._DMA_AlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _DMA_AlphaBlending
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[31f]"></a>_DMA_Color2IndexBulk</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, guidrv_stm32f429i.o(.text._DMA_Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DMA_Color2IndexBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M888_DMA2D
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M8888I_DMA2D
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M565_DMA2D
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M4444I_DMA2D
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2IndexBulk_M1555I_DMA2D
</UL>

<P><STRONG><a name="[322]"></a>_DMA_ConvertColor</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidrv_stm32f429i.o(.text._DMA_ConvertColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[323]"></a>_DMA_Copy</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guidrv_stm32f429i.o(.text._DMA_Copy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap16bpp
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyRect
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[324]"></a>_DMA_Index2ColorBulk</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_stm32f429i.o(.text._DMA_Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_ConvertColor
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M888_DMA2D
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M8888I_DMA2D
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M565_DMA2D
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M4444I_DMA2D
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBulk_M1555I_DMA2D
</UL>

<P><STRONG><a name="[c8]"></a>_DMA_MixColors</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, guidrv_stm32f429i.o(.text._DMA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DMA_MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[325]"></a>_GetBufferSize</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._GetBufferSize))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap16bpp
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyRect
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_CopyBuffer
</UL>

<P><STRONG><a name="[2aa]"></a>_GetPixelformat</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._GetPixelformat))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_FillRect
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_DrawBitmap8bpp
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>

<P><STRONG><a name="[bd]"></a>_Index2ColorBulk_M1555I_DMA2D</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Index2ColorBulk_M1555I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M1555I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c1]"></a>_Index2ColorBulk_M4444I_DMA2D</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Index2ColorBulk_M4444I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M4444I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[bf]"></a>_Index2ColorBulk_M565_DMA2D</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Index2ColorBulk_M565_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M565_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c5]"></a>_Index2ColorBulk_M8888I_DMA2D</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Index2ColorBulk_M8888I_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M8888I_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c3]"></a>_Index2ColorBulk_M888_DMA2D</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._Index2ColorBulk_M888_DMA2D))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Index2ColorBulk_M888_DMA2D &rArr; _DMA_Index2ColorBulk &rArr; _InvertAlpha_SwapRB
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[320]"></a>_InvertAlpha</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_stm32f429i.o(.text._InvertAlpha))
<BR><BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_MixColorsBulk
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_AlphaBlending
</UL>

<P><STRONG><a name="[321]"></a>_InvertAlpha_SwapRB</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guidrv_stm32f429i.o(.text._InvertAlpha_SwapRB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InvertAlpha_SwapRB
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LCD_GetpPalConvTable
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Index2ColorBulk
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Color2IndexBulk
</UL>

<P><STRONG><a name="[b7]"></a>_LCD_CopyBuffer</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, guidrv_stm32f429i.o(.text._LCD_CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _LCD_CopyBuffer &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b8]"></a>_LCD_CopyRect</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, guidrv_stm32f429i.o(.text._LCD_CopyRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LCD_CopyRect &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[bb]"></a>_LCD_DrawBitmap16bpp</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, guidrv_stm32f429i.o(.text._LCD_DrawBitmap16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _LCD_DrawBitmap16bpp &rArr; _DMA_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA_Copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[ba]"></a>_LCD_DrawBitmap8bpp</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, guidrv_stm32f429i.o(.text._LCD_DrawBitmap8bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _LCD_DrawBitmap8bpp
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[b9]"></a>_LCD_FillRect</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, guidrv_stm32f429i.o(.text._LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _LCD_FillRect &rArr; LCD_SetDevFunc
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDevFunc
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDrawMode
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelformat
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBufferSize
</UL>
<BR>[Address Reference Count : 2]<UL><LI> guidrv_stm32f429i.o(.text._LCD_FillRect)
<LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c7]"></a>_LCD_GetpPalConvTable</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, guidrv_stm32f429i.o(.text._LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetDevFunc
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha_SwapRB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[c9]"></a>_LCD_MixColorsBulk</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, guidrv_stm32f429i.o(.text._LCD_MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _LCD_MixColorsBulk
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertAlpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_stm32f429i.o(.text.LCD_X_Config)
</UL>
<P><STRONG><a name="[2bc]"></a>_LTDC_SetLayerPos</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, guidrv_stm32f429i.o(.text._LTDC_SetLayerPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _LTDC_SetLayerPos &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_ReloadConfig
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[e0]"></a>tcp_accept_null</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tcp.o(.text.tcp_accept_null))
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text.tcp_listen_with_backlog)
</UL>
<P><STRONG><a name="[3ae]"></a>tcp_close_shutdown</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, tcp.o(.text.tcp_close_shutdown), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[3ac]"></a>tcp_new_port</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, tcp.o(.text.tcp_new_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tcp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>

<P><STRONG><a name="[3be]"></a>tcp_oos_insert_segment</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, tcp_in.o(.text.tcp_oos_insert_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = tcp_oos_insert_segment &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[3b9]"></a>tcp_parseopt</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, tcp_in.o(.text.tcp_parseopt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tcp_parseopt
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[3ba]"></a>tcp_receive</STRONG> (Thumb, 1736 bytes, Stack size 32 bytes, tcp_in.o(.text.tcp_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = tcp_receive &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[3b1]"></a>tcp_create_segment</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, tcp_out.o(.text.tcp_create_segment))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = tcp_create_segment &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
</UL>

<P><STRONG><a name="[3bd]"></a>tcp_output_alloc_header</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, tcp_out.o(.text.tcp_output_alloc_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = tcp_output_alloc_header &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[3c0]"></a>tcp_pbuf_prealloc</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, tcp_out.o(.text.tcp_pbuf_prealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[3c7]"></a>tcp_seg_add_chksum</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tcp_out.o(.text.tcp_seg_add_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tcp_seg_add_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[e2]"></a>tcpip_tcp_timer</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, timers.o(.text.tcpip_tcp_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = tcpip_tcp_timer &rArr; tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timers.o(.text.tcp_timer_needed)
<LI> timers.o(.text.tcpip_tcp_timer)
</UL>
<P><STRONG><a name="[33c]"></a>etharp_find_entry</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, etharp.o(.text.etharp_find_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = etharp_find_entry &rArr; etharp_free_entry &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[33d]"></a>etharp_free_entry</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, etharp.o(.text.etharp_free_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = etharp_free_entry &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
</UL>

<P><STRONG><a name="[342]"></a>etharp_output_to_arp_index</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, etharp.o(.text.etharp_output_to_arp_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = etharp_output_to_arp_index &rArr; etharp_request &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[376]"></a>icmp_send_response</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, icmp.o(.text.icmp_send_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
</UL>

<P><STRONG><a name="[37d]"></a>lwip_standard_chksum</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, inet_chksum.o(.text.lwip_standard_chksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_chksum_copy
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
</UL>

<P><STRONG><a name="[383]"></a>ip_frag_free_pbuf_custom_ref</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ip_frag.o(.text.ip_frag_free_pbuf_custom_ref))
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[38c]"></a>ip_reass_dequeue_datagram</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ip_frag.o(.text.ip_reass_dequeue_datagram))
<BR><BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[38d]"></a>ip_reass_free_complete_datagram</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, ip_frag.o(.text.ip_reass_free_complete_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
</UL>

<P><STRONG><a name="[38b]"></a>ip_reass_remove_oldest_datagram</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, ip_frag.o(.text.ip_reass_remove_oldest_datagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[dc]"></a>ipfrag_free_pbuf_custom</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ip_frag.o(.text.ipfrag_free_pbuf_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ipfrag_free_pbuf_custom &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ip_frag.o(.text.ip_frag)
</UL>
<P><STRONG><a name="[d5]"></a>low_level_output</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ethernetif.o(.text.low_level_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = low_level_output &rArr; ETH_Prepare_Transmit_Descriptors
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Prepare_Transmit_Descriptors
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text.ethernetif_init)
</UL>
<P><STRONG><a name="[1cd]"></a>CmdResp1Error</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, sdio_sd.o(.text.CmdResp1Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmdResp1Error &rArr; SDIO_GetResponse
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[1d0]"></a>CmdResp2Error</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sdio_sd.o(.text.CmdResp2Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CmdResp2Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[2df]"></a>SDEnWideBus</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, sdio_sd.o(.text.SDEnWideBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SDEnWideBus &rArr; SDIO_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[243]"></a>__NVIC_SystemReset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fs5206.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FS5206_Init
</UL>

<P><STRONG><a name="[310]"></a>SPIFLASH_ReadStatus</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, spi_flash.o(.text.SPIFLASH_ReadStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIFLASH_ReadStatus &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WaitBusy
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteEnable
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteDisable
</UL>

<P><STRONG><a name="[d1]"></a>SPIFLASH_ReadWrite</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spi_flash.o(.text.SPIFLASH_ReadWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Read
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Init
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteEnable
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_WriteDisable
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi_flash.o(.text.SPIFLASH_Write)
</UL>
<P><STRONG><a name="[315]"></a>SPIFLASH_WriteDisable</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi_flash.o(.text.SPIFLASH_WriteDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIFLASH_WriteDisable &rArr; SPIFLASH_ReadStatus &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
</UL>

<P><STRONG><a name="[314]"></a>SPIFLASH_WriteEnable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, spi_flash.o(.text.SPIFLASH_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIFLASH_WriteEnable &rArr; SPIFLASH_ReadStatus &rArr; SPIFLASH_ReadWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadWrite
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_Write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFLASH_SectorErase
</UL>

<P><STRONG><a name="[cd]"></a>netbios_recv</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, netbios.o(.text.netbios_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = netbios_recv &rArr; udp_sendto &rArr; udp_sendto_chksum &rArr; udp_sendto_if_chksum &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netbios.o(.text.NETBIOS_Init)
</UL>
<P><STRONG><a name="[35d]"></a>fs_free</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fs.o(.text.fs_free))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_open
</UL>

<P><STRONG><a name="[b2]"></a>http_accept</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, httpd.o(.text.http_accept))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = http_accept &rArr; mem_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_setprio
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd.o(.text.HTTPD_Init)
</UL>
<P><STRONG><a name="[363]"></a>http_close_conn</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, httpd.o(.text.http_close_conn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = http_close_conn &rArr; http_state_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_state_free
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_poll
</UL>

<P><STRONG><a name="[d8]"></a>http_err</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, httpd.o(.text.http_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = http_err &rArr; http_state_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_state_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd.o(.text.http_accept)
</UL>
<P><STRONG><a name="[366]"></a>http_get_404_file</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, httpd.o(.text.http_get_404_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = http_get_404_file &rArr; fs_open &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_open
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[da]"></a>http_poll</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, httpd.o(.text.http_poll))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = http_poll &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd.o(.text.http_close_conn)
</UL>
<P><STRONG><a name="[d7]"></a>http_recv</STRONG> (Thumb, 784 bytes, Stack size 48 bytes, httpd.o(.text.http_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = http_recv &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strnstr
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_get_404_file
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_open
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd.o(.text.http_accept)
</UL>
<P><STRONG><a name="[367]"></a>http_send_data</STRONG> (Thumb, 1216 bytes, Stack size 56 bytes, httpd.o(.text.http_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = http_send_data &rArr; http_write &rArr; tcp_write &rArr; tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_write
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_read
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_bytes_left
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_sent
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_poll
</UL>

<P><STRONG><a name="[d9]"></a>http_sent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, httpd.o(.text.http_sent))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = http_sent &rArr; http_send_data &rArr; http_write &rArr; tcp_write &rArr; tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> httpd.o(.text.http_accept)
</UL>
<P><STRONG><a name="[364]"></a>http_state_free</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, httpd.o(.text.http_state_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = http_state_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_err
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_close_conn
</UL>

<P><STRONG><a name="[36e]"></a>http_write</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, httpd.o(.text.http_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = http_write &rArr; tcp_write &rArr; tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_free &rArr; mem_free
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_send_data
</UL>

<P><STRONG><a name="[36c]"></a>strnstr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, httpd.o(.text.strnstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = strnstr &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;http_recv
</UL>

<P><STRONG><a name="[28c]"></a>__NVIC_SystemReset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, httpd_cgi_ssi.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_CGI_Handler
</UL>

<P><STRONG><a name="[236]"></a>ETH_Delay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4x7_eth.o(.text.ETH_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ETH_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Init
</UL>

<P><STRONG><a name="[32a]"></a>check_fs</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, ff.o(.text.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[331]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(.text.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[32d]"></a>create_chain</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ff.o(.text.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[330]"></a>dir_next</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, ff.o(.text.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[333]"></a>dir_read</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ff.o(.text.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[334]"></a>dir_register</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ff.o(.text.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dir_register &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[337]"></a>dir_remove</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ff.o(.text.dir_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = dir_remove &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[335]"></a>dir_sdi</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, ff.o(.text.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[351]"></a>find_volume</STRONG> (Thumb, 652 bytes, Stack size 56 bytes, ff.o(.text.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[352]"></a>follow_path</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, ff.o(.text.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[399]"></a>get_achar</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ff.o(.text.get_achar))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pattern_matching
</UL>

<P><STRONG><a name="[32e]"></a>get_fat</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, ff.o(.text.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[358]"></a>get_fileinfo</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, ff.o(.text.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_fileinfo
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[356]"></a>get_ldnumber</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, ff.o(.text.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[357]"></a>ld_clust</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ff.o(.text.ld_clust))
<BR><BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[32c]"></a>ld_dword</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ff.o(.text.ld_dword))
<BR><BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[336]"></a>mem_cpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(.text.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[32b]"></a>move_window</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ff.o(.text.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[350]"></a>pattern_matching</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, ff.o(.text.pattern_matching))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = pattern_matching &rArr;  pattern_matching (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pattern_matching
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_achar
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_findnext
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pattern_matching
</UL>

<P><STRONG><a name="[32f]"></a>put_fat</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, ff.o(.text.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[355]"></a>remove_chain</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, ff.o(.text.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[353]"></a>st_clust</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(.text.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[359]"></a>st_dword</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ff.o(.text.st_dword))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
</UL>

<P><STRONG><a name="[354]"></a>sync_fs</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ff.o(.text.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[332]"></a>sync_window</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ff.o(.text.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sync_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[34f]"></a>validate</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ff.o(.text.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>

<P><STRONG><a name="[23c]"></a>__NVIC_SystemReset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ErrorHandler
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RAM_Init
</UL>

<P><STRONG><a name="[139]"></a>_Color2IndexBulk_M8888I</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guicc_m8888i.o(i._Color2IndexBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>_Color2Index_M8888I</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guicc_m8888i.o(i._Color2Index_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>_GetIndexMask_M8888I</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m8888i.o(i._GetIndexMask_M8888I))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>_Index2ColorBulk_M8888I</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guicc_m8888i.o(i._Index2ColorBulk_M8888I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk_M8888I
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m8888i.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[432]"></a>_AddFreeMemory</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[42f]"></a>_Alloc</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[63a]"></a>_EnlargeBlocks</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[5f2]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[435]"></a>_InitOnce</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TestRAM
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[131]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[5fe]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _PopFreeBlock &rArr;  _EnlargeBlocks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[433]"></a>_PushFreeBlock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[437]"></a>_RemoveFreeBlock</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[436]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>

<P><STRONG><a name="[654]"></a>_TestRAM</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, gui_alloc.o(i._TestRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[5f3]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[44b]"></a>_Draw</STRONG> (Thumb, 458 bytes, Stack size 120 bytes, gui_bmp.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _Draw &rArr; _DrawBitmap_Pal &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__Init
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_DrawEx
</UL>

<P><STRONG><a name="[61b]"></a>_DrawBitmap_16bpp</STRONG> (Thumb, 218 bytes, Stack size 104 bytes, gui_bmp.o(i._DrawBitmap_16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawBitmap_16bpp &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpfColor2IndexEx
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[61a]"></a>_DrawBitmap_Pal</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, gui_bmp.o(i._DrawBitmap_Pal))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawBitmap_Pal &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[61c]"></a>_DrawBitmap_RGB</STRONG> (Thumb, 242 bytes, Stack size 144 bytes, gui_bmp.o(i._DrawBitmap_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = _DrawBitmap_RGB &rArr; _GetEarlyOut
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEarlyOut
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[61d]"></a>_DrawBitmap_RLE</STRONG> (Thumb, 580 bytes, Stack size 88 bytes, gui_bmp.o(i._DrawBitmap_RLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawBitmap_RLE &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadPalette
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[2]"></a>_DrawLine_RGB</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_bmp.o(i._DrawLine_RGB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawLine_RGB
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_bmp.o(i._DrawBitmap_RGB)
<LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[658]"></a>_GetBitfieldsPara</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_bmp.o(i._GetBitfieldsPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetBitfieldsPara
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>

<P><STRONG><a name="[636]"></a>_GetClipParam</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, gui_bmp.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[637]"></a>_GetEarlyOut</STRONG> (Thumb, 188 bytes, Stack size 28 bytes, gui_bmp.o(i._GetEarlyOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _GetEarlyOut
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RGB
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_Pal
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_16bpp
</UL>

<P><STRONG><a name="[10b]"></a>_Index2ColorBitfields</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gui_bmp.o(i._Index2ColorBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Index2ColorBitfields &rArr; _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageBitfields
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(i._Draw)
</UL>
<P><STRONG><a name="[61e]"></a>_ManageBitfields</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gui_bmp.o(i._ManageBitfields))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ManageBitfields &rArr; GUI_BMP__ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP__ReadData
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitfieldsPara
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2ColorBitfields
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>

<P><STRONG><a name="[6]"></a>_NextPixel_End</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_End &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[659]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, gui_bmp.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[5]"></a>_NextPixel_NextLine</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_bmp.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, gui_bmp.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>_NextPixel_Start</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gui_bmp.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_bmp.o(.data)
</UL>
<P><STRONG><a name="[489]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[f1]"></a>_OnExit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[3fa]"></a>CL_DispChar</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
</UL>

<P><STRONG><a name="[13c]"></a>_DrawBitmap</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, gui_drawbitmap_565.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _DrawBitmap &rArr; GUI__DrawBitmap16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmap16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_565.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>_DrawBitmapA565</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, gui_drawbitmap_a16.o(i._DrawBitmapA565))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _DrawBitmapA565 &rArr; GUI__DrawBitmapA16bpp &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawBitmapA16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_a16.o(.constdata)
</UL>
<P><STRONG><a name="[485]"></a>_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoX))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[486]"></a>_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoY))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[141]"></a>_Color2IndexBulk</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[518]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
</UL>

<P><STRONG><a name="[522]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeMax
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeMax
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[11a]"></a>_CopyBuffer</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[625]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, guidrv_lin_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[622]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, guidrv_lin_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[624]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, guidrv_lin_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[626]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[146]"></a>_DrawBitmap</STRONG> (Thumb, 386 bytes, Stack size 72 bytes, guidrv_lin_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>_FillRect</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _FillRect &rArr; _FillRectOpt16
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[63b]"></a>_FillRectOpt16</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._FillRectOpt16))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _FillRectOpt16
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[150]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>_GetDevFunc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>_GetPos</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _GetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[151]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Init &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[614]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[116]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[115]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_16.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[11d]"></a>_ReadRect</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, guidrv_lin_16.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[112]"></a>_SetAlpha</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetAlpha &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[117]"></a>_SetAlphaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[119]"></a>_SetChroma</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[118]"></a>_SetChromaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[11c]"></a>_SetDevFunc</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _SetDevFunc &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[14d]"></a>_SetOrg</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, guidrv_lin_16.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidrv_lin_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>_SetPos</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, guidrv_lin_16.o(i._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _SetPos &rArr; _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10f]"></a>_SetSize</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidrv_lin_16.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _SetSize &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10d]"></a>_SetVRAMAddr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetVRAMAddr &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[10e]"></a>_SetVSize</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[113]"></a>_SetVis</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[11b]"></a>_ShowBuffer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidrv_lin_16.o(i._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _ShowBuffer &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[14c]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_lin_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_16.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>_CopyBuffer</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._CopyBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _CopyBuffer &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[621]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, guidrv_lin_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine1BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[627]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, guidrv_lin_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[628]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, guidrv_lin_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[629]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[152]"></a>_DrawBitmap</STRONG> (Thumb, 386 bytes, Stack size 72 bytes, guidrv_lin_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>_DrawVLine</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>_FillRect</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FillRect &rArr; _FillRectOpt32
</UL>
<BR>[Calls]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRectOpt32
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[63c]"></a>_FillRectOpt32</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._FillRectOpt32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _FillRectOpt32
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[15c]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>_GetDevFunc</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[15b]"></a>_GetDevProp</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>_GetPixelIndex</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>_GetPos</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._GetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _GetPos &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[15d]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _Init &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[615]"></a>_InitOnce</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ShowBuffer
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAlpha
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPos
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyBuffer
</UL>

<P><STRONG><a name="[127]"></a>_Off</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[126]"></a>_On</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_lin_32.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12e]"></a>_ReadRect</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, guidrv_lin_32.o(i._ReadRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _ReadRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[123]"></a>_SetAlpha</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetAlpha &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[128]"></a>_SetAlphaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetAlphaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _SetAlphaMode &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12a]"></a>_SetChroma</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetChroma))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetChroma &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[129]"></a>_SetChromaMode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetChromaMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _SetChromaMode &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12d]"></a>_SetDevFunc</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _SetDevFunc &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[159]"></a>_SetOrg</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>_SetPixelIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, guidrv_lin_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>_SetPos</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, guidrv_lin_32.o(i._SetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _SetPos &rArr; _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeDisplay
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeDisplay
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVis
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[120]"></a>_SetSize</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidrv_lin_32.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _SetSize &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[11e]"></a>_SetVRAMAddr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetVRAMAddr &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[11f]"></a>_SetVSize</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[124]"></a>_SetVis</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._SetVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _SetVis &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12c]"></a>_ShowBuffer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidrv_lin_32.o(i._ShowBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _ShowBuffer &rArr; LCD_X_DisplayDriver &rArr; LCD_Init &rArr; SDRAM_Init &rArr; SDRAM_InitSequence &rArr; DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[158]"></a>_XorPixel</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_lin_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_lin_32.o(.constdata)
</UL>
<P><STRONG><a name="[3db]"></a>_OnButtonPressed</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _OnButtonPressed &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[3dc]"></a>_OnButtonReleased</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _OnButtonReleased &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[8]"></a>_OnTouchDefault</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>_Paint</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[607]"></a>_CalcSizes</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, edit.o(i._CalcSizes))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _CalcSizes &rArr; GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorCharacter
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[406]"></a>_ChangeCharacter</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, edit.o(i._ChangeCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _ChangeCharacter &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[402]"></a>_DeleteChar</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, edit.o(i._DeleteChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _DeleteChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[40e]"></a>_IncrementBuffer</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, edit.o(i._IncrementBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateUser
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[403]"></a>_InsertChar</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, edit.o(i._InsertChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _InsertChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[41e]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, edit.o(i._IsSpaceInBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[409]"></a>_Paint</STRONG> (Thumb, 324 bytes, Stack size 72 bytes, edit.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizes
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_Callback
</UL>

<P><STRONG><a name="[421]"></a>_SetValue</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, edit.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>

<P><STRONG><a name="[53d]"></a>_AddKey</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, listview.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = _AddKey &rArr; _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[5f6]"></a>_ColumnScroll</STRONG> (Thumb, 338 bytes, Stack size 96 bytes, listview.o(i._ColumnScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _ColumnScroll &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSelCol
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[53e]"></a>_FreeAttached</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, listview.o(i._FreeAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[550]"></a>_GetNumVisibleRows</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i._GetNumVisibleRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[5f4]"></a>_MoveSel</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, listview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[60f]"></a>_MoveSelCol</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, listview.o(i._MoveSelCol))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _MoveSelCol &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
</UL>

<P><STRONG><a name="[53c]"></a>_NotifyOwner</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, listview.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _NotifyOwner &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[5f5]"></a>_OnPage</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, listview.o(i._OnPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[53a]"></a>_OnPaint</STRONG> (Thumb, 1176 bytes, Stack size 256 bytes, listview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[53b]"></a>_SetSelFromPos</STRONG> (Thumb, 304 bytes, Stack size 120 bytes, listview.o(i._SetSelFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[54f]"></a>_UpdateScrollPos</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, listview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _UpdateScrollPos &rArr; WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ColumnScroll
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[54a]"></a>_SetAutoScroll</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, listview_setautoscroll.o(i._SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = _SetAutoScroll &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetAutoScrollV
</UL>

<P><STRONG><a name="[610]"></a>_Compare</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, listview_setsort.o(i._Compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _Compare &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[547]"></a>_GetSelUnsorted</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, listview_setsort.o(i._GetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetSelUnsorted
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSelUnsorted
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[666]"></a>_SetSelUnsorted</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, listview_setsort.o(i._SetSelUnsorted))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Sort
</UL>

<P><STRONG><a name="[546]"></a>_Sort</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, listview_setsort.o(i._Sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = _Sort &rArr; _SetSelUnsorted &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDirIndicator
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelUnsorted
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSelUnsorted
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Compare
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSelUnsorted
</UL>

<P><STRONG><a name="[556]"></a>_SetValue</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, progbar.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _SetValue &rArr; GUI_AddDecMin &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[e]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, progbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>_Paint</STRONG> (Thumb, 320 bytes, Stack size 104 bytes, progbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[557]"></a>_DrawBackground</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, progbar_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[55d]"></a>_OnTouch</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, radio.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _OnTouch &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[12]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, radio_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>_Paint</STRONG> (Thumb, 452 bytes, Stack size 160 bytes, radio_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _Paint &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[582]"></a>_AdjustEdit</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, spinbox.o(i._AdjustEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _AdjustEdit &rArr; WM_SetWindowPos &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetFont
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetWindowPos
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_SetEdge
</UL>

<P><STRONG><a name="[646]"></a>_GetButtonIndex</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, spinbox.o(i._GetButtonIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetButtonIndex &rArr; SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[57a]"></a>_GetDecs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, spinbox.o(i._GetDecs))
<BR><BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_CreateUser
</UL>

<P><STRONG><a name="[657]"></a>_InvalidateButtonRect</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, spinbox.o(i._InvalidateButtonRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _InvalidateButtonRect &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRect
</UL>
<BR>[Called By]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>

<P><STRONG><a name="[647]"></a>_IsInRect</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, spinbox.o(i._IsInRect))
<BR><BR>[Called By]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
</UL>

<P><STRONG><a name="[577]"></a>_OnAction</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, spinbox.o(i._OnAction))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _OnAction &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[65b]"></a>_OnButtonReleased</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, spinbox.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _OnButtonReleased &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPidStateChange
</UL>

<P><STRONG><a name="[576]"></a>_OnPidStateChange</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, spinbox.o(i._OnPidStateChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _OnPidStateChange &rArr; _OnAction &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnAction
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateButtonRect
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[578]"></a>_OnTouch</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, spinbox.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = _OnTouch &rArr; _OnButtonReleased &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonIndex
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_Callback
</UL>

<P><STRONG><a name="[15]"></a>_Create</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, spinbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox_skin.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>_Paint</STRONG> (Thumb, 278 bytes, Stack size 112 bytes, spinbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _Paint &rArr; SPINBOX__GetButtonRectEx &rArr; SPINBOX__GetButtonRect
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX__GetButtonRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spinbox_skin.o(.data)
</UL>
<P><STRONG><a name="[581]"></a>_DrawArrow</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, spinbox_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[580]"></a>_DrawButton</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, spinbox_skinflex.o(i._DrawButton))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawButton &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[57e]"></a>_DrawFrame</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, spinbox_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPINBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[5ff]"></a>_CalcDrawInfo</STRONG> (Thumb, 944 bytes, Stack size 72 bytes, treeview.o(i._CalcDrawInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _CalcDrawInfo &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[58b]"></a>_CalcParams</STRONG> (Thumb, 206 bytes, Stack size 136 bytes, treeview.o(i._CalcParams))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _CalcParams &rArr; _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ConnectLines
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[603]"></a>_CallOwnerDraw</STRONG> (Thumb, 28 bytes, Stack size 56 bytes, treeview.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[590]"></a>_CollapseItem</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, treeview.o(i._CollapseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _CollapseItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[602]"></a>_ConnectLines</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, treeview.o(i._ConnectLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ConnectLines
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[592]"></a>_ExpandItem</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, treeview.o(i._ExpandItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _ExpandItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[601]"></a>_GetBitmap</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, treeview.o(i._GetBitmap))
<BR><BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[600]"></a>_GetBitmapPointer</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, treeview.o(i._GetBitmapPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetBitmapPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnOwnerdraw_GetYSize
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>

<P><STRONG><a name="[586]"></a>_GetLastNodeItem</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, treeview.o(i._GetLastNodeItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetLastNodeItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
</UL>

<P><STRONG><a name="[64b]"></a>_GetNextVisibleItem</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, treeview.o(i._GetNextVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetNextVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[64d]"></a>_GetPrevVisibleItem</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, treeview.o(i._GetPrevVisibleItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
</UL>

<P><STRONG><a name="[64e]"></a>_GetPrevVisibleNode</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, treeview.o(i._GetPrevVisibleNode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetPrevVisibleNode &rArr; _GetPrevVisibleItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[650]"></a>_GetVisibility</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, treeview.o(i._GetVisibility))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[588]"></a>_InitRecalc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, treeview.o(i._InitRecalc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _InitRecalc
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetAutoScroll
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LinkItem
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
</UL>

<P><STRONG><a name="[587]"></a>_LinkItem</STRONG> (Thumb, 364 bytes, Stack size 64 bytes, treeview.o(i._LinkItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _LinkItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLastNodeItem
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_AttachItem
</UL>

<P><STRONG><a name="[58c]"></a>_ManageAutoScroll</STRONG> (Thumb, 406 bytes, Stack size 120 bytes, treeview.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[58d]"></a>_OnKey</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, treeview.o(i._OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = _OnKey &rArr; _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Expand
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_ITEM_Collapse
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleNode
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevVisibleItem
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextVisibleItem
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[593]"></a>_OnOwnerdraw_GetYSize</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, treeview.o(i._OnOwnerdraw_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _OnOwnerdraw_GetYSize &rArr; _GetBitmapPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmapPointer
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[594]"></a>_OnOwnerdraw_Paint</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, treeview.o(i._OnOwnerdraw_Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _OnOwnerdraw_Paint &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_OwnerDraw
</UL>

<P><STRONG><a name="[589]"></a>_OnPaint</STRONG> (Thumb, 428 bytes, Stack size 224 bytes, treeview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcDrawInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[58a]"></a>_OnTouch</STRONG> (Thumb, 408 bytes, Stack size 88 bytes, treeview.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _OnTouch &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipClosedItems
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ExpandItem
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CollapseItem
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_Callback
</UL>

<P><STRONG><a name="[595]"></a>_SetAutoScroll</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, treeview.o(i._SetAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = _SetAutoScroll &rArr; WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitRecalc
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TREEVIEW_SetAutoScrollV
</UL>

<P><STRONG><a name="[65d]"></a>_SetSel</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, treeview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = _SetSel &rArr; _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[604]"></a>_SkipClosedItems</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, treeview.o(i._SkipClosedItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SkipClosedItems
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcParams
</UL>

<P><STRONG><a name="[65c]"></a>_UpdateScrollPos</STRONG> (Thumb, 204 bytes, Stack size 72 bytes, treeview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _UpdateScrollPos &rArr; _GetVisibility &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetVisibility
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[5eb]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[5b0]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5e1]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBackWin
</UL>

<P><STRONG><a name="[5b3]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 136 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[5b2]"></a>_Exec1Input</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, wm.o(i._Exec1Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _Exec1Input &rArr; WM_DeleteWindow &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[5e5]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[640]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[641]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[63f]"></a>_Findy1</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[5ce]"></a>_Invalidate1Abs</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[106]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[5ec]"></a>_Paint1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[5ee]"></a>_Paint1Trans</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[5ed]"></a>_PaintTransChildren</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[5e0]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[105]"></a>_cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i._cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _cbBackWin &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[107]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[4f2]"></a>_DrawTwinArc4</STRONG> (Thumb, 370 bytes, Stack size 112 bytes, gui__drawtwinarc.o(i._DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawTwinArc4 &rArr; _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[4f4]"></a>_FillTrippleArc</STRONG> (Thumb, 572 bytes, Stack size 104 bytes, gui__drawtwinarc.o(i._FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _FillTrippleArc &rArr; _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[63e]"></a>_GetTrippleArcPara</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i._GetTrippleArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>

<P><STRONG><a name="[639]"></a>_GetTwinArcPara</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui__drawtwinarc.o(i._GetTwinArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>

<P><STRONG><a name="[18]"></a>_GetCursorCharacter</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui__getcursorpos.o(i._GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetCursorCharacter
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>_GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gui__getcursorpos.o(i._GetCursorPosChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetCursorPosChar &rArr; GUI_UC__NumBytes2NumChars
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>_GetCursorPosX</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, gui__getcursorpos.o(i._GetCursorPosX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetCursorPosX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[4e8]"></a>_DispLine</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DispLine &rArr; GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[19]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[475]"></a>_DrawGradient</STRONG> (Thumb, 382 bytes, Stack size 88 bytes, gui_drawgradient.o(i._DrawGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawGradient &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
</UL>

<P><STRONG><a name="[653]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[4bc]"></a>_IncReadPointer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_onkey.o(i._IncReadPointer))
<BR><BR>[Calls]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[667]"></a>_DecPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._DecPointer))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[4b7]"></a>_IncPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[4b9]"></a>_StoreState</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_pid.o(i._StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[4db]"></a>_Log2PhysX</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, gui_touch_calibrate.o(i._Log2PhysX))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalcCoefficients
</UL>

<P><STRONG><a name="[4dc]"></a>_Log2PhysY</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, gui_touch_calibrate.o(i._Log2PhysY))
<BR><BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_CalcCoefficients
</UL>

<P><STRONG><a name="[164]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[165]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[163]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[166]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>_Color2IndexBulk</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, guicc_565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>_Color2Index_565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_565.o(i._Color2Index_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>_GetIndexMask_565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_565.o(i._GetIndexMask_565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>_Index2ColorBulk</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, guicc_565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[4bf]"></a>LCD_ReadRectEx</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[62c]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[62d]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[62e]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[171]"></a>_DrawBitmap</STRONG> (Thumb, 664 bytes, Stack size 112 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[173]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[174]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[179]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[17a]"></a>_GetDevProp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[175]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[176]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[62b]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[177]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[630]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 276 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[631]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[623]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine32BPP_DDB &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[632]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[17d]"></a>_DrawBitmap</STRONG> (Thumb, 666 bytes, Stack size 104 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>_DrawVLine</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>_FillRect</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[185]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[186]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[181]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[184]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[182]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[62f]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[183]"></a>_XorPixel</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[4a1]"></a>_Min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[4a9]"></a>_CreateStaticDevice</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaPreserveTrans
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[3f1]"></a>_OnTouch</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, checkbox.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _OnTouch &rArr; CHECKBOX_SetState &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetState
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_Callback
</UL>

<P><STRONG><a name="[e8]"></a>_AddKeyDec</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, editdec.o(i._AddKeyDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _AddKeyDec &rArr; _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateBuffer
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementCursor
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecChar2Int
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPosition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> editdec.o(i.EDIT_SetDecMode)
</UL>
<P><STRONG><a name="[5fd]"></a>_AddPosition</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, editdec.o(i._AddPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _AddPosition &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[5f7]"></a>_DecChar2Int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, editdec.o(i._DecChar2Int))
<BR><BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EditDec
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[5f8]"></a>_EditDec</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, editdec.o(i._EditDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _EditDec &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecChar2Int
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[41a]"></a>_GetDecs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, editdec.o(i._GetDecs))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
</UL>

<P><STRONG><a name="[5fa]"></a>_IncrementCursor</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, editdec.o(i._IncrementCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _IncrementCursor &rArr; EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[5fb]"></a>_MakeNegative</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, editdec.o(i._MakeNegative))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _MakeNegative &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[5f9]"></a>_MakePositive</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, editdec.o(i._MakePositive))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _MakePositive &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapSign
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[5fc]"></a>_SwapSign</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, editdec.o(i._SwapSign))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _SwapSign &rArr; _MakePositive &rArr; EDIT_SetValue &rArr; _SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakePositive
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MakeNegative
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>

<P><STRONG><a name="[e9]"></a>_UpdateBuffer</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, editdec.o(i._UpdateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _UpdateBuffer &rArr; GUI_AddDecShift
</UL>
<BR>[Calls]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddSign
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDecMode
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKeyDec
</UL>
<BR>[Address Reference Count : 1]<UL><LI> editdec.o(i.EDIT_SetDecMode)
</UL>
<P><STRONG><a name="[64a]"></a>_GetDividerIndex</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, header.o(i._GetDividerIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _GetDividerIndex &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[502]"></a>_GetItemIndex</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._GetItemIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _GetItemIndex &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[503]"></a>_HandlePID</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, header.o(i._HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _HandlePID &rArr; _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[652]"></a>_LimitDragWitdh</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._LimitDragWitdh))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _LimitDragWitdh &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[504]"></a>_RestoreOldCursor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, header.o(i._RestoreOldCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[545]"></a>_GetSel</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listview_getsel.o(i._GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetSel
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
</UL>

<P><STRONG><a name="[59b]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[18b]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[18c]"></a>_DrawDownRect</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[18a]"></a>_DrawUpRect</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[18f]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[191]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[18e]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[5ba]"></a>_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_getscrollbar.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[5bc]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[5d3]"></a>WM__ReleaseCapture</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[5f1]"></a>_SetScrollbar</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, wm_setscrollbar.o(i._SetScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>

<P><STRONG><a name="[104]"></a>_cbTimer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[1f]"></a>_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetCharWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>_GetWordWrap</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetWordWrap &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[4fe]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[ea]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_curs1.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_curs1.o(i.GUI_CURSOR_SelectEx)
</UL>
<P><STRONG><a name="[458]"></a>_Show</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_curs1.o(i._Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _Show &rArr; GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[4d1]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[f0]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[4d3]"></a>_RemoveFromLinList</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_timer.o(i._RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[4d4]"></a>_Unlink</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[194]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[192]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[193]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[195]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[23]"></a>_NextPixel_End</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_End &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[65a]"></a>_NextPixel_FlushBuffer</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, lcd_nextpixelapi.o(i._NextPixel_FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _NextPixel_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_SetPixel
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_NextLine
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_End
</UL>

<P><STRONG><a name="[22]"></a>_NextPixel_NextLine</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_nextpixelapi.o(i._NextPixel_NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _NextPixel_NextLine &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>_NextPixel_SetPixel</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, lcd_nextpixelapi.o(i._NextPixel_SetPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _NextPixel_SetPixel &rArr; _NextPixel_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NextPixel_FlushBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>_NextPixel_Start</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lcd_nextpixelapi.o(i._NextPixel_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _NextPixel_Start &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_nextpixelapi.o(.data)
</UL>
<P><STRONG><a name="[197]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[198]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[611]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[613]"></a>_Convert8</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert8))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert8 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[4b4]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 824 bytes, Stack size 168 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert8
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[4b5]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 826 bytes, Stack size 144 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[25]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, checkbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>_Paint</STRONG> (Thumb, 144 bytes, Stack size 72 bytes, checkbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[3f4]"></a>_DrawBackground</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, checkbox_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3f5]"></a>_DrawBitmap</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, checkbox_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[3f8]"></a>_DrawFocus</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, checkbox_skinflex.o(i._DrawFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _DrawFocus &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[633]"></a>_GenCheck</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, checkbox_skinflex.o(i._GenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[643]"></a>_SetBitmapPixel_1bpp</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, checkbox_skinflex.o(i._SetBitmapPixel_1bpp))
<BR><BR>[Called By]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>

<P><STRONG><a name="[27]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, header_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>_Paint</STRONG> (Thumb, 272 bytes, Stack size 144 bytes, header_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[50d]"></a>_DrawArrow</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[50a]"></a>_DrawBackground</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[50b]"></a>_DrawBitmap</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmap &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[50e]"></a>_DrawOverlap</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawOverlap &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[50c]"></a>_DrawText</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, header_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _DrawText &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[61f]"></a>_GetArrowPara</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, header_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[19d]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[19e]"></a>_DrawDownRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[19b]"></a>_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_simple.o(i._DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>_DrawUpRect</STRONG> (Thumb, 50 bytes, Stack size 120 bytes, widget_effect_simple.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_simple.o(.constdata)
</UL>
<P><STRONG><a name="[5a6]"></a>_BringToTop</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, wm_bringtotop.o(i._BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[108]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i._BringToTop)
</UL>
<P><STRONG><a name="[5b6]"></a>_GetDialogItem</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm_getdialogitem.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>

<P><STRONG><a name="[5e9]"></a>_MoveDescendents</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[662]"></a>_Screen2hWin</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[5d5]"></a>_Screen2hWinStop</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i._Screen2hWinStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[60c]"></a>_ClipRectEx</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_sprite.o(i._ClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ClipRectEx &rArr; _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[616]"></a>_CreateBuffer</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4c7]"></a>_DoColorConversion</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gui_sprite.o(i._DoColorConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[19f]"></a>_DrawBitmap</STRONG> (Thumb, 970 bytes, Stack size 168 bytes, gui_sprite.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _DrawBitmap &rArr; _GetClipParam
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>_DrawHLine</STRONG> (Thumb, 444 bytes, Stack size 112 bytes, gui_sprite.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawHLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a1]"></a>_DrawVLine</STRONG> (Thumb, 424 bytes, Stack size 80 bytes, gui_sprite.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _DrawVLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>_FillRect</STRONG> (Thumb, 482 bytes, Stack size 120 bytes, gui_sprite.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _FillRect &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[642]"></a>_FlushBuffer</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, gui_sprite.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[644]"></a>_GetBkIndex</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndex &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[645]"></a>_GetBkIndexAlpha</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkIndexAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkIndexAlpha &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[634]"></a>_GetClipParam</STRONG> (Thumb, 320 bytes, Stack size 36 bytes, gui_sprite.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[635]"></a>_GetClipRect</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, gui_sprite.o(i._GetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1a9]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a7]"></a>_GetDevFunc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_sprite.o(i._GetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetDevFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a8]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[60d]"></a>_GetDeviceRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i._GetDeviceRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDeviceRect &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>

<P><STRONG><a name="[1a3]"></a>_GetPixelIndex</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gui_sprite.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1aa]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[4c5]"></a>_Link</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Link &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[64c]"></a>_PixelExists</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sprite.o(i._PixelExists))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>

<P><STRONG><a name="[661]"></a>_ReleaseBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ReleaseBuffer &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[665]"></a>_SetBkIndexBuffered</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_sprite.o(i._SetBkIndexBuffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _SetBkIndexBuffered &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[1a6]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[1a4]"></a>_SetPixelIndex</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, gui_sprite.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[4c3]"></a>_SetPosition</STRONG> (Thumb, 1110 bytes, Stack size 216 bytes, gui_sprite.o(i._SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDeviceRect
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[4c6]"></a>_SpriteDraw</STRONG> (Thumb, 484 bytes, Stack size 120 bytes, gui_sprite.o(i._SpriteDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndexAlpha
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkIndex
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[4c1]"></a>_Undraw</STRONG> (Thumb, 230 bytes, Stack size 96 bytes, gui_sprite.o(i._Undraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkIndexBuffered
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[4c2]"></a>_Unlink</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[1a5]"></a>_XorPixel</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, gui_sprite.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[619]"></a>_DeleteTimer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollbar.o(i._DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DeleteTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[569]"></a>_OnTimer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scrollbar.o(i._OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _OnTimer &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[566]"></a>_OnTouch</STRONG> (Thumb, 526 bytes, Stack size 104 bytes, scrollbar.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr;  WM_SendToParent (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[109]"></a>_CalcPositions</STRONG> (Thumb, 334 bytes, Stack size 96 bytes, scrollbar_skin.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(i._Create)
</UL>
<P><STRONG><a name="[2a]"></a>_Create</STRONG> (Thumb, 52 bytes, Stack size 64 bytes, scrollbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>_Paint</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, scrollbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[fe]"></a>_DrawBackgroundH</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundH))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[fb]"></a>_DrawBackgroundV</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundV))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[620]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[100]"></a>_DrawGraspH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspH))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[fd]"></a>_DrawGraspV</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspV))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[56e]"></a>_GetArrowPara</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scrollbar_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[66a]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>

<P><STRONG><a name="[135]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
